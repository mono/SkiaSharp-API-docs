<Type Name="SKGLControl" FullName="SkiaSharp.Views.Desktop.SKGLControl">
  <TypeSignature Language="C#" Value="public class SKGLControl : OpenTK.GLControl" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit SKGLControl extends OpenTK.GLControl" />
  <TypeSignature Language="DocId" Value="T:SkiaSharp.Views.Desktop.SKGLControl" />
  <AssemblyInfo>
    <AssemblyName>SkiaSharp.Views.Desktop</AssemblyName>
    <AssemblyVersion>1.60.0.0</AssemblyVersion>
    <AssemblyVersion>1.68.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>SkiaSharp.Views.WindowsForms</AssemblyName>
    <AssemblyVersion>1.68.0.0</AssemblyVersion>
    <AssemblyVersion>2.80.0.0</AssemblyVersion>
    <AssemblyVersion>2.88.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeForwardingChain>
    <TypeForwarding From="SkiaSharp.Views.Desktop" FromVersion="1.68.0.0" To="SkiaSharp.Views.WindowsForms" ToVersion="1.68.0.0" FrameworkAlternate="skiasharp-views-1.68" />
    <TypeForwarding From="SkiaSharp.Views.Desktop" FromVersion="2.80.0.0" To="SkiaSharp.Views.WindowsForms" ToVersion="2.80.0.0" FrameworkAlternate="skiasharp-views-2.80" />
    <TypeForwarding From="SkiaSharp.Views.Desktop" FromVersion="2.88.0.0" To="SkiaSharp.Views.WindowsForms" ToVersion="2.88.0.0" FrameworkAlternate="skiasharp-views-2.88" />
  </TypeForwardingChain>
  <Base>
    <BaseTypeName>OpenTK.GLControl</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[System.ComponentModel.DefaultEvent("PaintSurface")]</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName Language="C#">[System.ComponentModel.DefaultProperty("Name")]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>A hardware-accelerated control that can be drawn on using SkiaSharp drawing commands.</summary>
    <remarks></remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SKGLControl ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:SkiaSharp.Views.Desktop.SKGLControl.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>SkiaSharp.Views.Desktop</AssemblyName>
        <AssemblyVersion>1.60.0.0</AssemblyVersion>
        <AssemblyVersion>1.68.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>SkiaSharp.Views.WindowsForms</AssemblyName>
        <AssemblyVersion>1.68.0.0</AssemblyVersion>
        <AssemblyVersion>2.80.0.0</AssemblyVersion>
        <AssemblyVersion>2.88.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Creates a new instance of the <see cref="T:SkiaSharp.Views.Desktop.SKGLControl" /> view.</summary>
        <remarks></remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SKGLControl (OpenTK.Graphics.GraphicsMode mode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class OpenTK.Graphics.GraphicsMode mode) cil managed" />
      <MemberSignature Language="DocId" Value="M:SkiaSharp.Views.Desktop.SKGLControl.#ctor(OpenTK.Graphics.GraphicsMode)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>SkiaSharp.Views.Desktop</AssemblyName>
        <AssemblyVersion>1.60.0.0</AssemblyVersion>
        <AssemblyVersion>1.68.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>SkiaSharp.Views.WindowsForms</AssemblyName>
        <AssemblyVersion>1.68.0.0</AssemblyVersion>
        <AssemblyVersion>2.80.0.0</AssemblyVersion>
        <AssemblyVersion>2.88.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="mode" Type="OpenTK.Graphics.GraphicsMode" />
      </Parameters>
      <Docs>
        <param name="mode">The OpenTK.Graphics.GraphicsMode of the control.</param>
        <summary>Creates a new instance of the <see cref="T:SkiaSharp.Views.Desktop.SKGLControl" /> view.</summary>
        <remarks></remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SKGLControl (OpenTK.Graphics.GraphicsMode mode, int major, int minor, OpenTK.Graphics.GraphicsContextFlags flags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class OpenTK.Graphics.GraphicsMode mode, int32 major, int32 minor, valuetype OpenTK.Graphics.GraphicsContextFlags flags) cil managed" />
      <MemberSignature Language="DocId" Value="M:SkiaSharp.Views.Desktop.SKGLControl.#ctor(OpenTK.Graphics.GraphicsMode,System.Int32,System.Int32,OpenTK.Graphics.GraphicsContextFlags)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>SkiaSharp.Views.Desktop</AssemblyName>
        <AssemblyVersion>1.60.0.0</AssemblyVersion>
        <AssemblyVersion>1.68.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>SkiaSharp.Views.WindowsForms</AssemblyName>
        <AssemblyVersion>1.68.0.0</AssemblyVersion>
        <AssemblyVersion>2.80.0.0</AssemblyVersion>
        <AssemblyVersion>2.88.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="mode" Type="OpenTK.Graphics.GraphicsMode" />
        <Parameter Name="major" Type="System.Int32" />
        <Parameter Name="minor" Type="System.Int32" />
        <Parameter Name="flags" Type="OpenTK.Graphics.GraphicsContextFlags" />
      </Parameters>
      <Docs>
        <param name="mode">The OpenTK.Graphics.GraphicsMode of the control.</param>
        <param name="major">The major version for the OpenGL GraphicsContext.</param>
        <param name="minor">The minor version for the OpenGL GraphicsContext.</param>
        <param name="flags">The GraphicsContextFlags for the OpenGL GraphicsContext.</param>
        <summary>Creates a new instance of the <see cref="T:SkiaSharp.Views.Desktop.SKGLControl" /> view.</summary>
        <remarks></remarks>
      </Docs>
    </Member>
    <Member MemberName="CanvasSize">
      <MemberSignature Language="C#" Value="public SkiaSharp.SKSize CanvasSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype SkiaSharp.SKSize CanvasSize" />
      <MemberSignature Language="DocId" Value="P:SkiaSharp.Views.Desktop.SKGLControl.CanvasSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>SkiaSharp.Views.Desktop</AssemblyName>
        <AssemblyVersion>1.60.0.0</AssemblyVersion>
        <AssemblyVersion>1.68.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>SkiaSharp.Views.WindowsForms</AssemblyName>
        <AssemblyVersion>1.68.0.0</AssemblyVersion>
        <AssemblyVersion>2.80.0.0</AssemblyVersion>
        <AssemblyVersion>2.88.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="skiasharp-views-1.60;skiasharp-views-1.68;skiasharp-views-2.80">
          <AttributeName Language="C#">[System.ComponentModel.Bindable(false)]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="skiasharp-views-1.60;skiasharp-views-1.68;skiasharp-views-2.80">
          <AttributeName Language="C#">[System.ComponentModel.Browsable(false)]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="skiasharp-views-1.60;skiasharp-views-1.68;skiasharp-views-2.80">
          <AttributeName Language="C#">[System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="skiasharp-views-1.60;skiasharp-views-1.68;skiasharp-views-2.80">
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>SkiaSharp.SKSize</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the current canvas size.</summary>
        <value></value>
        <remarks>The canvas size may be different to the view size as a result of the current device's pixel density.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:SkiaSharp.Views.Desktop.SKGLControl.Dispose(System.Boolean)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>SkiaSharp.Views.Desktop</AssemblyName>
        <AssemblyVersion>1.60.0.0</AssemblyVersion>
        <AssemblyVersion>1.68.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>SkiaSharp.Views.WindowsForms</AssemblyName>
        <AssemblyVersion>1.68.0.0</AssemblyVersion>
        <AssemblyVersion>2.80.0.0</AssemblyVersion>
        <AssemblyVersion>2.88.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">
          <see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</param>
        <summary>Releases the unmanaged resources used by the <see cref="T:SkiaSharp.Views.Desktop.SKGLControl" /> and optionally releases the managed resources.</summary>
        <remarks>Always dispose the object before you release your last reference to the <see cref="T:SkiaSharp.Views.Desktop.SKGLControl" />. Otherwise, the resources it is using will not be freed until the garbage collector calls the finalizer.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GRContext">
      <MemberSignature Language="C#" Value="public SkiaSharp.GRContext GRContext { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class SkiaSharp.GRContext GRContext" />
      <MemberSignature Language="DocId" Value="P:SkiaSharp.Views.Desktop.SKGLControl.GRContext" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>SkiaSharp.Views.Desktop</AssemblyName>
        <AssemblyVersion>1.60.0.0</AssemblyVersion>
        <AssemblyVersion>1.68.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>SkiaSharp.Views.WindowsForms</AssemblyName>
        <AssemblyVersion>1.68.0.0</AssemblyVersion>
        <AssemblyVersion>2.80.0.0</AssemblyVersion>
        <AssemblyVersion>2.88.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="skiasharp-views-1.60;skiasharp-views-1.68;skiasharp-views-2.80">
          <AttributeName Language="C#">[System.ComponentModel.Bindable(false)]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="skiasharp-views-1.60;skiasharp-views-1.68;skiasharp-views-2.80">
          <AttributeName Language="C#">[System.ComponentModel.Browsable(false)]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="skiasharp-views-1.60;skiasharp-views-1.68;skiasharp-views-2.80">
          <AttributeName Language="C#">[System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="skiasharp-views-1.60;skiasharp-views-1.68;skiasharp-views-2.80">
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>SkiaSharp.GRContext</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the current GPU context.</summary>
        <value></value>
        <remarks></remarks>
      </Docs>
    </Member>
    <Member MemberName="OnPaint">
      <MemberSignature Language="C#" Value="protected override void OnPaint (System.Windows.Forms.PaintEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnPaint(class System.Windows.Forms.PaintEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:SkiaSharp.Views.Desktop.SKGLControl.OnPaint(System.Windows.Forms.PaintEventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>SkiaSharp.Views.Desktop</AssemblyName>
        <AssemblyVersion>1.60.0.0</AssemblyVersion>
        <AssemblyVersion>1.68.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>SkiaSharp.Views.WindowsForms</AssemblyName>
        <AssemblyVersion>1.68.0.0</AssemblyVersion>
        <AssemblyVersion>2.80.0.0</AssemblyVersion>
        <AssemblyVersion>2.88.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.PaintEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">A PaintEventArgs that contains the event data.</param>
        <summary>Raises the Paint event.</summary>
        <remarks></remarks>
      </Docs>
    </Member>
    <Member MemberName="OnPaintSurface">
      <MemberSignature Language="C#" Value="protected virtual void OnPaintSurface (SkiaSharp.Views.Desktop.SKPaintGLSurfaceEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnPaintSurface(class SkiaSharp.Views.Desktop.SKPaintGLSurfaceEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:SkiaSharp.Views.Desktop.SKGLControl.OnPaintSurface(SkiaSharp.Views.Desktop.SKPaintGLSurfaceEventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>SkiaSharp.Views.Desktop</AssemblyName>
        <AssemblyVersion>1.60.0.0</AssemblyVersion>
        <AssemblyVersion>1.68.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>SkiaSharp.Views.WindowsForms</AssemblyName>
        <AssemblyVersion>1.68.0.0</AssemblyVersion>
        <AssemblyVersion>2.80.0.0</AssemblyVersion>
        <AssemblyVersion>2.88.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="SkiaSharp.Views.Desktop.SKPaintGLSurfaceEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">The event arguments that contain the drawing surface and information.</param>
        <summary>Implement this to draw on the canvas.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[
## Remarks

There are two ways to draw on this surface: by overriding the
<xref:SkiaSharp.Views.Desktop.SKGLControl.OnPaintSurface(SkiaSharp.Views.Desktop.SKPaintGLSurfaceEventArgs)>
method, or by attaching a handler to the
<xref:SkiaSharp.Views.Desktop.SKGLControl.PaintSurface>
event. If the method is overridden, then the base must be called.

> [!IMPORTANT]
> If this method is overridden, then the base must be called, otherwise the
> event will not be fired.

## Examples

```csharp
protected override void OnPaintSurface (SKPaintGLSurfaceEventArgs e)
{
    // call the base method
    base.OnPaintSurface (e);

    var surface = e.Surface;
    var surfaceWidth = e.BackendRenderTarget.Width;
    var surfaceHeight = e.BackendRenderTarget.Height;

    var canvas = surface.Canvas;

    // draw on the canvas

    canvas.Flush ();
}
```
]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PaintSurface">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;SkiaSharp.Views.Desktop.SKPaintGLSurfaceEventArgs&gt; PaintSurface;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class SkiaSharp.Views.Desktop.SKPaintGLSurfaceEventArgs&gt; PaintSurface" />
      <MemberSignature Language="DocId" Value="E:SkiaSharp.Views.Desktop.SKGLControl.PaintSurface" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>SkiaSharp.Views.Desktop</AssemblyName>
        <AssemblyVersion>1.60.0.0</AssemblyVersion>
        <AssemblyVersion>1.68.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>SkiaSharp.Views.WindowsForms</AssemblyName>
        <AssemblyVersion>1.68.0.0</AssemblyVersion>
        <AssemblyVersion>2.80.0.0</AssemblyVersion>
        <AssemblyVersion>2.88.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.Category("Appearance")]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;SkiaSharp.Views.Desktop.SKPaintGLSurfaceEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Occurs when the surface needs to be redrawn.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[
## Remarks

There are two ways to draw on this surface: by overriding the
<xref:SkiaSharp.Views.Desktop.SKGLControl.OnPaintSurface(SkiaSharp.Views.Desktop.SKPaintGLSurfaceEventArgs)>
method, or by attaching a handler to the
<xref:SkiaSharp.Views.Desktop.SKGLControl.PaintSurface>
event.

## Examples

```csharp
myView.PaintSurface += (sender, e) => {
    var surface = e.Surface;
    var surfaceWidth = e.BackendRenderTarget.Width;
    var surfaceHeight = e.BackendRenderTarget.Height;

    var canvas = surface.Canvas;

    // draw on the canvas

    canvas.Flush ();
};
```
]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
