<Type Name="Font" FullName="HarfBuzzSharp.Font">
  <TypeSignature Language="C#" Value="public class Font : HarfBuzzSharp.NativeObject" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit Font extends HarfBuzzSharp.NativeObject" />
  <TypeSignature Language="DocId" Value="T:HarfBuzzSharp.Font" />
  <AssemblyInfo>
    <AssemblyName>HarfBuzzSharp</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>HarfBuzzSharp.NativeObject</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Represents a specific font face.</summary>
    <remarks></remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Font (HarfBuzzSharp.Face face);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class HarfBuzzSharp.Face face) cil managed" />
      <MemberSignature Language="DocId" Value="M:HarfBuzzSharp.Font.#ctor(HarfBuzzSharp.Face)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>HarfBuzzSharp</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="face" Type="HarfBuzzSharp.Face" />
      </Parameters>
      <Docs>
        <param name="face">The face to use.</param>
        <summary>Creates a new <see cref="T:HarfBuzzSharp.Font" /> using a specific font face.</summary>
        <remarks></remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Font (HarfBuzzSharp.Font parent);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class HarfBuzzSharp.Font parent) cil managed" />
      <MemberSignature Language="DocId" Value="M:HarfBuzzSharp.Font.#ctor(HarfBuzzSharp.Font)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>HarfBuzzSharp</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="parent" Type="HarfBuzzSharp.Font" Index="0" FrameworkAlternate="harfbuzzsharp-2.6;harfbuzzsharp-2.8;harfbuzzsharp-7.3" />
      </Parameters>
      <Docs>
        <param name="parent">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:HarfBuzzSharp.Font.Dispose(System.Boolean)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>HarfBuzzSharp</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">
          <see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</param>
        <summary>Releases the unmanaged resources used by the <see cref="T:HarfBuzzSharp.Font" /> and optionally releases the managed resources.</summary>
        <remarks>Always dispose the object before you release your last reference to the <see cref="T:HarfBuzzSharp.Font" />. Otherwise, the resources it is using will not be freed until the garbage collector calls the finalizer.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DisposeHandler">
      <MemberSignature Language="C#" Value="protected override void DisposeHandler ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void DisposeHandler() cil managed" />
      <MemberSignature Language="DocId" Value="M:HarfBuzzSharp.Font.DisposeHandler" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>HarfBuzzSharp</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Releases the unmanaged resources used.</summary>
        <remarks></remarks>
      </Docs>
    </Member>
    <Member MemberName="GetFontExtentsForDirection">
      <MemberSignature Language="C#" Value="public HarfBuzzSharp.FontExtents GetFontExtentsForDirection (HarfBuzzSharp.Direction direction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype HarfBuzzSharp.FontExtents GetFontExtentsForDirection(valuetype HarfBuzzSharp.Direction direction) cil managed" />
      <MemberSignature Language="DocId" Value="M:HarfBuzzSharp.Font.GetFontExtentsForDirection(HarfBuzzSharp.Direction)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>HarfBuzzSharp</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>HarfBuzzSharp.FontExtents</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="direction" Type="HarfBuzzSharp.Direction" Index="0" FrameworkAlternate="harfbuzzsharp-2.6;harfbuzzsharp-2.8;harfbuzzsharp-7.3" />
      </Parameters>
      <Docs>
        <param name="direction">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetGlyphAdvanceForDirection">
      <MemberSignature Language="C#" Value="public void GetGlyphAdvanceForDirection (uint glyph, HarfBuzzSharp.Direction direction, out int x, out int y);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void GetGlyphAdvanceForDirection(unsigned int32 glyph, valuetype HarfBuzzSharp.Direction direction, [out] int32&amp; x, [out] int32&amp; y) cil managed" />
      <MemberSignature Language="DocId" Value="M:HarfBuzzSharp.Font.GetGlyphAdvanceForDirection(System.UInt32,HarfBuzzSharp.Direction,System.Int32@,System.Int32@)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>HarfBuzzSharp</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="glyph" Type="System.UInt32" Index="0" FrameworkAlternate="harfbuzzsharp-2.6;harfbuzzsharp-2.8;harfbuzzsharp-7.3" />
        <Parameter Name="direction" Type="HarfBuzzSharp.Direction" Index="1" FrameworkAlternate="harfbuzzsharp-2.6;harfbuzzsharp-2.8;harfbuzzsharp-7.3" />
        <Parameter Name="x" Type="System.Int32" RefType="out" Index="2" FrameworkAlternate="harfbuzzsharp-2.6;harfbuzzsharp-2.8;harfbuzzsharp-7.3" />
        <Parameter Name="y" Type="System.Int32" RefType="out" Index="3" FrameworkAlternate="harfbuzzsharp-2.6;harfbuzzsharp-2.8;harfbuzzsharp-7.3" />
      </Parameters>
      <Docs>
        <param name="glyph">To be added.</param>
        <param name="direction">To be added.</param>
        <param name="x">To be added.</param>
        <param name="y">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetGlyphAdvancesForDirection">
      <MemberSignature Language="C#" Value="public int[] GetGlyphAdvancesForDirection (ReadOnlySpan&lt;uint&gt; glyphs, HarfBuzzSharp.Direction direction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32[] GetGlyphAdvancesForDirection(valuetype System.ReadOnlySpan`1&lt;unsigned int32&gt; glyphs, valuetype HarfBuzzSharp.Direction direction) cil managed" />
      <MemberSignature Language="DocId" Value="M:HarfBuzzSharp.Font.GetGlyphAdvancesForDirection(System.ReadOnlySpan{System.UInt32},HarfBuzzSharp.Direction)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>HarfBuzzSharp</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="glyphs" Type="System.ReadOnlySpan&lt;System.UInt32&gt;" Index="0" FrameworkAlternate="harfbuzzsharp-2.6;harfbuzzsharp-2.8;harfbuzzsharp-7.3" />
        <Parameter Name="direction" Type="HarfBuzzSharp.Direction" Index="1" FrameworkAlternate="harfbuzzsharp-2.6;harfbuzzsharp-2.8;harfbuzzsharp-7.3" />
      </Parameters>
      <Docs>
        <param name="glyphs">To be added.</param>
        <param name="direction">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetGlyphAdvancesForDirection">
      <MemberSignature Language="C#" Value="public int[] GetGlyphAdvancesForDirection (IntPtr firstGlyph, int count, HarfBuzzSharp.Direction direction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32[] GetGlyphAdvancesForDirection(native int firstGlyph, int32 count, valuetype HarfBuzzSharp.Direction direction) cil managed" />
      <MemberSignature Language="DocId" Value="M:HarfBuzzSharp.Font.GetGlyphAdvancesForDirection(System.IntPtr,System.Int32,HarfBuzzSharp.Direction)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>HarfBuzzSharp</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="firstGlyph" Type="System.IntPtr" Index="0" FrameworkAlternate="harfbuzzsharp-2.6;harfbuzzsharp-2.8;harfbuzzsharp-7.3" />
        <Parameter Name="count" Type="System.Int32" Index="1" FrameworkAlternate="harfbuzzsharp-2.6;harfbuzzsharp-2.8;harfbuzzsharp-7.3" />
        <Parameter Name="direction" Type="HarfBuzzSharp.Direction" Index="2" FrameworkAlternate="harfbuzzsharp-2.6;harfbuzzsharp-2.8;harfbuzzsharp-7.3" />
      </Parameters>
      <Docs>
        <param name="firstGlyph">To be added.</param>
        <param name="count">To be added.</param>
        <param name="direction">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHorizontalGlyphAdvance">
      <MemberSignature Language="C#" Value="public int GetHorizontalGlyphAdvance (uint glyph);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 GetHorizontalGlyphAdvance(unsigned int32 glyph) cil managed" />
      <MemberSignature Language="DocId" Value="M:HarfBuzzSharp.Font.GetHorizontalGlyphAdvance(System.UInt32)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>HarfBuzzSharp</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="glyph" Type="System.UInt32" Index="0" FrameworkAlternate="harfbuzzsharp-2.6;harfbuzzsharp-2.8;harfbuzzsharp-7.3" />
      </Parameters>
      <Docs>
        <param name="glyph">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHorizontalGlyphAdvances">
      <MemberSignature Language="C#" Value="public int[] GetHorizontalGlyphAdvances (ReadOnlySpan&lt;uint&gt; glyphs);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32[] GetHorizontalGlyphAdvances(valuetype System.ReadOnlySpan`1&lt;unsigned int32&gt; glyphs) cil managed" />
      <MemberSignature Language="DocId" Value="M:HarfBuzzSharp.Font.GetHorizontalGlyphAdvances(System.ReadOnlySpan{System.UInt32})" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>HarfBuzzSharp</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="glyphs" Type="System.ReadOnlySpan&lt;System.UInt32&gt;" Index="0" FrameworkAlternate="harfbuzzsharp-2.6;harfbuzzsharp-2.8;harfbuzzsharp-7.3" />
      </Parameters>
      <Docs>
        <param name="glyphs">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHorizontalGlyphAdvances">
      <MemberSignature Language="C#" Value="public int[] GetHorizontalGlyphAdvances (IntPtr firstGlyph, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32[] GetHorizontalGlyphAdvances(native int firstGlyph, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:HarfBuzzSharp.Font.GetHorizontalGlyphAdvances(System.IntPtr,System.Int32)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>HarfBuzzSharp</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="firstGlyph" Type="System.IntPtr" Index="0" FrameworkAlternate="harfbuzzsharp-2.6;harfbuzzsharp-2.8;harfbuzzsharp-7.3" />
        <Parameter Name="count" Type="System.Int32" Index="1" FrameworkAlternate="harfbuzzsharp-2.6;harfbuzzsharp-2.8;harfbuzzsharp-7.3" />
      </Parameters>
      <Docs>
        <param name="firstGlyph">To be added.</param>
        <param name="count">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHorizontalGlyphKerning">
      <MemberSignature Language="C#" Value="public int GetHorizontalGlyphKerning (uint leftGlyph, uint rightGlyph);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 GetHorizontalGlyphKerning(unsigned int32 leftGlyph, unsigned int32 rightGlyph) cil managed" />
      <MemberSignature Language="DocId" Value="M:HarfBuzzSharp.Font.GetHorizontalGlyphKerning(System.UInt32,System.UInt32)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>HarfBuzzSharp</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="leftGlyph" Type="System.UInt32" Index="0" FrameworkAlternate="harfbuzzsharp-2.6;harfbuzzsharp-2.8;harfbuzzsharp-7.3" />
        <Parameter Name="rightGlyph" Type="System.UInt32" Index="1" FrameworkAlternate="harfbuzzsharp-2.6;harfbuzzsharp-2.8;harfbuzzsharp-7.3" />
      </Parameters>
      <Docs>
        <param name="leftGlyph">To be added.</param>
        <param name="rightGlyph">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetScale">
      <MemberSignature Language="C#" Value="public void GetScale (out int xScale, out int yScale);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void GetScale([out] int32&amp; xScale, [out] int32&amp; yScale) cil managed" />
      <MemberSignature Language="DocId" Value="M:HarfBuzzSharp.Font.GetScale(System.Int32@,System.Int32@)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>HarfBuzzSharp</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="xScale" Type="System.Int32" RefType="out" />
        <Parameter Name="yScale" Type="System.Int32" RefType="out" />
      </Parameters>
      <Docs>
        <param name="xScale">The scale along the x-axis.</param>
        <param name="yScale">The scale along the y-axis.</param>
        <summary>Retrieves the font scale.</summary>
        <remarks></remarks>
      </Docs>
    </Member>
    <Member MemberName="GetVerticalGlyphAdvance">
      <MemberSignature Language="C#" Value="public int GetVerticalGlyphAdvance (uint glyph);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 GetVerticalGlyphAdvance(unsigned int32 glyph) cil managed" />
      <MemberSignature Language="DocId" Value="M:HarfBuzzSharp.Font.GetVerticalGlyphAdvance(System.UInt32)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>HarfBuzzSharp</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="glyph" Type="System.UInt32" Index="0" FrameworkAlternate="harfbuzzsharp-2.6;harfbuzzsharp-2.8;harfbuzzsharp-7.3" />
      </Parameters>
      <Docs>
        <param name="glyph">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetVerticalGlyphAdvances">
      <MemberSignature Language="C#" Value="public int[] GetVerticalGlyphAdvances (ReadOnlySpan&lt;uint&gt; glyphs);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32[] GetVerticalGlyphAdvances(valuetype System.ReadOnlySpan`1&lt;unsigned int32&gt; glyphs) cil managed" />
      <MemberSignature Language="DocId" Value="M:HarfBuzzSharp.Font.GetVerticalGlyphAdvances(System.ReadOnlySpan{System.UInt32})" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>HarfBuzzSharp</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="glyphs" Type="System.ReadOnlySpan&lt;System.UInt32&gt;" Index="0" FrameworkAlternate="harfbuzzsharp-2.6;harfbuzzsharp-2.8;harfbuzzsharp-7.3" />
      </Parameters>
      <Docs>
        <param name="glyphs">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetVerticalGlyphAdvances">
      <MemberSignature Language="C#" Value="public int[] GetVerticalGlyphAdvances (IntPtr firstGlyph, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32[] GetVerticalGlyphAdvances(native int firstGlyph, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:HarfBuzzSharp.Font.GetVerticalGlyphAdvances(System.IntPtr,System.Int32)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>HarfBuzzSharp</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="firstGlyph" Type="System.IntPtr" Index="0" FrameworkAlternate="harfbuzzsharp-2.6;harfbuzzsharp-2.8;harfbuzzsharp-7.3" />
        <Parameter Name="count" Type="System.Int32" Index="1" FrameworkAlternate="harfbuzzsharp-2.6;harfbuzzsharp-2.8;harfbuzzsharp-7.3" />
      </Parameters>
      <Docs>
        <param name="firstGlyph">To be added.</param>
        <param name="count">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GlyphToString">
      <MemberSignature Language="C#" Value="public string GlyphToString (uint glyph);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GlyphToString(unsigned int32 glyph) cil managed" />
      <MemberSignature Language="DocId" Value="M:HarfBuzzSharp.Font.GlyphToString(System.UInt32)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>HarfBuzzSharp</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="glyph" Type="System.UInt32" Index="0" FrameworkAlternate="harfbuzzsharp-2.6;harfbuzzsharp-2.8;harfbuzzsharp-7.3" />
      </Parameters>
      <Docs>
        <param name="glyph">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OpenTypeMetrics">
      <MemberSignature Language="C#" Value="public HarfBuzzSharp.OpenTypeMetrics OpenTypeMetrics { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class HarfBuzzSharp.OpenTypeMetrics OpenTypeMetrics" />
      <MemberSignature Language="DocId" Value="P:HarfBuzzSharp.Font.OpenTypeMetrics" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>HarfBuzzSharp</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>HarfBuzzSharp.OpenTypeMetrics</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Parent">
      <MemberSignature Language="C#" Value="public HarfBuzzSharp.Font Parent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class HarfBuzzSharp.Font Parent" />
      <MemberSignature Language="DocId" Value="P:HarfBuzzSharp.Font.Parent" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>HarfBuzzSharp</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>HarfBuzzSharp.Font</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetFontFunctions">
      <MemberSignature Language="C#" Value="public void SetFontFunctions (HarfBuzzSharp.FontFunctions fontFunctions);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetFontFunctions(class HarfBuzzSharp.FontFunctions fontFunctions) cil managed" />
      <MemberSignature Language="DocId" Value="M:HarfBuzzSharp.Font.SetFontFunctions(HarfBuzzSharp.FontFunctions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>HarfBuzzSharp</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fontFunctions" Type="HarfBuzzSharp.FontFunctions" Index="0" FrameworkAlternate="harfbuzzsharp-2.6;harfbuzzsharp-2.8;harfbuzzsharp-7.3" />
      </Parameters>
      <Docs>
        <param name="fontFunctions">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetFontFunctions">
      <MemberSignature Language="C#" Value="public void SetFontFunctions (HarfBuzzSharp.FontFunctions fontFunctions, object fontData);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetFontFunctions(class HarfBuzzSharp.FontFunctions fontFunctions, object fontData) cil managed" />
      <MemberSignature Language="DocId" Value="M:HarfBuzzSharp.Font.SetFontFunctions(HarfBuzzSharp.FontFunctions,System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>HarfBuzzSharp</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fontFunctions" Type="HarfBuzzSharp.FontFunctions" Index="0" FrameworkAlternate="harfbuzzsharp-2.6;harfbuzzsharp-2.8;harfbuzzsharp-7.3" />
        <Parameter Name="fontData" Type="System.Object" Index="1" FrameworkAlternate="harfbuzzsharp-2.6;harfbuzzsharp-2.8;harfbuzzsharp-7.3" />
      </Parameters>
      <Docs>
        <param name="fontFunctions">To be added.</param>
        <param name="fontData">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetFontFunctions">
      <MemberSignature Language="C#" Value="public void SetFontFunctions (HarfBuzzSharp.FontFunctions fontFunctions, object fontData, HarfBuzzSharp.ReleaseDelegate destroy);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetFontFunctions(class HarfBuzzSharp.FontFunctions fontFunctions, object fontData, class HarfBuzzSharp.ReleaseDelegate destroy) cil managed" />
      <MemberSignature Language="DocId" Value="M:HarfBuzzSharp.Font.SetFontFunctions(HarfBuzzSharp.FontFunctions,System.Object,HarfBuzzSharp.ReleaseDelegate)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>HarfBuzzSharp</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fontFunctions" Type="HarfBuzzSharp.FontFunctions" Index="0" FrameworkAlternate="harfbuzzsharp-2.6;harfbuzzsharp-2.8;harfbuzzsharp-7.3" />
        <Parameter Name="fontData" Type="System.Object" Index="1" FrameworkAlternate="harfbuzzsharp-2.6;harfbuzzsharp-2.8;harfbuzzsharp-7.3" />
        <Parameter Name="destroy" Type="HarfBuzzSharp.ReleaseDelegate" Index="2" FrameworkAlternate="harfbuzzsharp-2.6;harfbuzzsharp-2.8;harfbuzzsharp-7.3" />
      </Parameters>
      <Docs>
        <param name="fontFunctions">To be added.</param>
        <param name="fontData">To be added.</param>
        <param name="destroy">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetFunctionsOpenType">
      <MemberSignature Language="C#" Value="public void SetFunctionsOpenType ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetFunctionsOpenType() cil managed" />
      <MemberSignature Language="DocId" Value="M:HarfBuzzSharp.Font.SetFunctionsOpenType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>HarfBuzzSharp</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Sets the font functions to that of OpenType.</summary>
        <remarks></remarks>
      </Docs>
    </Member>
    <Member MemberName="SetScale">
      <MemberSignature Language="C#" Value="public void SetScale (int xScale, int yScale);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetScale(int32 xScale, int32 yScale) cil managed" />
      <MemberSignature Language="DocId" Value="M:HarfBuzzSharp.Font.SetScale(System.Int32,System.Int32)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>HarfBuzzSharp</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="xScale" Type="System.Int32" />
        <Parameter Name="yScale" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="xScale">The scale along the x-axis.</param>
        <param name="yScale">The scale along the y-axis.</param>
        <summary>Sets the font scale.</summary>
        <remarks></remarks>
      </Docs>
    </Member>
    <Member MemberName="Shape">
      <MemberSignature Language="C#" Value="public void Shape (HarfBuzzSharp.Buffer buffer, params HarfBuzzSharp.Feature[] features);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Shape(class HarfBuzzSharp.Buffer buffer, valuetype HarfBuzzSharp.Feature[] features) cil managed" />
      <MemberSignature Language="DocId" Value="M:HarfBuzzSharp.Font.Shape(HarfBuzzSharp.Buffer,HarfBuzzSharp.Feature[])" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>HarfBuzzSharp</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="HarfBuzzSharp.Buffer" />
        <Parameter Name="features" Type="HarfBuzzSharp.Feature[]">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.ParamArray]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="buffer">The buffer to shape.</param>
        <param name="features">The features to control the shaping process.</param>
        <summary>Shapes the specified buffer using the current font.</summary>
        <remarks></remarks>
      </Docs>
    </Member>
    <Member MemberName="Shape">
      <MemberSignature Language="C#" Value="public void Shape (HarfBuzzSharp.Buffer buffer, System.Collections.Generic.IReadOnlyList&lt;HarfBuzzSharp.Feature&gt; features, System.Collections.Generic.IReadOnlyList&lt;string&gt; shapers);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Shape(class HarfBuzzSharp.Buffer buffer, class System.Collections.Generic.IReadOnlyList`1&lt;valuetype HarfBuzzSharp.Feature&gt; features, class System.Collections.Generic.IReadOnlyList`1&lt;string&gt; shapers) cil managed" />
      <MemberSignature Language="DocId" Value="M:HarfBuzzSharp.Font.Shape(HarfBuzzSharp.Buffer,System.Collections.Generic.IReadOnlyList{HarfBuzzSharp.Feature},System.Collections.Generic.IReadOnlyList{System.String})" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>HarfBuzzSharp</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="HarfBuzzSharp.Buffer" Index="0" FrameworkAlternate="harfbuzzsharp-2.6;harfbuzzsharp-2.8;harfbuzzsharp-7.3" />
        <Parameter Name="features" Type="System.Collections.Generic.IReadOnlyList&lt;HarfBuzzSharp.Feature&gt;" Index="1" FrameworkAlternate="harfbuzzsharp-2.6;harfbuzzsharp-2.8;harfbuzzsharp-7.3" />
        <Parameter Name="shapers" Type="System.Collections.Generic.IReadOnlyList&lt;System.String&gt;" Index="2" FrameworkAlternate="harfbuzzsharp-2.6;harfbuzzsharp-2.8;harfbuzzsharp-7.3" />
      </Parameters>
      <Docs>
        <param name="buffer">To be added.</param>
        <param name="features">To be added.</param>
        <param name="shapers">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SupportedShapers">
      <MemberSignature Language="C#" Value="public string[] SupportedShapers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string[] SupportedShapers" />
      <MemberSignature Language="DocId" Value="P:HarfBuzzSharp.Font.SupportedShapers" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>HarfBuzzSharp</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryGetGlyph">
      <MemberSignature Language="C#" Value="public bool TryGetGlyph (int unicode, out uint glyph);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryGetGlyph(int32 unicode, [out] unsigned int32&amp; glyph) cil managed" />
      <MemberSignature Language="DocId" Value="M:HarfBuzzSharp.Font.TryGetGlyph(System.Int32,System.UInt32@)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>HarfBuzzSharp</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="unicode" Type="System.Int32" Index="0" FrameworkAlternate="harfbuzzsharp-2.6;harfbuzzsharp-2.8;harfbuzzsharp-7.3" />
        <Parameter Name="glyph" Type="System.UInt32" RefType="out" Index="1" FrameworkAlternate="harfbuzzsharp-2.6;harfbuzzsharp-2.8;harfbuzzsharp-7.3" />
      </Parameters>
      <Docs>
        <param name="unicode">To be added.</param>
        <param name="glyph">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryGetGlyph">
      <MemberSignature Language="C#" Value="public bool TryGetGlyph (uint unicode, out uint glyph);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryGetGlyph(unsigned int32 unicode, [out] unsigned int32&amp; glyph) cil managed" />
      <MemberSignature Language="DocId" Value="M:HarfBuzzSharp.Font.TryGetGlyph(System.UInt32,System.UInt32@)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>HarfBuzzSharp</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="unicode" Type="System.UInt32" Index="0" FrameworkAlternate="harfbuzzsharp-2.6;harfbuzzsharp-2.8;harfbuzzsharp-7.3" />
        <Parameter Name="glyph" Type="System.UInt32" RefType="out" Index="1" FrameworkAlternate="harfbuzzsharp-2.6;harfbuzzsharp-2.8;harfbuzzsharp-7.3" />
      </Parameters>
      <Docs>
        <param name="unicode">To be added.</param>
        <param name="glyph">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryGetGlyph">
      <MemberSignature Language="C#" Value="public bool TryGetGlyph (int unicode, uint variationSelector, out uint glyph);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryGetGlyph(int32 unicode, unsigned int32 variationSelector, [out] unsigned int32&amp; glyph) cil managed" />
      <MemberSignature Language="DocId" Value="M:HarfBuzzSharp.Font.TryGetGlyph(System.Int32,System.UInt32,System.UInt32@)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>HarfBuzzSharp</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="unicode" Type="System.Int32" Index="0" FrameworkAlternate="harfbuzzsharp-2.6;harfbuzzsharp-2.8;harfbuzzsharp-7.3" />
        <Parameter Name="variationSelector" Type="System.UInt32" Index="1" FrameworkAlternate="harfbuzzsharp-2.6;harfbuzzsharp-2.8;harfbuzzsharp-7.3" />
        <Parameter Name="glyph" Type="System.UInt32" RefType="out" Index="2" FrameworkAlternate="harfbuzzsharp-2.6;harfbuzzsharp-2.8;harfbuzzsharp-7.3" />
      </Parameters>
      <Docs>
        <param name="unicode">To be added.</param>
        <param name="variationSelector">To be added.</param>
        <param name="glyph">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryGetGlyph">
      <MemberSignature Language="C#" Value="public bool TryGetGlyph (uint unicode, uint variationSelector, out uint glyph);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryGetGlyph(unsigned int32 unicode, unsigned int32 variationSelector, [out] unsigned int32&amp; glyph) cil managed" />
      <MemberSignature Language="DocId" Value="M:HarfBuzzSharp.Font.TryGetGlyph(System.UInt32,System.UInt32,System.UInt32@)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>HarfBuzzSharp</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="unicode" Type="System.UInt32" Index="0" FrameworkAlternate="harfbuzzsharp-2.6;harfbuzzsharp-2.8;harfbuzzsharp-7.3" />
        <Parameter Name="variationSelector" Type="System.UInt32" Index="1" FrameworkAlternate="harfbuzzsharp-2.6;harfbuzzsharp-2.8;harfbuzzsharp-7.3" />
        <Parameter Name="glyph" Type="System.UInt32" RefType="out" Index="2" FrameworkAlternate="harfbuzzsharp-2.6;harfbuzzsharp-2.8;harfbuzzsharp-7.3" />
      </Parameters>
      <Docs>
        <param name="unicode">To be added.</param>
        <param name="variationSelector">To be added.</param>
        <param name="glyph">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryGetGlyphContourPoint">
      <MemberSignature Language="C#" Value="public bool TryGetGlyphContourPoint (uint glyph, uint pointIndex, out int x, out int y);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryGetGlyphContourPoint(unsigned int32 glyph, unsigned int32 pointIndex, [out] int32&amp; x, [out] int32&amp; y) cil managed" />
      <MemberSignature Language="DocId" Value="M:HarfBuzzSharp.Font.TryGetGlyphContourPoint(System.UInt32,System.UInt32,System.Int32@,System.Int32@)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>HarfBuzzSharp</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="glyph" Type="System.UInt32" Index="0" FrameworkAlternate="harfbuzzsharp-2.6;harfbuzzsharp-2.8;harfbuzzsharp-7.3" />
        <Parameter Name="pointIndex" Type="System.UInt32" Index="1" FrameworkAlternate="harfbuzzsharp-2.6;harfbuzzsharp-2.8;harfbuzzsharp-7.3" />
        <Parameter Name="x" Type="System.Int32" RefType="out" Index="2" FrameworkAlternate="harfbuzzsharp-2.6;harfbuzzsharp-2.8;harfbuzzsharp-7.3" />
        <Parameter Name="y" Type="System.Int32" RefType="out" Index="3" FrameworkAlternate="harfbuzzsharp-2.6;harfbuzzsharp-2.8;harfbuzzsharp-7.3" />
      </Parameters>
      <Docs>
        <param name="glyph">To be added.</param>
        <param name="pointIndex">To be added.</param>
        <param name="x">To be added.</param>
        <param name="y">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryGetGlyphContourPointForOrigin">
      <MemberSignature Language="C#" Value="public bool TryGetGlyphContourPointForOrigin (uint glyph, uint pointIndex, HarfBuzzSharp.Direction direction, out int x, out int y);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryGetGlyphContourPointForOrigin(unsigned int32 glyph, unsigned int32 pointIndex, valuetype HarfBuzzSharp.Direction direction, [out] int32&amp; x, [out] int32&amp; y) cil managed" />
      <MemberSignature Language="DocId" Value="M:HarfBuzzSharp.Font.TryGetGlyphContourPointForOrigin(System.UInt32,System.UInt32,HarfBuzzSharp.Direction,System.Int32@,System.Int32@)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>HarfBuzzSharp</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="glyph" Type="System.UInt32" Index="0" FrameworkAlternate="harfbuzzsharp-2.6;harfbuzzsharp-2.8;harfbuzzsharp-7.3" />
        <Parameter Name="pointIndex" Type="System.UInt32" Index="1" FrameworkAlternate="harfbuzzsharp-2.6;harfbuzzsharp-2.8;harfbuzzsharp-7.3" />
        <Parameter Name="direction" Type="HarfBuzzSharp.Direction" Index="2" FrameworkAlternate="harfbuzzsharp-2.6;harfbuzzsharp-2.8;harfbuzzsharp-7.3" />
        <Parameter Name="x" Type="System.Int32" RefType="out" Index="3" FrameworkAlternate="harfbuzzsharp-2.6;harfbuzzsharp-2.8;harfbuzzsharp-7.3" />
        <Parameter Name="y" Type="System.Int32" RefType="out" Index="4" FrameworkAlternate="harfbuzzsharp-2.6;harfbuzzsharp-2.8;harfbuzzsharp-7.3" />
      </Parameters>
      <Docs>
        <param name="glyph">To be added.</param>
        <param name="pointIndex">To be added.</param>
        <param name="direction">To be added.</param>
        <param name="x">To be added.</param>
        <param name="y">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryGetGlyphExtents">
      <MemberSignature Language="C#" Value="public bool TryGetGlyphExtents (uint glyph, out HarfBuzzSharp.GlyphExtents extents);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryGetGlyphExtents(unsigned int32 glyph, [out] valuetype HarfBuzzSharp.GlyphExtents&amp; extents) cil managed" />
      <MemberSignature Language="DocId" Value="M:HarfBuzzSharp.Font.TryGetGlyphExtents(System.UInt32,HarfBuzzSharp.GlyphExtents@)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>HarfBuzzSharp</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="glyph" Type="System.UInt32" Index="0" FrameworkAlternate="harfbuzzsharp-2.6;harfbuzzsharp-2.8;harfbuzzsharp-7.3" />
        <Parameter Name="extents" Type="HarfBuzzSharp.GlyphExtents" RefType="out" Index="1" FrameworkAlternate="harfbuzzsharp-2.6;harfbuzzsharp-2.8;harfbuzzsharp-7.3" />
      </Parameters>
      <Docs>
        <param name="glyph">To be added.</param>
        <param name="extents">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryGetGlyphFromName">
      <MemberSignature Language="C#" Value="public bool TryGetGlyphFromName (string name, out uint glyph);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryGetGlyphFromName(string name, [out] unsigned int32&amp; glyph) cil managed" />
      <MemberSignature Language="DocId" Value="M:HarfBuzzSharp.Font.TryGetGlyphFromName(System.String,System.UInt32@)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>HarfBuzzSharp</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" Index="0" FrameworkAlternate="harfbuzzsharp-2.6;harfbuzzsharp-2.8;harfbuzzsharp-7.3" />
        <Parameter Name="glyph" Type="System.UInt32" RefType="out" Index="1" FrameworkAlternate="harfbuzzsharp-2.6;harfbuzzsharp-2.8;harfbuzzsharp-7.3" />
      </Parameters>
      <Docs>
        <param name="name">To be added.</param>
        <param name="glyph">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryGetGlyphFromString">
      <MemberSignature Language="C#" Value="public bool TryGetGlyphFromString (string s, out uint glyph);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryGetGlyphFromString(string s, [out] unsigned int32&amp; glyph) cil managed" />
      <MemberSignature Language="DocId" Value="M:HarfBuzzSharp.Font.TryGetGlyphFromString(System.String,System.UInt32@)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>HarfBuzzSharp</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" Index="0" FrameworkAlternate="harfbuzzsharp-2.6;harfbuzzsharp-2.8;harfbuzzsharp-7.3" />
        <Parameter Name="glyph" Type="System.UInt32" RefType="out" Index="1" FrameworkAlternate="harfbuzzsharp-2.6;harfbuzzsharp-2.8;harfbuzzsharp-7.3" />
      </Parameters>
      <Docs>
        <param name="s">To be added.</param>
        <param name="glyph">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryGetGlyphName">
      <MemberSignature Language="C#" Value="public bool TryGetGlyphName (uint glyph, out string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryGetGlyphName(unsigned int32 glyph, [out] string&amp; name) cil managed" />
      <MemberSignature Language="DocId" Value="M:HarfBuzzSharp.Font.TryGetGlyphName(System.UInt32,System.String@)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>HarfBuzzSharp</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="glyph" Type="System.UInt32" Index="0" FrameworkAlternate="harfbuzzsharp-2.6;harfbuzzsharp-2.8;harfbuzzsharp-7.3" />
        <Parameter Name="name" Type="System.String" RefType="out" Index="1" FrameworkAlternate="harfbuzzsharp-2.6;harfbuzzsharp-2.8;harfbuzzsharp-7.3" />
      </Parameters>
      <Docs>
        <param name="glyph">To be added.</param>
        <param name="name">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryGetHorizontalFontExtents">
      <MemberSignature Language="C#" Value="public bool TryGetHorizontalFontExtents (out HarfBuzzSharp.FontExtents extents);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryGetHorizontalFontExtents([out] valuetype HarfBuzzSharp.FontExtents&amp; extents) cil managed" />
      <MemberSignature Language="DocId" Value="M:HarfBuzzSharp.Font.TryGetHorizontalFontExtents(HarfBuzzSharp.FontExtents@)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>HarfBuzzSharp</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="extents" Type="HarfBuzzSharp.FontExtents" RefType="out" Index="0" FrameworkAlternate="harfbuzzsharp-2.6;harfbuzzsharp-2.8;harfbuzzsharp-7.3" />
      </Parameters>
      <Docs>
        <param name="extents">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryGetHorizontalGlyphOrigin">
      <MemberSignature Language="C#" Value="public bool TryGetHorizontalGlyphOrigin (uint glyph, out int xOrigin, out int yOrigin);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryGetHorizontalGlyphOrigin(unsigned int32 glyph, [out] int32&amp; xOrigin, [out] int32&amp; yOrigin) cil managed" />
      <MemberSignature Language="DocId" Value="M:HarfBuzzSharp.Font.TryGetHorizontalGlyphOrigin(System.UInt32,System.Int32@,System.Int32@)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>HarfBuzzSharp</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="glyph" Type="System.UInt32" Index="0" FrameworkAlternate="harfbuzzsharp-2.6;harfbuzzsharp-2.8;harfbuzzsharp-7.3" />
        <Parameter Name="xOrigin" Type="System.Int32" RefType="out" Index="1" FrameworkAlternate="harfbuzzsharp-2.6;harfbuzzsharp-2.8;harfbuzzsharp-7.3" />
        <Parameter Name="yOrigin" Type="System.Int32" RefType="out" Index="2" FrameworkAlternate="harfbuzzsharp-2.6;harfbuzzsharp-2.8;harfbuzzsharp-7.3" />
      </Parameters>
      <Docs>
        <param name="glyph">To be added.</param>
        <param name="xOrigin">To be added.</param>
        <param name="yOrigin">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryGetNominalGlyph">
      <MemberSignature Language="C#" Value="public bool TryGetNominalGlyph (int unicode, out uint glyph);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryGetNominalGlyph(int32 unicode, [out] unsigned int32&amp; glyph) cil managed" />
      <MemberSignature Language="DocId" Value="M:HarfBuzzSharp.Font.TryGetNominalGlyph(System.Int32,System.UInt32@)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>HarfBuzzSharp</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="unicode" Type="System.Int32" Index="0" FrameworkAlternate="harfbuzzsharp-2.6;harfbuzzsharp-2.8;harfbuzzsharp-7.3" />
        <Parameter Name="glyph" Type="System.UInt32" RefType="out" Index="1" FrameworkAlternate="harfbuzzsharp-2.6;harfbuzzsharp-2.8;harfbuzzsharp-7.3" />
      </Parameters>
      <Docs>
        <param name="unicode">To be added.</param>
        <param name="glyph">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryGetNominalGlyph">
      <MemberSignature Language="C#" Value="public bool TryGetNominalGlyph (uint unicode, out uint glyph);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryGetNominalGlyph(unsigned int32 unicode, [out] unsigned int32&amp; glyph) cil managed" />
      <MemberSignature Language="DocId" Value="M:HarfBuzzSharp.Font.TryGetNominalGlyph(System.UInt32,System.UInt32@)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>HarfBuzzSharp</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="unicode" Type="System.UInt32" Index="0" FrameworkAlternate="harfbuzzsharp-2.6;harfbuzzsharp-2.8;harfbuzzsharp-7.3" />
        <Parameter Name="glyph" Type="System.UInt32" RefType="out" Index="1" FrameworkAlternate="harfbuzzsharp-2.6;harfbuzzsharp-2.8;harfbuzzsharp-7.3" />
      </Parameters>
      <Docs>
        <param name="unicode">To be added.</param>
        <param name="glyph">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryGetVariationGlyph">
      <MemberSignature Language="C#" Value="public bool TryGetVariationGlyph (int unicode, out uint glyph);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryGetVariationGlyph(int32 unicode, [out] unsigned int32&amp; glyph) cil managed" />
      <MemberSignature Language="DocId" Value="M:HarfBuzzSharp.Font.TryGetVariationGlyph(System.Int32,System.UInt32@)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>HarfBuzzSharp</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="unicode" Type="System.Int32" Index="0" FrameworkAlternate="harfbuzzsharp-2.6;harfbuzzsharp-2.8;harfbuzzsharp-7.3" />
        <Parameter Name="glyph" Type="System.UInt32" RefType="out" Index="1" FrameworkAlternate="harfbuzzsharp-2.6;harfbuzzsharp-2.8;harfbuzzsharp-7.3" />
      </Parameters>
      <Docs>
        <param name="unicode">To be added.</param>
        <param name="glyph">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryGetVariationGlyph">
      <MemberSignature Language="C#" Value="public bool TryGetVariationGlyph (uint unicode, out uint glyph);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryGetVariationGlyph(unsigned int32 unicode, [out] unsigned int32&amp; glyph) cil managed" />
      <MemberSignature Language="DocId" Value="M:HarfBuzzSharp.Font.TryGetVariationGlyph(System.UInt32,System.UInt32@)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>HarfBuzzSharp</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="unicode" Type="System.UInt32" Index="0" FrameworkAlternate="harfbuzzsharp-2.6;harfbuzzsharp-2.8;harfbuzzsharp-7.3" />
        <Parameter Name="glyph" Type="System.UInt32" RefType="out" Index="1" FrameworkAlternate="harfbuzzsharp-2.6;harfbuzzsharp-2.8;harfbuzzsharp-7.3" />
      </Parameters>
      <Docs>
        <param name="unicode">To be added.</param>
        <param name="glyph">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryGetVariationGlyph">
      <MemberSignature Language="C#" Value="public bool TryGetVariationGlyph (int unicode, uint variationSelector, out uint glyph);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryGetVariationGlyph(int32 unicode, unsigned int32 variationSelector, [out] unsigned int32&amp; glyph) cil managed" />
      <MemberSignature Language="DocId" Value="M:HarfBuzzSharp.Font.TryGetVariationGlyph(System.Int32,System.UInt32,System.UInt32@)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>HarfBuzzSharp</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="unicode" Type="System.Int32" Index="0" FrameworkAlternate="harfbuzzsharp-2.6;harfbuzzsharp-2.8;harfbuzzsharp-7.3" />
        <Parameter Name="variationSelector" Type="System.UInt32" Index="1" FrameworkAlternate="harfbuzzsharp-2.6;harfbuzzsharp-2.8;harfbuzzsharp-7.3" />
        <Parameter Name="glyph" Type="System.UInt32" RefType="out" Index="2" FrameworkAlternate="harfbuzzsharp-2.6;harfbuzzsharp-2.8;harfbuzzsharp-7.3" />
      </Parameters>
      <Docs>
        <param name="unicode">To be added.</param>
        <param name="variationSelector">To be added.</param>
        <param name="glyph">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryGetVariationGlyph">
      <MemberSignature Language="C#" Value="public bool TryGetVariationGlyph (uint unicode, uint variationSelector, out uint glyph);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryGetVariationGlyph(unsigned int32 unicode, unsigned int32 variationSelector, [out] unsigned int32&amp; glyph) cil managed" />
      <MemberSignature Language="DocId" Value="M:HarfBuzzSharp.Font.TryGetVariationGlyph(System.UInt32,System.UInt32,System.UInt32@)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>HarfBuzzSharp</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="unicode" Type="System.UInt32" Index="0" FrameworkAlternate="harfbuzzsharp-2.6;harfbuzzsharp-2.8;harfbuzzsharp-7.3" />
        <Parameter Name="variationSelector" Type="System.UInt32" Index="1" FrameworkAlternate="harfbuzzsharp-2.6;harfbuzzsharp-2.8;harfbuzzsharp-7.3" />
        <Parameter Name="glyph" Type="System.UInt32" RefType="out" Index="2" FrameworkAlternate="harfbuzzsharp-2.6;harfbuzzsharp-2.8;harfbuzzsharp-7.3" />
      </Parameters>
      <Docs>
        <param name="unicode">To be added.</param>
        <param name="variationSelector">To be added.</param>
        <param name="glyph">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryGetVerticalFontExtents">
      <MemberSignature Language="C#" Value="public bool TryGetVerticalFontExtents (out HarfBuzzSharp.FontExtents extents);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryGetVerticalFontExtents([out] valuetype HarfBuzzSharp.FontExtents&amp; extents) cil managed" />
      <MemberSignature Language="DocId" Value="M:HarfBuzzSharp.Font.TryGetVerticalFontExtents(HarfBuzzSharp.FontExtents@)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>HarfBuzzSharp</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="extents" Type="HarfBuzzSharp.FontExtents" RefType="out" Index="0" FrameworkAlternate="harfbuzzsharp-2.6;harfbuzzsharp-2.8;harfbuzzsharp-7.3" />
      </Parameters>
      <Docs>
        <param name="extents">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryGetVerticalGlyphOrigin">
      <MemberSignature Language="C#" Value="public bool TryGetVerticalGlyphOrigin (uint glyph, out int xOrigin, out int yOrigin);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryGetVerticalGlyphOrigin(unsigned int32 glyph, [out] int32&amp; xOrigin, [out] int32&amp; yOrigin) cil managed" />
      <MemberSignature Language="DocId" Value="M:HarfBuzzSharp.Font.TryGetVerticalGlyphOrigin(System.UInt32,System.Int32@,System.Int32@)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>HarfBuzzSharp</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="glyph" Type="System.UInt32" Index="0" FrameworkAlternate="harfbuzzsharp-2.6;harfbuzzsharp-2.8;harfbuzzsharp-7.3" />
        <Parameter Name="xOrigin" Type="System.Int32" RefType="out" Index="1" FrameworkAlternate="harfbuzzsharp-2.6;harfbuzzsharp-2.8;harfbuzzsharp-7.3" />
        <Parameter Name="yOrigin" Type="System.Int32" RefType="out" Index="2" FrameworkAlternate="harfbuzzsharp-2.6;harfbuzzsharp-2.8;harfbuzzsharp-7.3" />
      </Parameters>
      <Docs>
        <param name="glyph">To be added.</param>
        <param name="xOrigin">To be added.</param>
        <param name="yOrigin">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
