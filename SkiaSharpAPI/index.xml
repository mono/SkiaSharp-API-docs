<Overview>
  <Assemblies>
    <Assembly Name="SkiaSharp" Version="2.88.0.0">
      <AssemblyPublicKey>[00 24 00 00 04 80 00 00 94 00 00 00 06 02 00 00 00 24 00 00 52 53 41 31 00 04 00 00 01 00 01 00 79 15 99 77 d2 d0 3a 8e 6b ea 7a 2e 74 e8 d1 af cc 93 e8 85 19 74 95 2b b4 80 a1 2c 91 34 47 4d 04 06 24 47 c3 7e 0e 68 c0 80 53 6f cf 3c 3f be 2f f9 c9 79 ce 99 84 75 e5 06 e8 ce 82 dd 5b 0f 35 0d c1 0e 93 bf 2e ee cf 87 4b 24 77 0c 50 81 db ea 74 47 fd da fa 27 7b 22 de 47 d6 ff ea 44 96 74 a4 f9 fc cf 84 d1 50 69 08 93 80 28 4d bd d3 5f 46 cd ff 12 a1 bd 78 e4 ef 00 65 d0 16 df ]</AssemblyPublicKey>
      <Attributes />
    </Assembly>
    <Assembly Name="SkiaSharp.Views.Android" Version="2.88.0.0">
      <AssemblyPublicKey>[00 24 00 00 04 80 00 00 94 00 00 00 06 02 00 00 00 24 00 00 52 53 41 31 00 04 00 00 01 00 01 00 79 15 99 77 d2 d0 3a 8e 6b ea 7a 2e 74 e8 d1 af cc 93 e8 85 19 74 95 2b b4 80 a1 2c 91 34 47 4d 04 06 24 47 c3 7e 0e 68 c0 80 53 6f cf 3c 3f be 2f f9 c9 79 ce 99 84 75 e5 06 e8 ce 82 dd 5b 0f 35 0d c1 0e 93 bf 2e ee cf 87 4b 24 77 0c 50 81 db ea 74 47 fd da fa 27 7b 22 de 47 d6 ff ea 44 96 74 a4 f9 fc cf 84 d1 50 69 08 93 80 28 4d bd d3 5f 46 cd ff 12 a1 bd 78 e4 ef 00 65 d0 16 df ]</AssemblyPublicKey>
      <Attributes />
    </Assembly>
    <Assembly Name="SkiaSharp.Views.Blazor" Version="2.88.0.0">
      <AssemblyPublicKey>[00 24 00 00 04 80 00 00 94 00 00 00 06 02 00 00 00 24 00 00 52 53 41 31 00 04 00 00 01 00 01 00 79 15 99 77 d2 d0 3a 8e 6b ea 7a 2e 74 e8 d1 af cc 93 e8 85 19 74 95 2b b4 80 a1 2c 91 34 47 4d 04 06 24 47 c3 7e 0e 68 c0 80 53 6f cf 3c 3f be 2f f9 c9 79 ce 99 84 75 e5 06 e8 ce 82 dd 5b 0f 35 0d c1 0e 93 bf 2e ee cf 87 4b 24 77 0c 50 81 db ea 74 47 fd da fa 27 7b 22 de 47 d6 ff ea 44 96 74 a4 f9 fc cf 84 d1 50 69 08 93 80 28 4d bd d3 5f 46 cd ff 12 a1 bd 78 e4 ef 00 65 d0 16 df ]</AssemblyPublicKey>
      <Attributes />
    </Assembly>
    <Assembly Name="SkiaSharp.Views.Desktop.Common" Version="2.88.0.0">
      <AssemblyPublicKey>[00 24 00 00 04 80 00 00 94 00 00 00 06 02 00 00 00 24 00 00 52 53 41 31 00 04 00 00 01 00 01 00 79 15 99 77 d2 d0 3a 8e 6b ea 7a 2e 74 e8 d1 af cc 93 e8 85 19 74 95 2b b4 80 a1 2c 91 34 47 4d 04 06 24 47 c3 7e 0e 68 c0 80 53 6f cf 3c 3f be 2f f9 c9 79 ce 99 84 75 e5 06 e8 ce 82 dd 5b 0f 35 0d c1 0e 93 bf 2e ee cf 87 4b 24 77 0c 50 81 db ea 74 47 fd da fa 27 7b 22 de 47 d6 ff ea 44 96 74 a4 f9 fc cf 84 d1 50 69 08 93 80 28 4d bd d3 5f 46 cd ff 12 a1 bd 78 e4 ef 00 65 d0 16 df ]</AssemblyPublicKey>
      <Attributes />
    </Assembly>
    <Assembly Name="SkiaSharp.Views.Desktop" Version="2.88.0.0">
      <AssemblyPublicKey>[00 24 00 00 04 80 00 00 94 00 00 00 06 02 00 00 00 24 00 00 52 53 41 31 00 04 00 00 01 00 01 00 79 15 99 77 d2 d0 3a 8e 6b ea 7a 2e 74 e8 d1 af cc 93 e8 85 19 74 95 2b b4 80 a1 2c 91 34 47 4d 04 06 24 47 c3 7e 0e 68 c0 80 53 6f cf 3c 3f be 2f f9 c9 79 ce 99 84 75 e5 06 e8 ce 82 dd 5b 0f 35 0d c1 0e 93 bf 2e ee cf 87 4b 24 77 0c 50 81 db ea 74 47 fd da fa 27 7b 22 de 47 d6 ff ea 44 96 74 a4 f9 fc cf 84 d1 50 69 08 93 80 28 4d bd d3 5f 46 cd ff 12 a1 bd 78 e4 ef 00 65 d0 16 df ]</AssemblyPublicKey>
      <Attributes />
    </Assembly>
    <Assembly Name="SkiaSharp.Views.Gtk" Version="2.88.0.0">
      <AssemblyPublicKey>[00 24 00 00 04 80 00 00 94 00 00 00 06 02 00 00 00 24 00 00 52 53 41 31 00 04 00 00 01 00 01 00 79 15 99 77 d2 d0 3a 8e 6b ea 7a 2e 74 e8 d1 af cc 93 e8 85 19 74 95 2b b4 80 a1 2c 91 34 47 4d 04 06 24 47 c3 7e 0e 68 c0 80 53 6f cf 3c 3f be 2f f9 c9 79 ce 99 84 75 e5 06 e8 ce 82 dd 5b 0f 35 0d c1 0e 93 bf 2e ee cf 87 4b 24 77 0c 50 81 db ea 74 47 fd da fa 27 7b 22 de 47 d6 ff ea 44 96 74 a4 f9 fc cf 84 d1 50 69 08 93 80 28 4d bd d3 5f 46 cd ff 12 a1 bd 78 e4 ef 00 65 d0 16 df ]</AssemblyPublicKey>
      <Attributes />
    </Assembly>
    <Assembly Name="SkiaSharp.Views.Gtk3" Version="2.88.0.0">
      <Attributes />
    </Assembly>
    <Assembly Name="SkiaSharp.Views.iOS" Version="2.88.0.0">
      <AssemblyPublicKey>[00 24 00 00 04 80 00 00 94 00 00 00 06 02 00 00 00 24 00 00 52 53 41 31 00 04 00 00 01 00 01 00 79 15 99 77 d2 d0 3a 8e 6b ea 7a 2e 74 e8 d1 af cc 93 e8 85 19 74 95 2b b4 80 a1 2c 91 34 47 4d 04 06 24 47 c3 7e 0e 68 c0 80 53 6f cf 3c 3f be 2f f9 c9 79 ce 99 84 75 e5 06 e8 ce 82 dd 5b 0f 35 0d c1 0e 93 bf 2e ee cf 87 4b 24 77 0c 50 81 db ea 74 47 fd da fa 27 7b 22 de 47 d6 ff ea 44 96 74 a4 f9 fc cf 84 d1 50 69 08 93 80 28 4d bd d3 5f 46 cd ff 12 a1 bd 78 e4 ef 00 65 d0 16 df ]</AssemblyPublicKey>
      <Attributes />
    </Assembly>
    <Assembly Name="SkiaSharp.Views.Mac" Version="2.88.0.0">
      <AssemblyPublicKey>[00 24 00 00 04 80 00 00 94 00 00 00 06 02 00 00 00 24 00 00 52 53 41 31 00 04 00 00 01 00 01 00 79 15 99 77 d2 d0 3a 8e 6b ea 7a 2e 74 e8 d1 af cc 93 e8 85 19 74 95 2b b4 80 a1 2c 91 34 47 4d 04 06 24 47 c3 7e 0e 68 c0 80 53 6f cf 3c 3f be 2f f9 c9 79 ce 99 84 75 e5 06 e8 ce 82 dd 5b 0f 35 0d c1 0e 93 bf 2e ee cf 87 4b 24 77 0c 50 81 db ea 74 47 fd da fa 27 7b 22 de 47 d6 ff ea 44 96 74 a4 f9 fc cf 84 d1 50 69 08 93 80 28 4d bd d3 5f 46 cd ff 12 a1 bd 78 e4 ef 00 65 d0 16 df ]</AssemblyPublicKey>
      <Attributes />
    </Assembly>
    <Assembly Name="SkiaSharp.Views.Tizen" Version="2.88.0.0">
      <AssemblyPublicKey>[00 24 00 00 04 80 00 00 94 00 00 00 06 02 00 00 00 24 00 00 52 53 41 31 00 04 00 00 01 00 01 00 79 15 99 77 d2 d0 3a 8e 6b ea 7a 2e 74 e8 d1 af cc 93 e8 85 19 74 95 2b b4 80 a1 2c 91 34 47 4d 04 06 24 47 c3 7e 0e 68 c0 80 53 6f cf 3c 3f be 2f f9 c9 79 ce 99 84 75 e5 06 e8 ce 82 dd 5b 0f 35 0d c1 0e 93 bf 2e ee cf 87 4b 24 77 0c 50 81 db ea 74 47 fd da fa 27 7b 22 de 47 d6 ff ea 44 96 74 a4 f9 fc cf 84 d1 50 69 08 93 80 28 4d bd d3 5f 46 cd ff 12 a1 bd 78 e4 ef 00 65 d0 16 df ]</AssemblyPublicKey>
      <Attributes />
    </Assembly>
    <Assembly Name="SkiaSharp.Views.tvOS" Version="2.88.0.0">
      <AssemblyPublicKey>[00 24 00 00 04 80 00 00 94 00 00 00 06 02 00 00 00 24 00 00 52 53 41 31 00 04 00 00 01 00 01 00 79 15 99 77 d2 d0 3a 8e 6b ea 7a 2e 74 e8 d1 af cc 93 e8 85 19 74 95 2b b4 80 a1 2c 91 34 47 4d 04 06 24 47 c3 7e 0e 68 c0 80 53 6f cf 3c 3f be 2f f9 c9 79 ce 99 84 75 e5 06 e8 ce 82 dd 5b 0f 35 0d c1 0e 93 bf 2e ee cf 87 4b 24 77 0c 50 81 db ea 74 47 fd da fa 27 7b 22 de 47 d6 ff ea 44 96 74 a4 f9 fc cf 84 d1 50 69 08 93 80 28 4d bd d3 5f 46 cd ff 12 a1 bd 78 e4 ef 00 65 d0 16 df ]</AssemblyPublicKey>
      <Attributes />
    </Assembly>
    <Assembly Name="SkiaSharp.Views.UWP" Version="2.88.0.0">
      <AssemblyPublicKey>[00 24 00 00 04 80 00 00 94 00 00 00 06 02 00 00 00 24 00 00 52 53 41 31 00 04 00 00 01 00 01 00 79 15 99 77 d2 d0 3a 8e 6b ea 7a 2e 74 e8 d1 af cc 93 e8 85 19 74 95 2b b4 80 a1 2c 91 34 47 4d 04 06 24 47 c3 7e 0e 68 c0 80 53 6f cf 3c 3f be 2f f9 c9 79 ce 99 84 75 e5 06 e8 ce 82 dd 5b 0f 35 0d c1 0e 93 bf 2e ee cf 87 4b 24 77 0c 50 81 db ea 74 47 fd da fa 27 7b 22 de 47 d6 ff ea 44 96 74 a4 f9 fc cf 84 d1 50 69 08 93 80 28 4d bd d3 5f 46 cd ff 12 a1 bd 78 e4 ef 00 65 d0 16 df ]</AssemblyPublicKey>
      <Attributes />
    </Assembly>
    <Assembly Name="SkiaSharp.Views.watchOS" Version="2.88.0.0">
      <AssemblyPublicKey>[00 24 00 00 04 80 00 00 94 00 00 00 06 02 00 00 00 24 00 00 52 53 41 31 00 04 00 00 01 00 01 00 79 15 99 77 d2 d0 3a 8e 6b ea 7a 2e 74 e8 d1 af cc 93 e8 85 19 74 95 2b b4 80 a1 2c 91 34 47 4d 04 06 24 47 c3 7e 0e 68 c0 80 53 6f cf 3c 3f be 2f f9 c9 79 ce 99 84 75 e5 06 e8 ce 82 dd 5b 0f 35 0d c1 0e 93 bf 2e ee cf 87 4b 24 77 0c 50 81 db ea 74 47 fd da fa 27 7b 22 de 47 d6 ff ea 44 96 74 a4 f9 fc cf 84 d1 50 69 08 93 80 28 4d bd d3 5f 46 cd ff 12 a1 bd 78 e4 ef 00 65 d0 16 df ]</AssemblyPublicKey>
      <Attributes />
    </Assembly>
    <Assembly Name="SkiaSharp.Views.Windows" Version="2.88.0.0">
      <AssemblyPublicKey>[00 24 00 00 04 80 00 00 94 00 00 00 06 02 00 00 00 24 00 00 52 53 41 31 00 04 00 00 01 00 01 00 79 15 99 77 d2 d0 3a 8e 6b ea 7a 2e 74 e8 d1 af cc 93 e8 85 19 74 95 2b b4 80 a1 2c 91 34 47 4d 04 06 24 47 c3 7e 0e 68 c0 80 53 6f cf 3c 3f be 2f f9 c9 79 ce 99 84 75 e5 06 e8 ce 82 dd 5b 0f 35 0d c1 0e 93 bf 2e ee cf 87 4b 24 77 0c 50 81 db ea 74 47 fd da fa 27 7b 22 de 47 d6 ff ea 44 96 74 a4 f9 fc cf 84 d1 50 69 08 93 80 28 4d bd d3 5f 46 cd ff 12 a1 bd 78 e4 ef 00 65 d0 16 df ]</AssemblyPublicKey>
      <Attributes />
    </Assembly>
    <Assembly Name="SkiaSharp.Views.WindowsForms" Version="2.88.0.0">
      <AssemblyPublicKey>[00 24 00 00 04 80 00 00 94 00 00 00 06 02 00 00 00 24 00 00 52 53 41 31 00 04 00 00 01 00 01 00 79 15 99 77 d2 d0 3a 8e 6b ea 7a 2e 74 e8 d1 af cc 93 e8 85 19 74 95 2b b4 80 a1 2c 91 34 47 4d 04 06 24 47 c3 7e 0e 68 c0 80 53 6f cf 3c 3f be 2f f9 c9 79 ce 99 84 75 e5 06 e8 ce 82 dd 5b 0f 35 0d c1 0e 93 bf 2e ee cf 87 4b 24 77 0c 50 81 db ea 74 47 fd da fa 27 7b 22 de 47 d6 ff ea 44 96 74 a4 f9 fc cf 84 d1 50 69 08 93 80 28 4d bd d3 5f 46 cd ff 12 a1 bd 78 e4 ef 00 65 d0 16 df ]</AssemblyPublicKey>
      <Attributes />
    </Assembly>
    <Assembly Name="SkiaSharp.Views.WPF" Version="2.88.0.0">
      <AssemblyPublicKey>[00 24 00 00 04 80 00 00 94 00 00 00 06 02 00 00 00 24 00 00 52 53 41 31 00 04 00 00 01 00 01 00 79 15 99 77 d2 d0 3a 8e 6b ea 7a 2e 74 e8 d1 af cc 93 e8 85 19 74 95 2b b4 80 a1 2c 91 34 47 4d 04 06 24 47 c3 7e 0e 68 c0 80 53 6f cf 3c 3f be 2f f9 c9 79 ce 99 84 75 e5 06 e8 ce 82 dd 5b 0f 35 0d c1 0e 93 bf 2e ee cf 87 4b 24 77 0c 50 81 db ea 74 47 fd da fa 27 7b 22 de 47 d6 ff ea 44 96 74 a4 f9 fc cf 84 d1 50 69 08 93 80 28 4d bd d3 5f 46 cd ff 12 a1 bd 78 e4 ef 00 65 d0 16 df ]</AssemblyPublicKey>
      <Attributes />
    </Assembly>
    <Assembly Name="SkiaSharp.Views.Forms" Version="2.88.0.0">
      <Attributes />
    </Assembly>
    <Assembly Name="SkiaSharp.Views.Maui.Controls.Compatibility" Version="2.88.0.0">
      <Attributes />
    </Assembly>
    <Assembly Name="SkiaSharp.Views.Maui.Controls" Version="2.88.0.0">
      <Attributes />
    </Assembly>
    <Assembly Name="SkiaSharp.Views.Maui.Core" Version="2.88.0.0">
      <Attributes />
    </Assembly>
    <Assembly Name="HarfBuzzSharp" Version="1.0.0.0">
      <AssemblyPublicKey>[00 24 00 00 04 80 00 00 94 00 00 00 06 02 00 00 00 24 00 00 52 53 41 31 00 04 00 00 01 00 01 00 79 15 99 77 d2 d0 3a 8e 6b ea 7a 2e 74 e8 d1 af cc 93 e8 85 19 74 95 2b b4 80 a1 2c 91 34 47 4d 04 06 24 47 c3 7e 0e 68 c0 80 53 6f cf 3c 3f be 2f f9 c9 79 ce 99 84 75 e5 06 e8 ce 82 dd 5b 0f 35 0d c1 0e 93 bf 2e ee cf 87 4b 24 77 0c 50 81 db ea 74 47 fd da fa 27 7b 22 de 47 d6 ff ea 44 96 74 a4 f9 fc cf 84 d1 50 69 08 93 80 28 4d bd d3 5f 46 cd ff 12 a1 bd 78 e4 ef 00 65 d0 16 df ]</AssemblyPublicKey>
      <Attributes />
    </Assembly>
    <Assembly Name="SkiaSharp.HarfBuzz" Version="2.88.0.0">
      <AssemblyPublicKey>[00 24 00 00 04 80 00 00 94 00 00 00 06 02 00 00 00 24 00 00 52 53 41 31 00 04 00 00 01 00 01 00 79 15 99 77 d2 d0 3a 8e 6b ea 7a 2e 74 e8 d1 af cc 93 e8 85 19 74 95 2b b4 80 a1 2c 91 34 47 4d 04 06 24 47 c3 7e 0e 68 c0 80 53 6f cf 3c 3f be 2f f9 c9 79 ce 99 84 75 e5 06 e8 ce 82 dd 5b 0f 35 0d c1 0e 93 bf 2e ee cf 87 4b 24 77 0c 50 81 db ea 74 47 fd da fa 27 7b 22 de 47 d6 ff ea 44 96 74 a4 f9 fc cf 84 d1 50 69 08 93 80 28 4d bd d3 5f 46 cd ff 12 a1 bd 78 e4 ef 00 65 d0 16 df ]</AssemblyPublicKey>
      <Attributes />
    </Assembly>
    <Assembly Name="SkiaSharp.SceneGraph" Version="2.88.0.0">
      <AssemblyPublicKey>[00 24 00 00 04 80 00 00 94 00 00 00 06 02 00 00 00 24 00 00 52 53 41 31 00 04 00 00 01 00 01 00 79 15 99 77 d2 d0 3a 8e 6b ea 7a 2e 74 e8 d1 af cc 93 e8 85 19 74 95 2b b4 80 a1 2c 91 34 47 4d 04 06 24 47 c3 7e 0e 68 c0 80 53 6f cf 3c 3f be 2f f9 c9 79 ce 99 84 75 e5 06 e8 ce 82 dd 5b 0f 35 0d c1 0e 93 bf 2e ee cf 87 4b 24 77 0c 50 81 db ea 74 47 fd da fa 27 7b 22 de 47 d6 ff ea 44 96 74 a4 f9 fc cf 84 d1 50 69 08 93 80 28 4d bd d3 5f 46 cd ff 12 a1 bd 78 e4 ef 00 65 d0 16 df ]</AssemblyPublicKey>
      <Attributes />
    </Assembly>
    <Assembly Name="SkiaSharp.Skottie" Version="2.88.0.0">
      <AssemblyPublicKey>[00 24 00 00 04 80 00 00 94 00 00 00 06 02 00 00 00 24 00 00 52 53 41 31 00 04 00 00 01 00 01 00 79 15 99 77 d2 d0 3a 8e 6b ea 7a 2e 74 e8 d1 af cc 93 e8 85 19 74 95 2b b4 80 a1 2c 91 34 47 4d 04 06 24 47 c3 7e 0e 68 c0 80 53 6f cf 3c 3f be 2f f9 c9 79 ce 99 84 75 e5 06 e8 ce 82 dd 5b 0f 35 0d c1 0e 93 bf 2e ee cf 87 4b 24 77 0c 50 81 db ea 74 47 fd da fa 27 7b 22 de 47 d6 ff ea 44 96 74 a4 f9 fc cf 84 d1 50 69 08 93 80 28 4d bd d3 5f 46 cd ff 12 a1 bd 78 e4 ef 00 65 d0 16 df ]</AssemblyPublicKey>
      <Attributes />
    </Assembly>
    <Assembly Name="SkiaSharp.Vulkan.SharpVk" Version="2.88.0.0">
      <Attributes />
    </Assembly>
  </Assemblies>
  <Remarks></Remarks>
  <Copyright>© Microsoft Corporation. All rights reserved.</Copyright>
  <Types>
    <Namespace Name="HarfBuzzSharp">
      <Type Name="Blob" Kind="Class" />
      <Type Name="BlobReleaseDelegate" Kind="Delegate" />
      <Type Name="Buffer" Kind="Class" />
      <Type Name="BufferDiffFlags" Kind="Enumeration" />
      <Type Name="BufferFlags" Kind="Enumeration" />
      <Type Name="ClusterLevel" Kind="Enumeration" />
      <Type Name="CombiningClassDelegate" Kind="Delegate" />
      <Type Name="ComposeDelegate" Kind="Delegate" />
      <Type Name="ContentType" Kind="Enumeration" />
      <Type Name="DecomposeDelegate" Kind="Delegate" />
      <Type Name="Direction" Kind="Enumeration" />
      <Type Name="Face" Kind="Class" />
      <Type Name="Feature" Kind="Structure" />
      <Type Name="Font" Kind="Class" />
      <Type Name="FontExtents" Kind="Structure" />
      <Type Name="FontExtentsDelegate" Kind="Delegate" />
      <Type Name="FontFunctions" Kind="Class" />
      <Type Name="GeneralCategoryDelegate" Kind="Delegate" />
      <Type Name="GetTableDelegate" Kind="Delegate" />
      <Type Name="GlyphAdvanceDelegate" Kind="Delegate" />
      <Type Name="GlyphAdvancesDelegate" Kind="Delegate" />
      <Type Name="GlyphContourPointDelegate" Kind="Delegate" />
      <Type Name="GlyphExtents" Kind="Structure" />
      <Type Name="GlyphExtentsDelegate" Kind="Delegate" />
      <Type Name="GlyphFlags" Kind="Enumeration" />
      <Type Name="GlyphFromNameDelegate" Kind="Delegate" />
      <Type Name="GlyphInfo" Kind="Structure" />
      <Type Name="GlyphKerningDelegate" Kind="Delegate" />
      <Type Name="GlyphNameDelegate" Kind="Delegate" />
      <Type Name="GlyphOriginDelegate" Kind="Delegate" />
      <Type Name="GlyphPosition" Kind="Structure" />
      <Type Name="Language" Kind="Class" />
      <Type Name="MemoryMode" Kind="Enumeration" />
      <Type Name="MirroringDelegate" Kind="Delegate" />
      <Type Name="NativeObject" Kind="Class" />
      <Type Name="NominalGlyphDelegate" Kind="Delegate" />
      <Type Name="NominalGlyphsDelegate" Kind="Delegate" />
      <Type Name="OpenTypeColorLayer" Kind="Structure" />
      <Type Name="OpenTypeColorPaletteFlags" Kind="Enumeration" />
      <Type Name="OpenTypeLayoutBaselineTag" Kind="Enumeration" />
      <Type Name="OpenTypeLayoutGlyphClass" Kind="Enumeration" />
      <Type Name="OpenTypeMathConstant" Kind="Enumeration" />
      <Type Name="OpenTypeMathGlyphPart" Kind="Structure" />
      <Type Name="OpenTypeMathGlyphPartFlags" Kind="Enumeration" />
      <Type Name="OpenTypeMathGlyphVariant" Kind="Structure" />
      <Type Name="OpenTypeMathKern" Kind="Enumeration" />
      <Type Name="OpenTypeMetaTag" Kind="Enumeration" />
      <Type Name="OpenTypeMetrics" Kind="Class" />
      <Type Name="OpenTypeMetricsTag" Kind="Enumeration" />
      <Type Name="OpenTypeNameEntry" Kind="Structure" />
      <Type Name="OpenTypeNameId" Kind="Enumeration" />
      <Type Name="OpenTypeVarAxis" Kind="Structure" />
      <Type Name="OpenTypeVarAxisFlags" Kind="Enumeration" />
      <Type Name="OpenTypeVarAxisInfo" Kind="Structure" />
      <Type Name="ReleaseDelegate" Kind="Delegate" />
      <Type Name="Script" Kind="Structure" />
      <Type Name="ScriptDelegate" Kind="Delegate" />
      <Type Name="SerializeFlag" Kind="Enumeration" />
      <Type Name="SerializeFormat" Kind="Enumeration" />
      <Type Name="Tag" Kind="Structure" />
      <Type Name="UnicodeCombiningClass" Kind="Enumeration" />
      <Type Name="UnicodeFunctions" Kind="Class" />
      <Type Name="UnicodeGeneralCategory" Kind="Enumeration" />
      <Type Name="Variation" Kind="Structure" />
      <Type Name="VariationGlyphDelegate" Kind="Delegate" />
    </Namespace>
    <Namespace Name="HarfBuzzSharp.Internals">
      <Type Name="PlatformConfiguration" Kind="Class" />
    </Namespace>
    <Namespace Name="SkiaSharp">
      <Type Name="GRBackend" Kind="Enumeration" />
      <Type Name="GRBackendRenderTarget" Kind="Class" />
      <Type Name="GRBackendRenderTargetDesc" Kind="Structure" />
      <Type Name="GRBackendState" Kind="Enumeration" />
      <Type Name="GRBackendTexture" Kind="Class" />
      <Type Name="GRBackendTextureDesc" Kind="Structure" />
      <Type Name="GRBackendTextureDescFlags" Kind="Enumeration" />
      <Type Name="GRContext" Kind="Class" />
      <Type Name="GRContextOptions" Kind="Class" />
      <Type Name="GRContextOptionsGpuPathRenderers" Kind="Enumeration" />
      <Type Name="GRGlBackendState" Kind="Enumeration" />
      <Type Name="GRGlBackendTextureDesc" Kind="Structure" />
      <Type Name="GRGlFramebufferInfo" Kind="Structure" />
      <Type Name="GRGlGetProcDelegate" Kind="Delegate" />
      <Type Name="GRGlGetProcedureAddressDelegate" Kind="Delegate" />
      <Type Name="GRGlInterface" Kind="Class" />
      <Type Name="GRGlTextureInfo" Kind="Structure" />
      <Type Name="GRPixelConfig" Kind="Enumeration" />
      <Type Name="GRRecordingContext" Kind="Class" />
      <Type Name="GRSharpVkBackendContext" Kind="Class" />
      <Type Name="GRSharpVkGetProcedureAddressDelegate" Kind="Delegate" />
      <Type Name="GRSurfaceOrigin" Kind="Enumeration" />
      <Type Name="GRVkAlloc" Kind="Structure" />
      <Type Name="GRVkBackendContext" Kind="Class" />
      <Type Name="GRVkExtensions" Kind="Class" />
      <Type Name="GRVkExtensionsSharpVkExtensions" Kind="Class" />
      <Type Name="GRVkGetProcedureAddressDelegate" Kind="Delegate" />
      <Type Name="GRVkImageInfo" Kind="Structure" />
      <Type Name="GrVkYcbcrConversionInfo" Kind="Structure" />
      <Type Name="SK3dView" Kind="Class" />
      <Type Name="SKAbstractManagedStream" Kind="Class" />
      <Type Name="SKAbstractManagedWStream" Kind="Class" />
      <Type Name="SKAlphaType" Kind="Enumeration" />
      <Type Name="SKAutoCanvasRestore" Kind="Class" />
      <Type Name="SKAutoCoInitialize" Kind="Class" />
      <Type Name="SKAutoMaskFreeImage" Kind="Class" />
      <Type Name="SKBitmap" Kind="Class" />
      <Type Name="SKBitmapAllocFlags" Kind="Enumeration" />
      <Type Name="SKBitmapReleaseDelegate" Kind="Delegate" />
      <Type Name="SKBitmapResizeMethod" Kind="Enumeration" />
      <Type Name="SKBlendMode" Kind="Enumeration" />
      <Type Name="SKBlurMaskFilterFlags" Kind="Enumeration" />
      <Type Name="SKBlurStyle" Kind="Enumeration" />
      <Type Name="SKCanvas" Kind="Class" />
      <Type Name="SKClipOperation" Kind="Enumeration" />
      <Type Name="SKCodec" Kind="Class" />
      <Type Name="SKCodecAnimationDisposalMethod" Kind="Enumeration" />
      <Type Name="SKCodecFrameInfo" Kind="Structure" />
      <Type Name="SKCodecOptions" Kind="Structure" />
      <Type Name="SKCodecOrigin" Kind="Enumeration" />
      <Type Name="SKCodecResult" Kind="Enumeration" />
      <Type Name="SKCodecScanlineOrder" Kind="Enumeration" />
      <Type Name="SKColor" Kind="Structure" />
      <Type Name="SKColorChannel" Kind="Enumeration" />
      <Type Name="SKColorF" Kind="Structure" />
      <Type Name="SKColorFilter" Kind="Class" />
      <Type Name="SKColors" Kind="Structure" />
      <Type Name="SKColorSpace" Kind="Class" />
      <Type Name="SKColorSpaceFlags" Kind="Enumeration" />
      <Type Name="SKColorSpaceGamut" Kind="Enumeration" />
      <Type Name="SKColorSpaceIccProfile" Kind="Class" />
      <Type Name="SKColorSpacePrimaries" Kind="Structure" />
      <Type Name="SKColorSpaceRenderTargetGamma" Kind="Enumeration" />
      <Type Name="SKColorSpaceTransferFn" Kind="Structure" />
      <Type Name="SKColorSpaceType" Kind="Enumeration" />
      <Type Name="SKColorSpaceXyz" Kind="Structure" />
      <Type Name="SKColorTable" Kind="Class" />
      <Type Name="SKColorType" Kind="Enumeration" />
      <Type Name="SKCropRectFlags" Kind="Enumeration" />
      <Type Name="SKData" Kind="Class" />
      <Type Name="SKDataReleaseDelegate" Kind="Delegate" />
      <Type Name="SKDisplacementMapEffectChannelSelectorType" Kind="Enumeration" />
      <Type Name="SKDocument" Kind="Class" />
      <Type Name="SKDocumentPdfMetadata" Kind="Structure" />
      <Type Name="SKDrawable" Kind="Class" />
      <Type Name="SKDropShadowImageFilterShadowMode" Kind="Enumeration" />
      <Type Name="SKDynamicMemoryWStream" Kind="Class" />
      <Type Name="SKEncodedImageFormat" Kind="Enumeration" />
      <Type Name="SKEncodedInfo" Kind="Structure" />
      <Type Name="SKEncodedInfoAlpha" Kind="Enumeration" />
      <Type Name="SKEncodedInfoColor" Kind="Enumeration" />
      <Type Name="SKEncodedOrigin" Kind="Enumeration" />
      <Type Name="SKEncoding" Kind="Enumeration" />
      <Type Name="SKFileStream" Kind="Class" />
      <Type Name="SKFileWStream" Kind="Class" />
      <Type Name="SKFilterQuality" Kind="Enumeration" />
      <Type Name="SKFont" Kind="Class" />
      <Type Name="SKFontEdging" Kind="Enumeration" />
      <Type Name="SKFontHinting" Kind="Enumeration" />
      <Type Name="SKFontManager" Kind="Class" />
      <Type Name="SKFontMetrics" Kind="Structure" />
      <Type Name="SKFontStyle" Kind="Class" />
      <Type Name="SKFontStyleSet" Kind="Class" />
      <Type Name="SKFontStyleSlant" Kind="Enumeration" />
      <Type Name="SKFontStyleWeight" Kind="Enumeration" />
      <Type Name="SKFontStyleWidth" Kind="Enumeration" />
      <Type Name="SKFrontBufferedManagedStream" Kind="Class" />
      <Type Name="SKFrontBufferedStream" Kind="Class" />
      <Type Name="SKGlyphPathDelegate" Kind="Delegate" />
      <Type Name="SKGraphics" Kind="Class" />
      <Type Name="SKHighContrastConfig" Kind="Structure" />
      <Type Name="SKHighContrastConfigInvertStyle" Kind="Enumeration" />
      <Type Name="SKHorizontalRunBuffer" Kind="Class" />
      <Type Name="SkiaExtensions" Kind="Class" />
      <Type Name="SkiaSharpVersion" Kind="Class" />
      <Type Name="SKImage" Kind="Class" />
      <Type Name="SKImageCachingHint" Kind="Enumeration" />
      <Type Name="SKImageFilter" Kind="Class" />
      <Type Name="SKImageFilter+CropRect" Kind="Class" />
      <Type Name="SKImageInfo" Kind="Structure" />
      <Type Name="SKImageRasterReleaseDelegate" Kind="Delegate" />
      <Type Name="SKImageTextureReleaseDelegate" Kind="Delegate" />
      <Type Name="SKJpegEncoderAlphaOption" Kind="Enumeration" />
      <Type Name="SKJpegEncoderDownsample" Kind="Enumeration" />
      <Type Name="SKJpegEncoderOptions" Kind="Structure" />
      <Type Name="SKLattice" Kind="Structure" />
      <Type Name="SKLatticeFlags" Kind="Enumeration" />
      <Type Name="SKLatticeRectType" Kind="Enumeration" />
      <Type Name="SKManagedPixelSerializer" Kind="Class" />
      <Type Name="SKManagedStream" Kind="Class" />
      <Type Name="SKManagedWStream" Kind="Class" />
      <Type Name="SKMask" Kind="Structure" />
      <Type Name="SKMaskFilter" Kind="Class" />
      <Type Name="SKMaskFormat" Kind="Enumeration" />
      <Type Name="SKMatrix" Kind="Structure" />
      <Type Name="SKMatrix44" Kind="Class" />
      <Type Name="SKMatrix44TypeMask" Kind="Enumeration" />
      <Type Name="SKMatrixConvolutionTileMode" Kind="Enumeration" />
      <Type Name="SKMemoryStream" Kind="Class" />
      <Type Name="SKNamedGamma" Kind="Enumeration" />
      <Type Name="SKNativeObject" Kind="Class" />
      <Type Name="SKNoDrawCanvas" Kind="Class" />
      <Type Name="SKNWayCanvas" Kind="Class" />
      <Type Name="SKObject" Kind="Class" />
      <Type Name="SKOverdrawCanvas" Kind="Class" />
      <Type Name="SKPaint" Kind="Class" />
      <Type Name="SKPaintHinting" Kind="Enumeration" />
      <Type Name="SKPaintStyle" Kind="Enumeration" />
      <Type Name="SKPath" Kind="Class" />
      <Type Name="SKPath+Iterator" Kind="Class" />
      <Type Name="SKPath+OpBuilder" Kind="Class" />
      <Type Name="SKPath+RawIterator" Kind="Class" />
      <Type Name="SKPath1DPathEffectStyle" Kind="Enumeration" />
      <Type Name="SKPathAddMode" Kind="Enumeration" />
      <Type Name="SKPathArcSize" Kind="Enumeration" />
      <Type Name="SKPathConvexity" Kind="Enumeration" />
      <Type Name="SKPathDirection" Kind="Enumeration" />
      <Type Name="SKPathEffect" Kind="Class" />
      <Type Name="SKPathFillType" Kind="Enumeration" />
      <Type Name="SKPathMeasure" Kind="Class" />
      <Type Name="SKPathMeasureMatrixFlags" Kind="Enumeration" />
      <Type Name="SKPathOp" Kind="Enumeration" />
      <Type Name="SKPathSegmentMask" Kind="Enumeration" />
      <Type Name="SKPathVerb" Kind="Enumeration" />
      <Type Name="SKPicture" Kind="Class" />
      <Type Name="SKPictureRecorder" Kind="Class" />
      <Type Name="SKPixelGeometry" Kind="Enumeration" />
      <Type Name="SKPixelSerializer" Kind="Class" />
      <Type Name="SKPixmap" Kind="Class" />
      <Type Name="SKPMColor" Kind="Structure" />
      <Type Name="SKPngEncoderFilterFlags" Kind="Enumeration" />
      <Type Name="SKPngEncoderOptions" Kind="Structure" />
      <Type Name="SKPoint" Kind="Structure" />
      <Type Name="SKPoint3" Kind="Structure" />
      <Type Name="SKPointI" Kind="Structure" />
      <Type Name="SKPointMode" Kind="Enumeration" />
      <Type Name="SKPositionedRunBuffer" Kind="Class" />
      <Type Name="SKRect" Kind="Structure" />
      <Type Name="SKRectI" Kind="Structure" />
      <Type Name="SKRegion" Kind="Class" />
      <Type Name="SKRegion+ClipIterator" Kind="Class" />
      <Type Name="SKRegion+RectIterator" Kind="Class" />
      <Type Name="SKRegion+SpanIterator" Kind="Class" />
      <Type Name="SKRegionOperation" Kind="Enumeration" />
      <Type Name="SKRotationScaleMatrix" Kind="Structure" />
      <Type Name="SKRotationScaleRunBuffer" Kind="Class" />
      <Type Name="SKRoundRect" Kind="Class" />
      <Type Name="SKRoundRectCorner" Kind="Enumeration" />
      <Type Name="SKRoundRectType" Kind="Enumeration" />
      <Type Name="SKRunBuffer" Kind="Class" />
      <Type Name="SKRuntimeEffect" Kind="Class" />
      <Type Name="SKRuntimeEffectChildren" Kind="Class" />
      <Type Name="SKRuntimeEffectUniform" Kind="Structure" />
      <Type Name="SKRuntimeEffectUniforms" Kind="Class" />
      <Type Name="SKShader" Kind="Class" />
      <Type Name="SKShaderTileMode" Kind="Enumeration" />
      <Type Name="SKSize" Kind="Structure" />
      <Type Name="SKSizeI" Kind="Structure" />
      <Type Name="SKStream" Kind="Class" />
      <Type Name="SKStreamAsset" Kind="Class" />
      <Type Name="SKStreamMemory" Kind="Class" />
      <Type Name="SKStreamRewindable" Kind="Class" />
      <Type Name="SKStreamSeekable" Kind="Class" />
      <Type Name="SKStrokeCap" Kind="Enumeration" />
      <Type Name="SKStrokeJoin" Kind="Enumeration" />
      <Type Name="SKSurface" Kind="Class" />
      <Type Name="SKSurfaceProperties" Kind="Class" />
      <Type Name="SKSurfaceProps" Kind="Structure" />
      <Type Name="SKSurfacePropsFlags" Kind="Enumeration" />
      <Type Name="SKSurfaceReleaseDelegate" Kind="Delegate" />
      <Type Name="SKSvgCanvas" Kind="Class" />
      <Type Name="SKSwizzle" Kind="Class" />
      <Type Name="SKTextAlign" Kind="Enumeration" />
      <Type Name="SKTextBlob" Kind="Class" />
      <Type Name="SKTextBlobBuilder" Kind="Class" />
      <Type Name="SKTextEncoding" Kind="Enumeration" />
      <Type Name="SKTraceMemoryDump" Kind="Class" />
      <Type Name="SKTransferFunctionBehavior" Kind="Enumeration" />
      <Type Name="SKTrimPathEffectMode" Kind="Enumeration" />
      <Type Name="SKTypeface" Kind="Class" />
      <Type Name="SKTypefaceStyle" Kind="Enumeration" />
      <Type Name="SKVertexMode" Kind="Enumeration" />
      <Type Name="SKVertices" Kind="Class" />
      <Type Name="SKWebpEncoderCompression" Kind="Enumeration" />
      <Type Name="SKWebpEncoderOptions" Kind="Structure" />
      <Type Name="SKWStream" Kind="Class" />
      <Type Name="SKXmlStreamWriter" Kind="Class" />
      <Type Name="SKXmlWriter" Kind="Class" />
      <Type Name="SKZeroInitialized" Kind="Enumeration" />
      <Type Name="StringUtilities" Kind="Class" />
    </Namespace>
    <Namespace Name="SkiaSharp.HarfBuzz">
      <Type Name="BlobExtensions" Kind="Class" />
      <Type Name="CanvasExtensions" Kind="Class" />
      <Type Name="FontExtensions" Kind="Class" />
      <Type Name="SKShaper" Kind="Class" />
      <Type Name="SKShaper+Result" Kind="Class" />
    </Namespace>
    <Namespace Name="SkiaSharp.Internals">
      <Type Name="IPlatformLock" Kind="Interface" />
      <Type Name="PlatformConfiguration" Kind="Class" />
      <Type Name="PlatformLock" Kind="Class" />
    </Namespace>
    <Namespace Name="SkiaSharp.SceneGraph">
      <Type Name="InvalidationController" Kind="Class" />
    </Namespace>
    <Namespace Name="SkiaSharp.Skottie">
      <Type Name="Animation" Kind="Class" />
      <Type Name="AnimationRenderFlags" Kind="Enumeration" />
    </Namespace>
    <Namespace Name="SkiaSharp.Views.Android">
      <Type Name="AndroidExtensions" Kind="Class" />
      <Type Name="Extensions" Kind="Class" />
      <Type Name="GLTextureView" Kind="Class" />
      <Type Name="GLTextureView+IEGLConfigChooser" Kind="Interface" />
      <Type Name="GLTextureView+IEGLContextFactory" Kind="Interface" />
      <Type Name="GLTextureView+IEGLWindowSurfaceFactory" Kind="Interface" />
      <Type Name="GLTextureView+IGLWrapper" Kind="Interface" />
      <Type Name="GLTextureView+IRenderer" Kind="Interface" />
      <Type Name="SKCanvasView" Kind="Class" />
      <Type Name="SKGLSurfaceView" Kind="Class" />
      <Type Name="SKGLSurfaceView+ISKRenderer" Kind="Interface" />
      <Type Name="SKGLSurfaceViewRenderer" Kind="Class" />
      <Type Name="SKGLTextureView" Kind="Class" />
      <Type Name="SKGLTextureView+ISKRenderer" Kind="Interface" />
      <Type Name="SKGLTextureViewRenderer" Kind="Class" />
      <Type Name="SKLockedSurface" Kind="Class" />
      <Type Name="SKPaintGLSurfaceEventArgs" Kind="Class" />
      <Type Name="SKPaintSurfaceEventArgs" Kind="Class" />
      <Type Name="SKSurfaceView" Kind="Class" />
    </Namespace>
    <Namespace Name="SkiaSharp.Views.Blazor">
      <Type Name="SKCanvasView" Kind="Class" />
      <Type Name="SKGLView" Kind="Class" />
      <Type Name="SKPaintGLSurfaceEventArgs" Kind="Class" />
      <Type Name="SKPaintSurfaceEventArgs" Kind="Class" />
    </Namespace>
    <Namespace Name="SkiaSharp.Views.Blazor.Internal">
      <Type Name="ActionHelper" Kind="Class" />
      <Type Name="FloatFloatActionHelper" Kind="Class" />
    </Namespace>
    <Namespace Name="SkiaSharp.Views.Desktop">
      <Type Name="Extensions" Kind="Class" />
      <Type Name="SKControl" Kind="Class" />
      <Type Name="SKGLControl" Kind="Class" />
      <Type Name="SKPaintGLSurfaceEventArgs" Kind="Class" />
      <Type Name="SKPaintSurfaceEventArgs" Kind="Class" />
    </Namespace>
    <Namespace Name="SkiaSharp.Views.Forms">
      <Type Name="Extensions" Kind="Class" />
      <Type Name="GetPropertyValueEventArgs`1" DisplayName="GetPropertyValueEventArgs&lt;T&gt;" Kind="Class" />
      <Type Name="ISKCanvasViewController" Kind="Interface" />
      <Type Name="ISKGLViewController" Kind="Interface" />
      <Type Name="SKBitmapImageSource" Kind="Class" />
      <Type Name="SKCanvasView" Kind="Class" />
      <Type Name="SKGLView" Kind="Class" />
      <Type Name="SKImageImageSource" Kind="Class" />
      <Type Name="SKMouseButton" Kind="Enumeration" />
      <Type Name="SKPaintGLSurfaceEventArgs" Kind="Class" />
      <Type Name="SKPaintSurfaceEventArgs" Kind="Class" />
      <Type Name="SKPictureImageSource" Kind="Class" />
      <Type Name="SKPixmapImageSource" Kind="Class" />
      <Type Name="SKTouchAction" Kind="Enumeration" />
      <Type Name="SKTouchDeviceType" Kind="Enumeration" />
      <Type Name="SKTouchEventArgs" Kind="Class" />
    </Namespace>
    <Namespace Name="SkiaSharp.Views.Gtk">
      <Type Name="GTKExtensions" Kind="Class" />
      <Type Name="SKDrawingArea" Kind="Class" />
      <Type Name="SKWidget" Kind="Class" />
    </Namespace>
    <Namespace Name="SkiaSharp.Views.iOS">
      <Type Name="AppleExtensions" Kind="Class" />
      <Type Name="Extensions" Kind="Class" />
      <Type Name="iOSExtensions" Kind="Class" />
      <Type Name="ISKCanvasLayerDelegate" Kind="Interface" />
      <Type Name="ISKGLLayerDelegate" Kind="Interface" />
      <Type Name="SKCanvasLayer" Kind="Class" />
      <Type Name="SKCanvasView" Kind="Class" />
      <Type Name="SKGLLayer" Kind="Class" />
      <Type Name="SKGLView" Kind="Class" />
      <Type Name="SKMetalView" Kind="Class" />
      <Type Name="SKPaintGLSurfaceEventArgs" Kind="Class" />
      <Type Name="SKPaintMetalSurfaceEventArgs" Kind="Class" />
      <Type Name="SKPaintSurfaceEventArgs" Kind="Class" />
    </Namespace>
    <Namespace Name="SkiaSharp.Views.Mac">
      <Type Name="AppleExtensions" Kind="Class" />
      <Type Name="Extensions" Kind="Class" />
      <Type Name="ISKCanvasLayerDelegate" Kind="Interface" />
      <Type Name="ISKGLLayerDelegate" Kind="Interface" />
      <Type Name="MacExtensions" Kind="Class" />
      <Type Name="SKCanvasLayer" Kind="Class" />
      <Type Name="SKCanvasView" Kind="Class" />
      <Type Name="SKGLLayer" Kind="Class" />
      <Type Name="SKGLView" Kind="Class" />
      <Type Name="SKMetalView" Kind="Class" />
      <Type Name="SKPaintGLSurfaceEventArgs" Kind="Class" />
      <Type Name="SKPaintMetalSurfaceEventArgs" Kind="Class" />
      <Type Name="SKPaintSurfaceEventArgs" Kind="Class" />
    </Namespace>
    <Namespace Name="SkiaSharp.Views.Maui">
      <Type Name="Extensions" Kind="Class" />
      <Type Name="ISKBitmapImageSource" Kind="Interface" />
      <Type Name="ISKCanvasView" Kind="Interface" />
      <Type Name="ISKImageImageSource" Kind="Interface" />
      <Type Name="ISKPictureImageSource" Kind="Interface" />
      <Type Name="ISKPixmapImageSource" Kind="Interface" />
      <Type Name="SKMouseButton" Kind="Enumeration" />
      <Type Name="SKPaintGLSurfaceEventArgs" Kind="Class" />
      <Type Name="SKPaintSurfaceEventArgs" Kind="Class" />
      <Type Name="SKTouchAction" Kind="Enumeration" />
      <Type Name="SKTouchDeviceType" Kind="Enumeration" />
      <Type Name="SKTouchEventArgs" Kind="Class" />
    </Namespace>
    <Namespace Name="SkiaSharp.Views.Maui.Controls">
      <Type Name="AppHostBuilderExtensions" Kind="Class" />
      <Type Name="GetPropertyValueEventArgs`1" DisplayName="GetPropertyValueEventArgs&lt;T&gt;" Kind="Class" />
      <Type Name="ISKCanvasViewController" Kind="Interface" />
      <Type Name="ISKGLViewController" Kind="Interface" />
      <Type Name="SKBitmapImageSource" Kind="Class" />
      <Type Name="SKCanvasView" Kind="Class" />
      <Type Name="SKGLView" Kind="Class" />
      <Type Name="SKImageImageSource" Kind="Class" />
      <Type Name="SKPictureImageSource" Kind="Class" />
      <Type Name="SKPixmapImageSource" Kind="Class" />
    </Namespace>
    <Namespace Name="SkiaSharp.Views.Maui.Controls.Compatibility">
      <Type Name="AppHostBuilderExtensions" Kind="Class" />
    </Namespace>
    <Namespace Name="SkiaSharp.Views.Maui.Controls.Hosting">
      <Type Name="AppHostBuilderExtensions" Kind="Class" />
    </Namespace>
    <Namespace Name="SkiaSharp.Views.Maui.Handlers">
      <Type Name="SKCanvasViewHandler" Kind="Class" />
      <Type Name="SKImageSourceService" Kind="Class" />
    </Namespace>
    <Namespace Name="SkiaSharp.Views.Maui.Platform"></Namespace>
    <Namespace Name="SkiaSharp.Views.Tizen">
      <Type Name="CustomRenderingView" Kind="Class" />
      <Type Name="Extensions" Kind="Class" />
      <Type Name="RenderingMode" Kind="Enumeration" />
      <Type Name="ScalingInfo" Kind="Class" />
      <Type Name="SKCanvasView" Kind="Class" />
      <Type Name="SKGLSurfaceView" Kind="Class" />
      <Type Name="SKPaintGLSurfaceEventArgs" Kind="Class" />
      <Type Name="SKPaintSurfaceEventArgs" Kind="Class" />
      <Type Name="TizenExtensions" Kind="Class" />
    </Namespace>
    <Namespace Name="SkiaSharp.Views.tvOS">
      <Type Name="AppleExtensions" Kind="Class" />
      <Type Name="Extensions" Kind="Class" />
      <Type Name="iOSExtensions" Kind="Class" />
      <Type Name="ISKCanvasLayerDelegate" Kind="Interface" />
      <Type Name="ISKGLLayerDelegate" Kind="Interface" />
      <Type Name="SKCanvasLayer" Kind="Class" />
      <Type Name="SKCanvasView" Kind="Class" />
      <Type Name="SKGLLayer" Kind="Class" />
      <Type Name="SKGLView" Kind="Class" />
      <Type Name="SKPaintGLSurfaceEventArgs" Kind="Class" />
      <Type Name="SKPaintSurfaceEventArgs" Kind="Class" />
    </Namespace>
    <Namespace Name="SkiaSharp.Views.UWP">
      <Type Name="AngleSwapChainPanel" Kind="Class" />
      <Type Name="Extensions" Kind="Class" />
      <Type Name="GlesBackingOption" Kind="Enumeration" />
      <Type Name="GlesContext" Kind="Class" />
      <Type Name="GlesDepthFormat" Kind="Enumeration" />
      <Type Name="GlesMultisampling" Kind="Enumeration" />
      <Type Name="GlesRenderTarget" Kind="Enumeration" />
      <Type Name="GlesStencilFormat" Kind="Enumeration" />
      <Type Name="SKPaintGLSurfaceEventArgs" Kind="Class" />
      <Type Name="SKPaintSurfaceEventArgs" Kind="Class" />
      <Type Name="SKSwapChainPanel" Kind="Class" />
      <Type Name="SKXamlCanvas" Kind="Class" />
      <Type Name="UWPExtensions" Kind="Class" />
    </Namespace>
    <Namespace Name="SkiaSharp.Views.watchOS">
      <Type Name="AppleExtensions" Kind="Class" />
      <Type Name="Extensions" Kind="Class" />
      <Type Name="iOSExtensions" Kind="Class" />
      <Type Name="ISKCanvasLayerDelegate" Kind="Interface" />
      <Type Name="SKPaintSurfaceEventArgs" Kind="Class" />
    </Namespace>
    <Namespace Name="SkiaSharp.Views.Windows">
      <Type Name="Extensions" Kind="Class" />
      <Type Name="SKPaintGLSurfaceEventArgs" Kind="Class" />
      <Type Name="SKPaintSurfaceEventArgs" Kind="Class" />
      <Type Name="SKXamlCanvas" Kind="Class" />
      <Type Name="WindowsExtensions" Kind="Class" />
    </Namespace>
    <Namespace Name="SkiaSharp.Views.WPF">
      <Type Name="SKElement" Kind="Class" />
      <Type Name="WPFExtensions" Kind="Class" />
    </Namespace>
  </Types>
  <Title>SkiaSharp</Title>
  <ExtensionMethods>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:SkiaSharp.GRVkExtensions" />
      </Targets>
      <Member MemberName="Initialize">
        <MemberSignature Language="C#" Value="public static void Initialize (this SkiaSharp.GRVkExtensions extensions, SkiaSharp.GRSharpVkGetProcedureAddressDelegate getProc, SharpVk.Instance instance, SharpVk.PhysicalDevice physicalDevice);" FrameworkAlternate="skiasharp-vulkan-sharpvk-2.80" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Initialize(class SkiaSharp.GRVkExtensions extensions, class SkiaSharp.GRSharpVkGetProcedureAddressDelegate getProc, class SharpVk.Instance instance, class SharpVk.PhysicalDevice physicalDevice) cil managed" FrameworkAlternate="skiasharp-vulkan-sharpvk-2.80" />
        <MemberSignature Language="DocId" Value="M:SkiaSharp.GRVkExtensionsSharpVkExtensions.Initialize(SkiaSharp.GRVkExtensions,SkiaSharp.GRSharpVkGetProcedureAddressDelegate,SharpVk.Instance,SharpVk.PhysicalDevice)" FrameworkAlternate="skiasharp-vulkan-sharpvk-2.80" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType FrameworkAlternate="skiasharp-vulkan-sharpvk-2.80">System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="extensions" Type="SkiaSharp.GRVkExtensions" Index="0" FrameworkAlternate="skiasharp-vulkan-sharpvk-2.80" RefType="this" />
          <Parameter Name="getProc" Type="SkiaSharp.GRSharpVkGetProcedureAddressDelegate" Index="1" FrameworkAlternate="skiasharp-vulkan-sharpvk-2.80" />
          <Parameter Name="instance" Type="SharpVk.Instance" Index="2" FrameworkAlternate="skiasharp-vulkan-sharpvk-2.80" />
          <Parameter Name="physicalDevice" Type="SharpVk.PhysicalDevice" Index="3" FrameworkAlternate="skiasharp-vulkan-sharpvk-2.80" />
        </Parameters>
        <Docs>
          <param name="extensions">To be added.</param>
          <param name="getProc">To be added.</param>
          <param name="instance">To be added.</param>
          <param name="physicalDevice">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="SkiaSharp.GRVkExtensionsSharpVkExtensions" Member="M:SkiaSharp.GRVkExtensionsSharpVkExtensions.Initialize(SkiaSharp.GRVkExtensions,SkiaSharp.GRSharpVkGetProcedureAddressDelegate,SharpVk.Instance,SharpVk.PhysicalDevice)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:SkiaSharp.GRVkExtensions" />
      </Targets>
      <Member MemberName="Initialize">
        <MemberSignature Language="C#" Value="public static void Initialize (this SkiaSharp.GRVkExtensions extensions, SkiaSharp.GRSharpVkGetProcedureAddressDelegate getProc, SharpVk.Instance instance, SharpVk.PhysicalDevice physicalDevice, string[] instanceExtensions, string[] deviceExtensions);" FrameworkAlternate="skiasharp-vulkan-sharpvk-2.80" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Initialize(class SkiaSharp.GRVkExtensions extensions, class SkiaSharp.GRSharpVkGetProcedureAddressDelegate getProc, class SharpVk.Instance instance, class SharpVk.PhysicalDevice physicalDevice, string[] instanceExtensions, string[] deviceExtensions) cil managed" FrameworkAlternate="skiasharp-vulkan-sharpvk-2.80" />
        <MemberSignature Language="DocId" Value="M:SkiaSharp.GRVkExtensionsSharpVkExtensions.Initialize(SkiaSharp.GRVkExtensions,SkiaSharp.GRSharpVkGetProcedureAddressDelegate,SharpVk.Instance,SharpVk.PhysicalDevice,System.String[],System.String[])" FrameworkAlternate="skiasharp-vulkan-sharpvk-2.80" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType FrameworkAlternate="skiasharp-vulkan-sharpvk-2.80">System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="extensions" Type="SkiaSharp.GRVkExtensions" Index="0" FrameworkAlternate="skiasharp-vulkan-sharpvk-2.80" RefType="this" />
          <Parameter Name="getProc" Type="SkiaSharp.GRSharpVkGetProcedureAddressDelegate" Index="1" FrameworkAlternate="skiasharp-vulkan-sharpvk-2.80" />
          <Parameter Name="instance" Type="SharpVk.Instance" Index="2" FrameworkAlternate="skiasharp-vulkan-sharpvk-2.80" />
          <Parameter Name="physicalDevice" Type="SharpVk.PhysicalDevice" Index="3" FrameworkAlternate="skiasharp-vulkan-sharpvk-2.80" />
          <Parameter Name="instanceExtensions" Type="System.String[]" Index="4" FrameworkAlternate="skiasharp-vulkan-sharpvk-2.80" />
          <Parameter Name="deviceExtensions" Type="System.String[]" Index="5" FrameworkAlternate="skiasharp-vulkan-sharpvk-2.80" />
        </Parameters>
        <Docs>
          <param name="extensions">To be added.</param>
          <param name="getProc">To be added.</param>
          <param name="instance">To be added.</param>
          <param name="physicalDevice">To be added.</param>
          <param name="instanceExtensions">To be added.</param>
          <param name="deviceExtensions">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="SkiaSharp.GRVkExtensionsSharpVkExtensions" Member="M:SkiaSharp.GRVkExtensionsSharpVkExtensions.Initialize(SkiaSharp.GRVkExtensions,SkiaSharp.GRSharpVkGetProcedureAddressDelegate,SharpVk.Instance,SharpVk.PhysicalDevice,System.String[],System.String[])" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:SkiaSharp.SKStreamAsset" />
      </Targets>
      <Member MemberName="ToHarfBuzzBlob">
        <MemberSignature Language="C#" Value="public static HarfBuzzSharp.Blob ToHarfBuzzBlob (this SkiaSharp.SKStreamAsset asset);" FrameworkAlternate="skiasharp-harfbuzz-1.60" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class HarfBuzzSharp.Blob ToHarfBuzzBlob(class SkiaSharp.SKStreamAsset asset) cil managed" FrameworkAlternate="skiasharp-harfbuzz-1.60" />
        <MemberSignature Language="DocId" Value="M:SkiaSharp.HarfBuzz.BlobExtensions.ToHarfBuzzBlob(SkiaSharp.SKStreamAsset)" FrameworkAlternate="skiasharp-harfbuzz-1.60" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType FrameworkAlternate="skiasharp-harfbuzz-1.60">HarfBuzzSharp.Blob</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="asset" Type="SkiaSharp.SKStreamAsset" Index="0" FrameworkAlternate="skiasharp-harfbuzz-1.60" RefType="this" />
        </Parameters>
        <Docs>
          <param name="asset">The stream to convert into a <see cref="T:HarfBuzzSharp.Blob" />.</param>
          <summary>Converts a seekable stream into a <see cref="T:HarfBuzzSharp.Blob" />.</summary>
        </Docs>
        <Link Type="SkiaSharp.HarfBuzz.BlobExtensions" Member="M:SkiaSharp.HarfBuzz.BlobExtensions.ToHarfBuzzBlob(SkiaSharp.SKStreamAsset)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:SkiaSharp.SKCanvas" />
      </Targets>
      <Member MemberName="DrawShapedText">
        <MemberSignature Language="C#" Value="public static void DrawShapedText (this SkiaSharp.SKCanvas canvas, SkiaSharp.HarfBuzz.SKShaper shaper, string text, SkiaSharp.SKPoint p, SkiaSharp.SKPaint paint);" FrameworkAlternate="skiasharp-harfbuzz-2.80" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DrawShapedText(class SkiaSharp.SKCanvas canvas, class SkiaSharp.HarfBuzz.SKShaper shaper, string text, valuetype SkiaSharp.SKPoint p, class SkiaSharp.SKPaint paint) cil managed" FrameworkAlternate="skiasharp-harfbuzz-2.80" />
        <MemberSignature Language="DocId" Value="M:SkiaSharp.HarfBuzz.CanvasExtensions.DrawShapedText(SkiaSharp.SKCanvas,SkiaSharp.HarfBuzz.SKShaper,System.String,SkiaSharp.SKPoint,SkiaSharp.SKPaint)" FrameworkAlternate="skiasharp-harfbuzz-2.80" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType FrameworkAlternate="skiasharp-harfbuzz-2.80">System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="canvas" Type="SkiaSharp.SKCanvas" RefType="this" Index="0" FrameworkAlternate="skiasharp-harfbuzz-2.80;skiasharp-harfbuzz-2.88" />
          <Parameter Name="shaper" Type="SkiaSharp.HarfBuzz.SKShaper" Index="1" FrameworkAlternate="skiasharp-harfbuzz-2.80;skiasharp-harfbuzz-2.88" />
          <Parameter Name="text" Type="System.String" Index="2" FrameworkAlternate="skiasharp-harfbuzz-2.80;skiasharp-harfbuzz-2.88" />
          <Parameter Name="p" Type="SkiaSharp.SKPoint" Index="3" FrameworkAlternate="skiasharp-harfbuzz-2.80;skiasharp-harfbuzz-2.88" />
          <Parameter Name="paint" Type="SkiaSharp.SKPaint" Index="4" FrameworkAlternate="skiasharp-harfbuzz-2.80;skiasharp-harfbuzz-2.88" />
        </Parameters>
        <Docs>
          <param name="canvas">To be added.</param>
          <param name="shaper">To be added.</param>
          <param name="text">To be added.</param>
          <param name="p">To be added.</param>
          <param name="paint">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="SkiaSharp.HarfBuzz.CanvasExtensions" Member="M:SkiaSharp.HarfBuzz.CanvasExtensions.DrawShapedText(SkiaSharp.SKCanvas,SkiaSharp.HarfBuzz.SKShaper,System.String,SkiaSharp.SKPoint,SkiaSharp.SKPaint)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:SkiaSharp.SKCanvas" />
      </Targets>
      <Member MemberName="DrawShapedText">
        <MemberSignature Language="C#" Value="public static void DrawShapedText (this SkiaSharp.SKCanvas canvas, SkiaSharp.HarfBuzz.SKShaper shaper, string text, float x, float y, SkiaSharp.SKPaint paint);" FrameworkAlternate="skiasharp-harfbuzz-1.60" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DrawShapedText(class SkiaSharp.SKCanvas canvas, class SkiaSharp.HarfBuzz.SKShaper shaper, string text, float32 x, float32 y, class SkiaSharp.SKPaint paint) cil managed" FrameworkAlternate="skiasharp-harfbuzz-1.60" />
        <MemberSignature Language="DocId" Value="M:SkiaSharp.HarfBuzz.CanvasExtensions.DrawShapedText(SkiaSharp.SKCanvas,SkiaSharp.HarfBuzz.SKShaper,System.String,System.Single,System.Single,SkiaSharp.SKPaint)" FrameworkAlternate="skiasharp-harfbuzz-1.60" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType FrameworkAlternate="skiasharp-harfbuzz-1.60">System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="canvas" Type="SkiaSharp.SKCanvas" Index="0" FrameworkAlternate="skiasharp-harfbuzz-1.60" RefType="this" />
          <Parameter Name="shaper" Type="SkiaSharp.HarfBuzz.SKShaper" Index="1" FrameworkAlternate="skiasharp-harfbuzz-1.60" />
          <Parameter Name="text" Type="System.String" Index="2" FrameworkAlternate="skiasharp-harfbuzz-1.60" />
          <Parameter Name="x" Type="System.Single" Index="3" FrameworkAlternate="skiasharp-harfbuzz-1.60" />
          <Parameter Name="y" Type="System.Single" Index="4" FrameworkAlternate="skiasharp-harfbuzz-1.60" />
          <Parameter Name="paint" Type="SkiaSharp.SKPaint" Index="5" FrameworkAlternate="skiasharp-harfbuzz-1.60" />
        </Parameters>
        <Docs>
          <param name="canvas">The canvas to draw on.</param>
          <param name="shaper">The text shaper to use when shaping the text.</param>
          <param name="text">The text to draw.</param>
          <param name="x">The x-coordinate of the origin of the text being drawn.</param>
          <param name="y">The y-coordinate of the origin of the text being drawn.</param>
          <param name="paint">The paint to use when drawing the text.</param>
          <summary>Draws shaped text on the canvas at the specified coordinates.</summary>
        </Docs>
        <Link Type="SkiaSharp.HarfBuzz.CanvasExtensions" Member="M:SkiaSharp.HarfBuzz.CanvasExtensions.DrawShapedText(SkiaSharp.SKCanvas,SkiaSharp.HarfBuzz.SKShaper,System.String,System.Single,System.Single,SkiaSharp.SKPaint)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:SkiaSharp.SKCanvas" />
      </Targets>
      <Member MemberName="DrawShapedText">
        <MemberSignature Language="C#" Value="public static void DrawShapedText (this SkiaSharp.SKCanvas canvas, string text, SkiaSharp.SKPoint p, SkiaSharp.SKPaint paint);" FrameworkAlternate="skiasharp-harfbuzz-2.80" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DrawShapedText(class SkiaSharp.SKCanvas canvas, string text, valuetype SkiaSharp.SKPoint p, class SkiaSharp.SKPaint paint) cil managed" FrameworkAlternate="skiasharp-harfbuzz-2.80" />
        <MemberSignature Language="DocId" Value="M:SkiaSharp.HarfBuzz.CanvasExtensions.DrawShapedText(SkiaSharp.SKCanvas,System.String,SkiaSharp.SKPoint,SkiaSharp.SKPaint)" FrameworkAlternate="skiasharp-harfbuzz-2.80" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType FrameworkAlternate="skiasharp-harfbuzz-2.80">System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="canvas" Type="SkiaSharp.SKCanvas" RefType="this" Index="0" FrameworkAlternate="skiasharp-harfbuzz-2.80;skiasharp-harfbuzz-2.88" />
          <Parameter Name="text" Type="System.String" Index="1" FrameworkAlternate="skiasharp-harfbuzz-2.80;skiasharp-harfbuzz-2.88" />
          <Parameter Name="p" Type="SkiaSharp.SKPoint" Index="2" FrameworkAlternate="skiasharp-harfbuzz-2.80;skiasharp-harfbuzz-2.88" />
          <Parameter Name="paint" Type="SkiaSharp.SKPaint" Index="3" FrameworkAlternate="skiasharp-harfbuzz-2.80;skiasharp-harfbuzz-2.88" />
        </Parameters>
        <Docs>
          <param name="canvas">To be added.</param>
          <param name="text">To be added.</param>
          <param name="p">To be added.</param>
          <param name="paint">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="SkiaSharp.HarfBuzz.CanvasExtensions" Member="M:SkiaSharp.HarfBuzz.CanvasExtensions.DrawShapedText(SkiaSharp.SKCanvas,System.String,SkiaSharp.SKPoint,SkiaSharp.SKPaint)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:SkiaSharp.SKCanvas" />
      </Targets>
      <Member MemberName="DrawShapedText">
        <MemberSignature Language="C#" Value="public static void DrawShapedText (this SkiaSharp.SKCanvas canvas, string text, float x, float y, SkiaSharp.SKPaint paint);" FrameworkAlternate="skiasharp-harfbuzz-2.80" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DrawShapedText(class SkiaSharp.SKCanvas canvas, string text, float32 x, float32 y, class SkiaSharp.SKPaint paint) cil managed" FrameworkAlternate="skiasharp-harfbuzz-2.80" />
        <MemberSignature Language="DocId" Value="M:SkiaSharp.HarfBuzz.CanvasExtensions.DrawShapedText(SkiaSharp.SKCanvas,System.String,System.Single,System.Single,SkiaSharp.SKPaint)" FrameworkAlternate="skiasharp-harfbuzz-2.80" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType FrameworkAlternate="skiasharp-harfbuzz-2.80">System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="canvas" Type="SkiaSharp.SKCanvas" RefType="this" Index="0" FrameworkAlternate="skiasharp-harfbuzz-2.80;skiasharp-harfbuzz-2.88" />
          <Parameter Name="text" Type="System.String" Index="1" FrameworkAlternate="skiasharp-harfbuzz-2.80;skiasharp-harfbuzz-2.88" />
          <Parameter Name="x" Type="System.Single" Index="2" FrameworkAlternate="skiasharp-harfbuzz-2.80;skiasharp-harfbuzz-2.88" />
          <Parameter Name="y" Type="System.Single" Index="3" FrameworkAlternate="skiasharp-harfbuzz-2.80;skiasharp-harfbuzz-2.88" />
          <Parameter Name="paint" Type="SkiaSharp.SKPaint" Index="4" FrameworkAlternate="skiasharp-harfbuzz-2.80;skiasharp-harfbuzz-2.88" />
        </Parameters>
        <Docs>
          <param name="canvas">To be added.</param>
          <param name="text">To be added.</param>
          <param name="x">To be added.</param>
          <param name="y">To be added.</param>
          <param name="paint">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="SkiaSharp.HarfBuzz.CanvasExtensions" Member="M:SkiaSharp.HarfBuzz.CanvasExtensions.DrawShapedText(SkiaSharp.SKCanvas,System.String,System.Single,System.Single,SkiaSharp.SKPaint)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:HarfBuzzSharp.Font" />
      </Targets>
      <Member MemberName="GetScale">
        <MemberSignature Language="C#" Value="public static SkiaSharp.SKSizeI GetScale (this HarfBuzzSharp.Font font);" FrameworkAlternate="skiasharp-harfbuzz-1.60" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype SkiaSharp.SKSizeI GetScale(class HarfBuzzSharp.Font font) cil managed" FrameworkAlternate="skiasharp-harfbuzz-1.60" />
        <MemberSignature Language="DocId" Value="M:SkiaSharp.HarfBuzz.FontExtensions.GetScale(HarfBuzzSharp.Font)" FrameworkAlternate="skiasharp-harfbuzz-1.60" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType FrameworkAlternate="skiasharp-harfbuzz-1.60">SkiaSharp.SKSizeI</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="font" Type="HarfBuzzSharp.Font" Index="0" FrameworkAlternate="skiasharp-harfbuzz-1.60" RefType="this" />
        </Parameters>
        <Docs>
          <param name="font">The font to retrieve the scale.</param>
          <summary>Retrieves the font scale.</summary>
        </Docs>
        <Link Type="SkiaSharp.HarfBuzz.FontExtensions" Member="M:SkiaSharp.HarfBuzz.FontExtensions.GetScale(HarfBuzzSharp.Font)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:HarfBuzzSharp.Font" />
      </Targets>
      <Member MemberName="SetScale">
        <MemberSignature Language="C#" Value="public static void SetScale (this HarfBuzzSharp.Font font, SkiaSharp.SKSizeI scale);" FrameworkAlternate="skiasharp-harfbuzz-1.60" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetScale(class HarfBuzzSharp.Font font, valuetype SkiaSharp.SKSizeI scale) cil managed" FrameworkAlternate="skiasharp-harfbuzz-1.60" />
        <MemberSignature Language="DocId" Value="M:SkiaSharp.HarfBuzz.FontExtensions.SetScale(HarfBuzzSharp.Font,SkiaSharp.SKSizeI)" FrameworkAlternate="skiasharp-harfbuzz-1.60" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType FrameworkAlternate="skiasharp-harfbuzz-1.60">System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="font" Type="HarfBuzzSharp.Font" Index="0" FrameworkAlternate="skiasharp-harfbuzz-1.60" RefType="this" />
          <Parameter Name="scale" Type="SkiaSharp.SKSizeI" Index="1" FrameworkAlternate="skiasharp-harfbuzz-1.60" />
        </Parameters>
        <Docs>
          <param name="font">The font to set the scale.</param>
          <param name="scale">The scale to set.</param>
          <summary>Sets the font scale.</summary>
        </Docs>
        <Link Type="SkiaSharp.HarfBuzz.FontExtensions" Member="M:SkiaSharp.HarfBuzz.FontExtensions.SetScale(HarfBuzzSharp.Font,SkiaSharp.SKSizeI)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:SkiaSharp.SKColorType" />
      </Targets>
      <Member MemberName="GetAlphaType">
        <MemberSignature Language="C#" Value="public static SkiaSharp.SKAlphaType GetAlphaType (this SkiaSharp.SKColorType colorType, SkiaSharp.SKAlphaType alphaType = SkiaSharp.SKAlphaType.Premul);" FrameworkAlternate="skiasharp-1.68" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype SkiaSharp.SKAlphaType GetAlphaType(valuetype SkiaSharp.SKColorType colorType, valuetype SkiaSharp.SKAlphaType alphaType) cil managed" FrameworkAlternate="skiasharp-1.68" />
        <MemberSignature Language="DocId" Value="M:SkiaSharp.SkiaExtensions.GetAlphaType(SkiaSharp.SKColorType,SkiaSharp.SKAlphaType)" FrameworkAlternate="skiasharp-1.68" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType FrameworkAlternate="skiasharp-1.68">SkiaSharp.SKAlphaType</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="colorType" Type="SkiaSharp.SKColorType" RefType="this" Index="0" FrameworkAlternate="skiasharp-1.68;skiasharp-2.80;skiasharp-2.88" />
          <Parameter Name="alphaType" Type="SkiaSharp.SKAlphaType" Index="1" FrameworkAlternate="skiasharp-1.68;skiasharp-2.80;skiasharp-2.88" />
        </Parameters>
        <Docs>
          <param name="colorType">To be added.</param>
          <param name="alphaType">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="SkiaSharp.SkiaExtensions" Member="M:SkiaSharp.SkiaExtensions.GetAlphaType(SkiaSharp.SKColorType,SkiaSharp.SKAlphaType)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:SkiaSharp.SKColorType" />
      </Targets>
      <Member MemberName="GetBytesPerPixel">
        <MemberSignature Language="C#" Value="public static int GetBytesPerPixel (this SkiaSharp.SKColorType colorType);" FrameworkAlternate="skiasharp-1.68" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 GetBytesPerPixel(valuetype SkiaSharp.SKColorType colorType) cil managed" FrameworkAlternate="skiasharp-1.68" />
        <MemberSignature Language="DocId" Value="M:SkiaSharp.SkiaExtensions.GetBytesPerPixel(SkiaSharp.SKColorType)" FrameworkAlternate="skiasharp-1.68" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType FrameworkAlternate="skiasharp-1.68">System.Int32</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="colorType" Type="SkiaSharp.SKColorType" RefType="this" Index="0" FrameworkAlternate="skiasharp-1.68;skiasharp-2.80;skiasharp-2.88" />
        </Parameters>
        <Docs>
          <param name="colorType">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="SkiaSharp.SkiaExtensions" Member="M:SkiaSharp.SkiaExtensions.GetBytesPerPixel(SkiaSharp.SKColorType)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:SkiaSharp.SKPixelGeometry" />
      </Targets>
      <Member MemberName="IsBgr">
        <MemberSignature Language="C#" Value="public static bool IsBgr (this SkiaSharp.SKPixelGeometry pg);" FrameworkAlternate="skiasharp-1.60" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsBgr(valuetype SkiaSharp.SKPixelGeometry pg) cil managed" FrameworkAlternate="skiasharp-1.60" />
        <MemberSignature Language="DocId" Value="M:SkiaSharp.SkiaExtensions.IsBgr(SkiaSharp.SKPixelGeometry)" FrameworkAlternate="skiasharp-1.60" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType FrameworkAlternate="skiasharp-1.60">System.Boolean</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="pg" Type="SkiaSharp.SKPixelGeometry" Index="0" FrameworkAlternate="skiasharp-1.60" RefType="this" />
        </Parameters>
        <Docs>
          <param name="pg">The pixel geometry to test.</param>
          <summary>Returns true if the pixel geometry is BGR.</summary>
        </Docs>
        <Link Type="SkiaSharp.SkiaExtensions" Member="M:SkiaSharp.SkiaExtensions.IsBgr(SkiaSharp.SKPixelGeometry)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:SkiaSharp.SKPixelGeometry" />
      </Targets>
      <Member MemberName="IsHorizontal">
        <MemberSignature Language="C#" Value="public static bool IsHorizontal (this SkiaSharp.SKPixelGeometry pg);" FrameworkAlternate="skiasharp-1.60" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsHorizontal(valuetype SkiaSharp.SKPixelGeometry pg) cil managed" FrameworkAlternate="skiasharp-1.60" />
        <MemberSignature Language="DocId" Value="M:SkiaSharp.SkiaExtensions.IsHorizontal(SkiaSharp.SKPixelGeometry)" FrameworkAlternate="skiasharp-1.60" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType FrameworkAlternate="skiasharp-1.60">System.Boolean</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="pg" Type="SkiaSharp.SKPixelGeometry" Index="0" FrameworkAlternate="skiasharp-1.60" RefType="this" />
        </Parameters>
        <Docs>
          <param name="pg">The pixel geometry to test.</param>
          <summary>Returns true if the pixel geometry is horizontal.</summary>
        </Docs>
        <Link Type="SkiaSharp.SkiaExtensions" Member="M:SkiaSharp.SkiaExtensions.IsHorizontal(SkiaSharp.SKPixelGeometry)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:SkiaSharp.SKPixelGeometry" />
      </Targets>
      <Member MemberName="IsRgb">
        <MemberSignature Language="C#" Value="public static bool IsRgb (this SkiaSharp.SKPixelGeometry pg);" FrameworkAlternate="skiasharp-1.60" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsRgb(valuetype SkiaSharp.SKPixelGeometry pg) cil managed" FrameworkAlternate="skiasharp-1.60" />
        <MemberSignature Language="DocId" Value="M:SkiaSharp.SkiaExtensions.IsRgb(SkiaSharp.SKPixelGeometry)" FrameworkAlternate="skiasharp-1.60" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType FrameworkAlternate="skiasharp-1.60">System.Boolean</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="pg" Type="SkiaSharp.SKPixelGeometry" Index="0" FrameworkAlternate="skiasharp-1.60" RefType="this" />
        </Parameters>
        <Docs>
          <param name="pg">The pixel geometry to test.</param>
          <summary>Returns true if the pixel geometry is RGB.</summary>
        </Docs>
        <Link Type="SkiaSharp.SkiaExtensions" Member="M:SkiaSharp.SkiaExtensions.IsRgb(SkiaSharp.SKPixelGeometry)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:SkiaSharp.SKPixelGeometry" />
      </Targets>
      <Member MemberName="IsVertical">
        <MemberSignature Language="C#" Value="public static bool IsVertical (this SkiaSharp.SKPixelGeometry pg);" FrameworkAlternate="skiasharp-1.60" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsVertical(valuetype SkiaSharp.SKPixelGeometry pg) cil managed" FrameworkAlternate="skiasharp-1.60" />
        <MemberSignature Language="DocId" Value="M:SkiaSharp.SkiaExtensions.IsVertical(SkiaSharp.SKPixelGeometry)" FrameworkAlternate="skiasharp-1.60" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType FrameworkAlternate="skiasharp-1.60">System.Boolean</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="pg" Type="SkiaSharp.SKPixelGeometry" Index="0" FrameworkAlternate="skiasharp-1.60" RefType="this" />
        </Parameters>
        <Docs>
          <param name="pg">The pixel geometry to test.</param>
          <summary>Returns true if the pixel geometry is vertical.</summary>
        </Docs>
        <Link Type="SkiaSharp.SkiaExtensions" Member="M:SkiaSharp.SkiaExtensions.IsVertical(SkiaSharp.SKPixelGeometry)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:SkiaSharp.SKDisplacementMapEffectChannelSelectorType" />
      </Targets>
      <Member MemberName="ToColorChannel">
        <MemberSignature Language="C#" Value="public static SkiaSharp.SKColorChannel ToColorChannel (this SkiaSharp.SKDisplacementMapEffectChannelSelectorType channelSelectorType);" FrameworkAlternate="skiasharp-2.80" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype SkiaSharp.SKColorChannel ToColorChannel(valuetype SkiaSharp.SKDisplacementMapEffectChannelSelectorType channelSelectorType) cil managed" FrameworkAlternate="skiasharp-2.80" />
        <MemberSignature Language="DocId" Value="M:SkiaSharp.SkiaExtensions.ToColorChannel(SkiaSharp.SKDisplacementMapEffectChannelSelectorType)" FrameworkAlternate="skiasharp-2.80" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType FrameworkAlternate="skiasharp-2.80">SkiaSharp.SKColorChannel</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="channelSelectorType" Type="SkiaSharp.SKDisplacementMapEffectChannelSelectorType" RefType="this" Index="0" FrameworkAlternate="skiasharp-2.80;skiasharp-2.88" />
        </Parameters>
        <Docs>
          <param name="channelSelectorType">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="SkiaSharp.SkiaExtensions" Member="M:SkiaSharp.SkiaExtensions.ToColorChannel(SkiaSharp.SKDisplacementMapEffectChannelSelectorType)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:SkiaSharp.SKColorSpaceRenderTargetGamma" />
      </Targets>
      <Member MemberName="ToColorSpaceTransferFn">
        <MemberSignature Language="C#" Value="public static SkiaSharp.SKColorSpaceTransferFn ToColorSpaceTransferFn (this SkiaSharp.SKColorSpaceRenderTargetGamma gamma);" FrameworkAlternate="skiasharp-2.80" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype SkiaSharp.SKColorSpaceTransferFn ToColorSpaceTransferFn(valuetype SkiaSharp.SKColorSpaceRenderTargetGamma gamma) cil managed" FrameworkAlternate="skiasharp-2.80" />
        <MemberSignature Language="DocId" Value="M:SkiaSharp.SkiaExtensions.ToColorSpaceTransferFn(SkiaSharp.SKColorSpaceRenderTargetGamma)" FrameworkAlternate="skiasharp-2.80" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType FrameworkAlternate="skiasharp-2.80">SkiaSharp.SKColorSpaceTransferFn</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="gamma" Type="SkiaSharp.SKColorSpaceRenderTargetGamma" RefType="this" Index="0" FrameworkAlternate="skiasharp-2.80;skiasharp-2.88" />
        </Parameters>
        <Docs>
          <param name="gamma">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="SkiaSharp.SkiaExtensions" Member="M:SkiaSharp.SkiaExtensions.ToColorSpaceTransferFn(SkiaSharp.SKColorSpaceRenderTargetGamma)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:SkiaSharp.SKNamedGamma" />
      </Targets>
      <Member MemberName="ToColorSpaceTransferFn">
        <MemberSignature Language="C#" Value="public static SkiaSharp.SKColorSpaceTransferFn ToColorSpaceTransferFn (this SkiaSharp.SKNamedGamma gamma);" FrameworkAlternate="skiasharp-2.80" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype SkiaSharp.SKColorSpaceTransferFn ToColorSpaceTransferFn(valuetype SkiaSharp.SKNamedGamma gamma) cil managed" FrameworkAlternate="skiasharp-2.80" />
        <MemberSignature Language="DocId" Value="M:SkiaSharp.SkiaExtensions.ToColorSpaceTransferFn(SkiaSharp.SKNamedGamma)" FrameworkAlternate="skiasharp-2.80" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType FrameworkAlternate="skiasharp-2.80">SkiaSharp.SKColorSpaceTransferFn</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="gamma" Type="SkiaSharp.SKNamedGamma" RefType="this" Index="0" FrameworkAlternate="skiasharp-2.80;skiasharp-2.88" />
        </Parameters>
        <Docs>
          <param name="gamma">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="SkiaSharp.SkiaExtensions" Member="M:SkiaSharp.SkiaExtensions.ToColorSpaceTransferFn(SkiaSharp.SKNamedGamma)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:SkiaSharp.SKColorSpaceGamut" />
      </Targets>
      <Member MemberName="ToColorSpaceXyz">
        <MemberSignature Language="C#" Value="public static SkiaSharp.SKColorSpaceXyz ToColorSpaceXyz (this SkiaSharp.SKColorSpaceGamut gamut);" FrameworkAlternate="skiasharp-2.80" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype SkiaSharp.SKColorSpaceXyz ToColorSpaceXyz(valuetype SkiaSharp.SKColorSpaceGamut gamut) cil managed" FrameworkAlternate="skiasharp-2.80" />
        <MemberSignature Language="DocId" Value="M:SkiaSharp.SkiaExtensions.ToColorSpaceXyz(SkiaSharp.SKColorSpaceGamut)" FrameworkAlternate="skiasharp-2.80" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType FrameworkAlternate="skiasharp-2.80">SkiaSharp.SKColorSpaceXyz</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="gamut" Type="SkiaSharp.SKColorSpaceGamut" RefType="this" Index="0" FrameworkAlternate="skiasharp-2.80;skiasharp-2.88" />
        </Parameters>
        <Docs>
          <param name="gamut">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="SkiaSharp.SkiaExtensions" Member="M:SkiaSharp.SkiaExtensions.ToColorSpaceXyz(SkiaSharp.SKColorSpaceGamut)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:SkiaSharp.SKMatrix44" />
      </Targets>
      <Member MemberName="ToColorSpaceXyz">
        <MemberSignature Language="C#" Value="public static SkiaSharp.SKColorSpaceXyz ToColorSpaceXyz (this SkiaSharp.SKMatrix44 matrix);" FrameworkAlternate="skiasharp-2.80" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype SkiaSharp.SKColorSpaceXyz ToColorSpaceXyz(class SkiaSharp.SKMatrix44 matrix) cil managed" FrameworkAlternate="skiasharp-2.80" />
        <MemberSignature Language="DocId" Value="M:SkiaSharp.SkiaExtensions.ToColorSpaceXyz(SkiaSharp.SKMatrix44)" FrameworkAlternate="skiasharp-2.80" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType FrameworkAlternate="skiasharp-2.80">SkiaSharp.SKColorSpaceXyz</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="matrix" Type="SkiaSharp.SKMatrix44" RefType="this" Index="0" FrameworkAlternate="skiasharp-2.80;skiasharp-2.88" />
        </Parameters>
        <Docs>
          <param name="matrix">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="SkiaSharp.SkiaExtensions" Member="M:SkiaSharp.SkiaExtensions.ToColorSpaceXyz(SkiaSharp.SKMatrix44)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:SkiaSharp.GRPixelConfig" />
      </Targets>
      <Member MemberName="ToColorType">
        <MemberSignature Language="C#" Value="public static SkiaSharp.SKColorType ToColorType (this SkiaSharp.GRPixelConfig config);" FrameworkAlternate="skiasharp-1.68" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype SkiaSharp.SKColorType ToColorType(valuetype SkiaSharp.GRPixelConfig config) cil managed" FrameworkAlternate="skiasharp-1.68" />
        <MemberSignature Language="DocId" Value="M:SkiaSharp.SkiaExtensions.ToColorType(SkiaSharp.GRPixelConfig)" FrameworkAlternate="skiasharp-1.68" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType FrameworkAlternate="skiasharp-1.68">SkiaSharp.SKColorType</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="config" Type="SkiaSharp.GRPixelConfig" RefType="this" Index="0" FrameworkAlternate="skiasharp-1.68;skiasharp-2.80;skiasharp-2.88" />
        </Parameters>
        <Docs>
          <param name="config">The <see cref="T:SkiaSharp.GRPixelConfig" /> to convert.</param>
          <summary>Converts a <see cref="T:SkiaSharp.GRPixelConfig" /> to an equivalent <see cref="T:SkiaSharp.SKColorType" />, if possible.</summary>
        </Docs>
        <Link Type="SkiaSharp.SkiaExtensions" Member="M:SkiaSharp.SkiaExtensions.ToColorType(SkiaSharp.GRPixelConfig)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:SkiaSharp.SKBitmapResizeMethod" />
      </Targets>
      <Member MemberName="ToFilterQuality">
        <MemberSignature Language="C#" Value="public static SkiaSharp.SKFilterQuality ToFilterQuality (this SkiaSharp.SKBitmapResizeMethod method);" FrameworkAlternate="skiasharp-1.68" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype SkiaSharp.SKFilterQuality ToFilterQuality(valuetype SkiaSharp.SKBitmapResizeMethod method) cil managed" FrameworkAlternate="skiasharp-1.68" />
        <MemberSignature Language="DocId" Value="M:SkiaSharp.SkiaExtensions.ToFilterQuality(SkiaSharp.SKBitmapResizeMethod)" FrameworkAlternate="skiasharp-1.68" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType FrameworkAlternate="skiasharp-1.68">SkiaSharp.SKFilterQuality</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="method" Type="SkiaSharp.SKBitmapResizeMethod" RefType="this" Index="0" FrameworkAlternate="skiasharp-1.68;skiasharp-2.80;skiasharp-2.88" />
        </Parameters>
        <Docs>
          <param name="method">The <see cref="T:SkiaSharp.SKBitmapResizeMethod" /> to convert.</param>
          <summary>Converts a <see cref="T:SkiaSharp.SKBitmapResizeMethod" /> to an equivalent <see cref="T:SkiaSharp.SKFilterQuality" />.</summary>
        </Docs>
        <Link Type="SkiaSharp.SkiaExtensions" Member="M:SkiaSharp.SkiaExtensions.ToFilterQuality(SkiaSharp.SKBitmapResizeMethod)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:SkiaSharp.GRPixelConfig" />
      </Targets>
      <Member MemberName="ToGlSizedFormat">
        <MemberSignature Language="C#" Value="public static uint ToGlSizedFormat (this SkiaSharp.GRPixelConfig config);" FrameworkAlternate="skiasharp-1.68" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int32 ToGlSizedFormat(valuetype SkiaSharp.GRPixelConfig config) cil managed" FrameworkAlternate="skiasharp-1.68" />
        <MemberSignature Language="DocId" Value="M:SkiaSharp.SkiaExtensions.ToGlSizedFormat(SkiaSharp.GRPixelConfig)" FrameworkAlternate="skiasharp-1.68" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType FrameworkAlternate="skiasharp-1.68">System.UInt32</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="config" Type="SkiaSharp.GRPixelConfig" RefType="this" Index="0" FrameworkAlternate="skiasharp-1.68;skiasharp-2.80;skiasharp-2.88" />
        </Parameters>
        <Docs>
          <param name="config">The <see cref="T:SkiaSharp.GRPixelConfig" /> to convert.</param>
          <summary>Converts a <see cref="T:SkiaSharp.GRPixelConfig" /> to the equivalent OpenGL sized format, if possible.</summary>
        </Docs>
        <Link Type="SkiaSharp.SkiaExtensions" Member="M:SkiaSharp.SkiaExtensions.ToGlSizedFormat(SkiaSharp.GRPixelConfig)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:SkiaSharp.SKColorType" />
      </Targets>
      <Member MemberName="ToGlSizedFormat">
        <MemberSignature Language="C#" Value="public static uint ToGlSizedFormat (this SkiaSharp.SKColorType colorType);" FrameworkAlternate="skiasharp-1.68" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int32 ToGlSizedFormat(valuetype SkiaSharp.SKColorType colorType) cil managed" FrameworkAlternate="skiasharp-1.68" />
        <MemberSignature Language="DocId" Value="M:SkiaSharp.SkiaExtensions.ToGlSizedFormat(SkiaSharp.SKColorType)" FrameworkAlternate="skiasharp-1.68" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType FrameworkAlternate="skiasharp-1.68">System.UInt32</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="colorType" Type="SkiaSharp.SKColorType" RefType="this" Index="0" FrameworkAlternate="skiasharp-1.68;skiasharp-2.80;skiasharp-2.88" />
        </Parameters>
        <Docs>
          <param name="colorType">The <see cref="T:SkiaSharp.SKColorType" /> to convert.</param>
          <summary>Converts a <see cref="T:SkiaSharp.SKColorType" /> to the equivalent OpenGL sized format, if possible.</summary>
        </Docs>
        <Link Type="SkiaSharp.SkiaExtensions" Member="M:SkiaSharp.SkiaExtensions.ToGlSizedFormat(SkiaSharp.SKColorType)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:SkiaSharp.SKColorType" />
      </Targets>
      <Member MemberName="ToPixelConfig">
        <MemberSignature Language="C#" Value="public static SkiaSharp.GRPixelConfig ToPixelConfig (this SkiaSharp.SKColorType colorType);" FrameworkAlternate="skiasharp-1.68" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype SkiaSharp.GRPixelConfig ToPixelConfig(valuetype SkiaSharp.SKColorType colorType) cil managed" FrameworkAlternate="skiasharp-1.68" />
        <MemberSignature Language="DocId" Value="M:SkiaSharp.SkiaExtensions.ToPixelConfig(SkiaSharp.SKColorType)" FrameworkAlternate="skiasharp-1.68" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType FrameworkAlternate="skiasharp-1.68">SkiaSharp.GRPixelConfig</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="colorType" Type="SkiaSharp.SKColorType" RefType="this" Index="0" FrameworkAlternate="skiasharp-1.68;skiasharp-2.80;skiasharp-2.88" />
        </Parameters>
        <Docs>
          <param name="colorType">The <see cref="T:SkiaSharp.SKColorType" /> to convert.</param>
          <summary>Converts a <see cref="T:SkiaSharp.SKColorType" /> to an equivalent <see cref="T:SkiaSharp.GRPixelConfig" />, if possible.</summary>
        </Docs>
        <Link Type="SkiaSharp.SkiaExtensions" Member="M:SkiaSharp.SkiaExtensions.ToPixelConfig(SkiaSharp.SKColorType)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:SkiaSharp.SKMatrixConvolutionTileMode" />
      </Targets>
      <Member MemberName="ToShaderTileMode">
        <MemberSignature Language="C#" Value="public static SkiaSharp.SKShaderTileMode ToShaderTileMode (this SkiaSharp.SKMatrixConvolutionTileMode tileMode);" FrameworkAlternate="skiasharp-2.80" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype SkiaSharp.SKShaderTileMode ToShaderTileMode(valuetype SkiaSharp.SKMatrixConvolutionTileMode tileMode) cil managed" FrameworkAlternate="skiasharp-2.80" />
        <MemberSignature Language="DocId" Value="M:SkiaSharp.SkiaExtensions.ToShaderTileMode(SkiaSharp.SKMatrixConvolutionTileMode)" FrameworkAlternate="skiasharp-2.80" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType FrameworkAlternate="skiasharp-2.80">SkiaSharp.SKShaderTileMode</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="tileMode" Type="SkiaSharp.SKMatrixConvolutionTileMode" RefType="this" Index="0" FrameworkAlternate="skiasharp-2.80;skiasharp-2.88" />
        </Parameters>
        <Docs>
          <param name="tileMode">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="SkiaSharp.SkiaExtensions" Member="M:SkiaSharp.SkiaExtensions.ToShaderTileMode(SkiaSharp.SKMatrixConvolutionTileMode)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:SkiaSharp.SKEncoding" />
      </Targets>
      <Member MemberName="ToTextEncoding">
        <MemberSignature Language="C#" Value="public static SkiaSharp.SKTextEncoding ToTextEncoding (this SkiaSharp.SKEncoding encoding);" FrameworkAlternate="skiasharp-1.68" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype SkiaSharp.SKTextEncoding ToTextEncoding(valuetype SkiaSharp.SKEncoding encoding) cil managed" FrameworkAlternate="skiasharp-1.68" />
        <MemberSignature Language="DocId" Value="M:SkiaSharp.SkiaExtensions.ToTextEncoding(SkiaSharp.SKEncoding)" FrameworkAlternate="skiasharp-1.68" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType FrameworkAlternate="skiasharp-1.68">SkiaSharp.SKTextEncoding</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="encoding" Type="SkiaSharp.SKEncoding" RefType="this" Index="0" FrameworkAlternate="skiasharp-1.68;skiasharp-2.80;skiasharp-2.88" />
        </Parameters>
        <Docs>
          <param name="encoding">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="SkiaSharp.SkiaExtensions" Member="M:SkiaSharp.SkiaExtensions.ToTextEncoding(SkiaSharp.SKEncoding)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:SkiaSharp.SKBitmap" />
      </Targets>
      <Member MemberName="ToBitmap">
        <MemberSignature Language="C#" Value="public static Android.Graphics.Bitmap ToBitmap (this SkiaSharp.SKBitmap skiaBitmap);" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Android.Graphics.Bitmap ToBitmap(class SkiaSharp.SKBitmap skiaBitmap) cil managed" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberSignature Language="DocId" Value="M:SkiaSharp.Views.Android.AndroidExtensions.ToBitmap(SkiaSharp.SKBitmap)" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType FrameworkAlternate="skiasharp-views-1.60">Android.Graphics.Bitmap</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="skiaBitmap" Type="SkiaSharp.SKBitmap" Index="0" FrameworkAlternate="skiasharp-views-1.60" RefType="this" />
        </Parameters>
        <Docs>
          <param name="skiaBitmap">The SkiaSharp bitmap.</param>
          <summary>Converts a SkiaSharp bitmap into a Xamarin.Android bitmap.</summary>
        </Docs>
        <Link Type="SkiaSharp.Views.Android.AndroidExtensions" Member="M:SkiaSharp.Views.Android.AndroidExtensions.ToBitmap(SkiaSharp.SKBitmap)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:SkiaSharp.SKImage" />
      </Targets>
      <Member MemberName="ToBitmap">
        <MemberSignature Language="C#" Value="public static Android.Graphics.Bitmap ToBitmap (this SkiaSharp.SKImage skiaImage);" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Android.Graphics.Bitmap ToBitmap(class SkiaSharp.SKImage skiaImage) cil managed" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberSignature Language="DocId" Value="M:SkiaSharp.Views.Android.AndroidExtensions.ToBitmap(SkiaSharp.SKImage)" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType FrameworkAlternate="skiasharp-views-1.60">Android.Graphics.Bitmap</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="skiaImage" Type="SkiaSharp.SKImage" Index="0" FrameworkAlternate="skiasharp-views-1.60" RefType="this" />
        </Parameters>
        <Docs>
          <param name="skiaImage">The SkiaSharp image.</param>
          <summary>Converts a SkiaSharp image into a Xamarin.Android bitmap.</summary>
        </Docs>
        <Link Type="SkiaSharp.Views.Android.AndroidExtensions" Member="M:SkiaSharp.Views.Android.AndroidExtensions.ToBitmap(SkiaSharp.SKImage)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:SkiaSharp.SKPicture" />
      </Targets>
      <Member MemberName="ToBitmap">
        <MemberSignature Language="C#" Value="public static Android.Graphics.Bitmap ToBitmap (this SkiaSharp.SKPicture skiaPicture, SkiaSharp.SKSizeI dimensions);" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Android.Graphics.Bitmap ToBitmap(class SkiaSharp.SKPicture skiaPicture, valuetype SkiaSharp.SKSizeI dimensions) cil managed" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberSignature Language="DocId" Value="M:SkiaSharp.Views.Android.AndroidExtensions.ToBitmap(SkiaSharp.SKPicture,SkiaSharp.SKSizeI)" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType FrameworkAlternate="skiasharp-views-1.60">Android.Graphics.Bitmap</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="skiaPicture" Type="SkiaSharp.SKPicture" Index="0" FrameworkAlternate="skiasharp-views-1.60" RefType="this" />
          <Parameter Name="dimensions" Type="SkiaSharp.SKSizeI" Index="1" FrameworkAlternate="skiasharp-views-1.60" />
        </Parameters>
        <Docs>
          <param name="skiaPicture">The SkiaSharp picture.</param>
          <param name="dimensions">The dimensions of the picture.</param>
          <summary>Converts a SkiaSharp picture into a Xamarin.Android bitmap.</summary>
        </Docs>
        <Link Type="SkiaSharp.Views.Android.AndroidExtensions" Member="M:SkiaSharp.Views.Android.AndroidExtensions.ToBitmap(SkiaSharp.SKPicture,SkiaSharp.SKSizeI)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:SkiaSharp.SKPixmap" />
      </Targets>
      <Member MemberName="ToBitmap">
        <MemberSignature Language="C#" Value="public static Android.Graphics.Bitmap ToBitmap (this SkiaSharp.SKPixmap skiaPixmap);" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Android.Graphics.Bitmap ToBitmap(class SkiaSharp.SKPixmap skiaPixmap) cil managed" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberSignature Language="DocId" Value="M:SkiaSharp.Views.Android.AndroidExtensions.ToBitmap(SkiaSharp.SKPixmap)" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType FrameworkAlternate="skiasharp-views-1.60">Android.Graphics.Bitmap</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="skiaPixmap" Type="SkiaSharp.SKPixmap" Index="0" FrameworkAlternate="skiasharp-views-1.60" RefType="this" />
        </Parameters>
        <Docs>
          <param name="skiaPixmap">The SkiaSharp pixmap.</param>
          <summary>Converts a SkiaSharp pixmap into a Xamarin.Android bitmap.</summary>
        </Docs>
        <Link Type="SkiaSharp.Views.Android.AndroidExtensions" Member="M:SkiaSharp.Views.Android.AndroidExtensions.ToBitmap(SkiaSharp.SKPixmap)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:SkiaSharp.SKColor" />
      </Targets>
      <Member MemberName="ToColor">
        <MemberSignature Language="C#" Value="public static Android.Graphics.Color ToColor (this SkiaSharp.SKColor color);" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype Android.Graphics.Color ToColor(valuetype SkiaSharp.SKColor color) cil managed" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberSignature Language="DocId" Value="M:SkiaSharp.Views.Android.AndroidExtensions.ToColor(SkiaSharp.SKColor)" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType FrameworkAlternate="skiasharp-views-1.60">Android.Graphics.Color</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="color" Type="SkiaSharp.SKColor" Index="0" FrameworkAlternate="skiasharp-views-1.60" RefType="this" />
        </Parameters>
        <Docs>
          <param name="color">The SkiaSharp color.</param>
          <summary>Converts a SkiaSharp color into a Xamarin.Android color.</summary>
        </Docs>
        <Link Type="SkiaSharp.Views.Android.AndroidExtensions" Member="M:SkiaSharp.Views.Android.AndroidExtensions.ToColor(SkiaSharp.SKColor)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:SkiaSharp.SKMatrix" />
      </Targets>
      <Member MemberName="ToMatrix">
        <MemberSignature Language="C#" Value="public static Android.Graphics.Matrix ToMatrix (this SkiaSharp.SKMatrix matrix);" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Android.Graphics.Matrix ToMatrix(valuetype SkiaSharp.SKMatrix matrix) cil managed" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberSignature Language="DocId" Value="M:SkiaSharp.Views.Android.AndroidExtensions.ToMatrix(SkiaSharp.SKMatrix)" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType FrameworkAlternate="skiasharp-views-1.60">Android.Graphics.Matrix</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="matrix" Type="SkiaSharp.SKMatrix" Index="0" FrameworkAlternate="skiasharp-views-1.60" RefType="this" />
        </Parameters>
        <Docs>
          <param name="matrix">The SkiaSharp matrix.</param>
          <summary>Converts a SkiaSharp matrix into a Xamarin.Android matrix.</summary>
        </Docs>
        <Link Type="SkiaSharp.Views.Android.AndroidExtensions" Member="M:SkiaSharp.Views.Android.AndroidExtensions.ToMatrix(SkiaSharp.SKMatrix)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:SkiaSharp.SKPoint" />
      </Targets>
      <Member MemberName="ToPoint">
        <MemberSignature Language="C#" Value="public static Android.Graphics.PointF ToPoint (this SkiaSharp.SKPoint point);" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Android.Graphics.PointF ToPoint(valuetype SkiaSharp.SKPoint point) cil managed" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberSignature Language="DocId" Value="M:SkiaSharp.Views.Android.AndroidExtensions.ToPoint(SkiaSharp.SKPoint)" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType FrameworkAlternate="skiasharp-views-1.60">Android.Graphics.PointF</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="point" Type="SkiaSharp.SKPoint" Index="0" FrameworkAlternate="skiasharp-views-1.60" RefType="this" />
        </Parameters>
        <Docs>
          <param name="point">The SkiaSharp point.</param>
          <summary>Converts a SkiaSharp point into a Xamarin.Android point.</summary>
        </Docs>
        <Link Type="SkiaSharp.Views.Android.AndroidExtensions" Member="M:SkiaSharp.Views.Android.AndroidExtensions.ToPoint(SkiaSharp.SKPoint)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:SkiaSharp.SKPointI" />
      </Targets>
      <Member MemberName="ToPoint">
        <MemberSignature Language="C#" Value="public static Android.Graphics.Point ToPoint (this SkiaSharp.SKPointI point);" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Android.Graphics.Point ToPoint(valuetype SkiaSharp.SKPointI point) cil managed" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberSignature Language="DocId" Value="M:SkiaSharp.Views.Android.AndroidExtensions.ToPoint(SkiaSharp.SKPointI)" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType FrameworkAlternate="skiasharp-views-1.60">Android.Graphics.Point</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="point" Type="SkiaSharp.SKPointI" Index="0" FrameworkAlternate="skiasharp-views-1.60" RefType="this" />
        </Parameters>
        <Docs>
          <param name="point">The SkiaSharp point.</param>
          <summary>Converts a SkiaSharp point into a Xamarin.Android point.</summary>
        </Docs>
        <Link Type="SkiaSharp.Views.Android.AndroidExtensions" Member="M:SkiaSharp.Views.Android.AndroidExtensions.ToPoint(SkiaSharp.SKPointI)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:SkiaSharp.SKRect" />
      </Targets>
      <Member MemberName="ToRect">
        <MemberSignature Language="C#" Value="public static Android.Graphics.RectF ToRect (this SkiaSharp.SKRect rect);" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Android.Graphics.RectF ToRect(valuetype SkiaSharp.SKRect rect) cil managed" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberSignature Language="DocId" Value="M:SkiaSharp.Views.Android.AndroidExtensions.ToRect(SkiaSharp.SKRect)" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType FrameworkAlternate="skiasharp-views-1.60">Android.Graphics.RectF</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="rect" Type="SkiaSharp.SKRect" Index="0" FrameworkAlternate="skiasharp-views-1.60" RefType="this" />
        </Parameters>
        <Docs>
          <param name="rect">The SkiaSharp rectangle.</param>
          <summary>Converts a SkiaSharp rectangle into a Xamarin.Android rectangle.</summary>
        </Docs>
        <Link Type="SkiaSharp.Views.Android.AndroidExtensions" Member="M:SkiaSharp.Views.Android.AndroidExtensions.ToRect(SkiaSharp.SKRect)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:SkiaSharp.SKRectI" />
      </Targets>
      <Member MemberName="ToRect">
        <MemberSignature Language="C#" Value="public static Android.Graphics.Rect ToRect (this SkiaSharp.SKRectI rect);" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Android.Graphics.Rect ToRect(valuetype SkiaSharp.SKRectI rect) cil managed" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberSignature Language="DocId" Value="M:SkiaSharp.Views.Android.AndroidExtensions.ToRect(SkiaSharp.SKRectI)" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType FrameworkAlternate="skiasharp-views-1.60">Android.Graphics.Rect</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="rect" Type="SkiaSharp.SKRectI" Index="0" FrameworkAlternate="skiasharp-views-1.60" RefType="this" />
        </Parameters>
        <Docs>
          <param name="rect">The SkiaSharp rectangle.</param>
          <summary>Converts a SkiaSharp rectangle into a Xamarin.Android rectangle.</summary>
        </Docs>
        <Link Type="SkiaSharp.Views.Android.AndroidExtensions" Member="M:SkiaSharp.Views.Android.AndroidExtensions.ToRect(SkiaSharp.SKRectI)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Android.Graphics.Bitmap" />
      </Targets>
      <Member MemberName="ToSKBitmap">
        <MemberSignature Language="C#" Value="public static SkiaSharp.SKBitmap ToSKBitmap (this Android.Graphics.Bitmap bitmap);" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class SkiaSharp.SKBitmap ToSKBitmap(class Android.Graphics.Bitmap bitmap) cil managed" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberSignature Language="DocId" Value="M:SkiaSharp.Views.Android.AndroidExtensions.ToSKBitmap(Android.Graphics.Bitmap)" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType FrameworkAlternate="skiasharp-views-1.60">SkiaSharp.SKBitmap</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="bitmap" Type="Android.Graphics.Bitmap" Index="0" FrameworkAlternate="skiasharp-views-1.60" RefType="this" />
        </Parameters>
        <Docs>
          <param name="bitmap">The Xamarin.Android bitmap.</param>
          <summary>Converts a Xamarin.Android bitmap into a SkiaSharp bitmap.</summary>
        </Docs>
        <Link Type="SkiaSharp.Views.Android.AndroidExtensions" Member="M:SkiaSharp.Views.Android.AndroidExtensions.ToSKBitmap(Android.Graphics.Bitmap)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Android.Graphics.Color" />
      </Targets>
      <Member MemberName="ToSKColor">
        <MemberSignature Language="C#" Value="public static SkiaSharp.SKColor ToSKColor (this Android.Graphics.Color color);" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype SkiaSharp.SKColor ToSKColor(valuetype Android.Graphics.Color color) cil managed" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberSignature Language="DocId" Value="M:SkiaSharp.Views.Android.AndroidExtensions.ToSKColor(Android.Graphics.Color)" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType FrameworkAlternate="skiasharp-views-1.60">SkiaSharp.SKColor</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="color" Type="Android.Graphics.Color" Index="0" FrameworkAlternate="skiasharp-views-1.60" RefType="this" />
        </Parameters>
        <Docs>
          <param name="color">The Xamarin.Android color.</param>
          <summary>Converts a Xamarin.Android color into a SkiaSharp color.</summary>
        </Docs>
        <Link Type="SkiaSharp.Views.Android.AndroidExtensions" Member="M:SkiaSharp.Views.Android.AndroidExtensions.ToSKColor(Android.Graphics.Color)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Android.Graphics.Bitmap" />
      </Targets>
      <Member MemberName="ToSKImage">
        <MemberSignature Language="C#" Value="public static SkiaSharp.SKImage ToSKImage (this Android.Graphics.Bitmap bitmap);" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class SkiaSharp.SKImage ToSKImage(class Android.Graphics.Bitmap bitmap) cil managed" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberSignature Language="DocId" Value="M:SkiaSharp.Views.Android.AndroidExtensions.ToSKImage(Android.Graphics.Bitmap)" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType FrameworkAlternate="skiasharp-views-1.60">SkiaSharp.SKImage</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="bitmap" Type="Android.Graphics.Bitmap" Index="0" FrameworkAlternate="skiasharp-views-1.60" RefType="this" />
        </Parameters>
        <Docs>
          <param name="bitmap">The Xamarin.Android bitmap.</param>
          <summary>Converts a Xamarin.Android bitmap into a SkiaSharp image.</summary>
        </Docs>
        <Link Type="SkiaSharp.Views.Android.AndroidExtensions" Member="M:SkiaSharp.Views.Android.AndroidExtensions.ToSKImage(Android.Graphics.Bitmap)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Android.Graphics.Matrix" />
      </Targets>
      <Member MemberName="ToSKMatrix">
        <MemberSignature Language="C#" Value="public static SkiaSharp.SKMatrix ToSKMatrix (this Android.Graphics.Matrix matrix);" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype SkiaSharp.SKMatrix ToSKMatrix(class Android.Graphics.Matrix matrix) cil managed" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberSignature Language="DocId" Value="M:SkiaSharp.Views.Android.AndroidExtensions.ToSKMatrix(Android.Graphics.Matrix)" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType FrameworkAlternate="skiasharp-views-1.60">SkiaSharp.SKMatrix</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="matrix" Type="Android.Graphics.Matrix" Index="0" FrameworkAlternate="skiasharp-views-1.60" RefType="this" />
        </Parameters>
        <Docs>
          <param name="matrix">The Xamarin.Android matrix.</param>
          <summary>Converts a Xamarin.Android matrix into a SkiaSharp matrix.</summary>
        </Docs>
        <Link Type="SkiaSharp.Views.Android.AndroidExtensions" Member="M:SkiaSharp.Views.Android.AndroidExtensions.ToSKMatrix(Android.Graphics.Matrix)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Android.Graphics.Bitmap" />
      </Targets>
      <Member MemberName="ToSKPixmap">
        <MemberSignature Language="C#" Value="public static void ToSKPixmap (this Android.Graphics.Bitmap bitmap, SkiaSharp.SKPixmap pixmap);" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ToSKPixmap(class Android.Graphics.Bitmap bitmap, class SkiaSharp.SKPixmap pixmap) cil managed" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberSignature Language="DocId" Value="M:SkiaSharp.Views.Android.AndroidExtensions.ToSKPixmap(Android.Graphics.Bitmap,SkiaSharp.SKPixmap)" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType FrameworkAlternate="skiasharp-views-1.60">System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="bitmap" Type="Android.Graphics.Bitmap" Index="0" FrameworkAlternate="skiasharp-views-1.60" RefType="this" />
          <Parameter Name="pixmap" Type="SkiaSharp.SKPixmap" Index="1" FrameworkAlternate="skiasharp-views-1.60" />
        </Parameters>
        <Docs>
          <param name="bitmap">The Xamarin.Android bitmap.</param>
          <param name="pixmap">The SkiaSharp pixmap to hold the copy of the bitmap data.</param>
          <summary>Converts a Xamarin.Android bitmap into a SkiaSharp pixmap.</summary>
        </Docs>
        <Link Type="SkiaSharp.Views.Android.AndroidExtensions" Member="M:SkiaSharp.Views.Android.AndroidExtensions.ToSKPixmap(Android.Graphics.Bitmap,SkiaSharp.SKPixmap)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Android.Graphics.Point" />
      </Targets>
      <Member MemberName="ToSKPoint">
        <MemberSignature Language="C#" Value="public static SkiaSharp.SKPointI ToSKPoint (this Android.Graphics.Point point);" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype SkiaSharp.SKPointI ToSKPoint(class Android.Graphics.Point point) cil managed" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberSignature Language="DocId" Value="M:SkiaSharp.Views.Android.AndroidExtensions.ToSKPoint(Android.Graphics.Point)" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType FrameworkAlternate="skiasharp-views-1.60">SkiaSharp.SKPointI</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="point" Type="Android.Graphics.Point" Index="0" FrameworkAlternate="skiasharp-views-1.60" RefType="this" />
        </Parameters>
        <Docs>
          <param name="point">The Xamarin.Android point.</param>
          <summary>Converts a Xamarin.Android point into a SkiaSharp point.</summary>
        </Docs>
        <Link Type="SkiaSharp.Views.Android.AndroidExtensions" Member="M:SkiaSharp.Views.Android.AndroidExtensions.ToSKPoint(Android.Graphics.Point)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Android.Graphics.PointF" />
      </Targets>
      <Member MemberName="ToSKPoint">
        <MemberSignature Language="C#" Value="public static SkiaSharp.SKPoint ToSKPoint (this Android.Graphics.PointF point);" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype SkiaSharp.SKPoint ToSKPoint(class Android.Graphics.PointF point) cil managed" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberSignature Language="DocId" Value="M:SkiaSharp.Views.Android.AndroidExtensions.ToSKPoint(Android.Graphics.PointF)" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType FrameworkAlternate="skiasharp-views-1.60">SkiaSharp.SKPoint</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="point" Type="Android.Graphics.PointF" Index="0" FrameworkAlternate="skiasharp-views-1.60" RefType="this" />
        </Parameters>
        <Docs>
          <param name="point">The Xamarin.Android point.</param>
          <summary>Converts a Xamarin.Android point into a SkiaSharp point.</summary>
        </Docs>
        <Link Type="SkiaSharp.Views.Android.AndroidExtensions" Member="M:SkiaSharp.Views.Android.AndroidExtensions.ToSKPoint(Android.Graphics.PointF)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Android.Graphics.Rect" />
      </Targets>
      <Member MemberName="ToSKRect">
        <MemberSignature Language="C#" Value="public static SkiaSharp.SKRectI ToSKRect (this Android.Graphics.Rect rect);" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype SkiaSharp.SKRectI ToSKRect(class Android.Graphics.Rect rect) cil managed" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberSignature Language="DocId" Value="M:SkiaSharp.Views.Android.AndroidExtensions.ToSKRect(Android.Graphics.Rect)" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType FrameworkAlternate="skiasharp-views-1.60">SkiaSharp.SKRectI</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="rect" Type="Android.Graphics.Rect" Index="0" FrameworkAlternate="skiasharp-views-1.60" RefType="this" />
        </Parameters>
        <Docs>
          <param name="rect">The Xamarin.Android rectangle.</param>
          <summary>Converts a Xamarin.Android rectangle into a SkiaSharp rectangle.</summary>
        </Docs>
        <Link Type="SkiaSharp.Views.Android.AndroidExtensions" Member="M:SkiaSharp.Views.Android.AndroidExtensions.ToSKRect(Android.Graphics.Rect)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Android.Graphics.RectF" />
      </Targets>
      <Member MemberName="ToSKRect">
        <MemberSignature Language="C#" Value="public static SkiaSharp.SKRect ToSKRect (this Android.Graphics.RectF rect);" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype SkiaSharp.SKRect ToSKRect(class Android.Graphics.RectF rect) cil managed" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberSignature Language="DocId" Value="M:SkiaSharp.Views.Android.AndroidExtensions.ToSKRect(Android.Graphics.RectF)" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType FrameworkAlternate="skiasharp-views-1.60">SkiaSharp.SKRect</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="rect" Type="Android.Graphics.RectF" Index="0" FrameworkAlternate="skiasharp-views-1.60" RefType="this" />
        </Parameters>
        <Docs>
          <param name="rect">The Xamarin.Android rectangle.</param>
          <summary>Converts a Xamarin.Android rectangle into a SkiaSharp rectangle.</summary>
        </Docs>
        <Link Type="SkiaSharp.Views.Android.AndroidExtensions" Member="M:SkiaSharp.Views.Android.AndroidExtensions.ToSKRect(Android.Graphics.RectF)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:SkiaSharp.SKColor" />
      </Targets>
      <Member MemberName="ToDrawingColor">
        <MemberSignature Language="C#" Value="public static System.Drawing.Color ToDrawingColor (this SkiaSharp.SKColor color);" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Drawing.Color ToDrawingColor(valuetype SkiaSharp.SKColor color) cil managed" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberSignature Language="DocId" Value="M:SkiaSharp.Views.Android.Extensions.ToDrawingColor(SkiaSharp.SKColor)" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType FrameworkAlternate="skiasharp-views-1.60">System.Drawing.Color</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="color" Type="SkiaSharp.SKColor" Index="0" FrameworkAlternate="skiasharp-views-1.60" RefType="this" />
        </Parameters>
        <Docs>
          <param name="color">The SkiaSharp color.</param>
          <summary>Converts a SkiaSharp color into a System.Drawing color.</summary>
        </Docs>
        <Link Type="SkiaSharp.Views.Android.Extensions" Member="M:SkiaSharp.Views.Android.Extensions.ToDrawingColor(SkiaSharp.SKColor)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:SkiaSharp.SKPoint" />
      </Targets>
      <Member MemberName="ToDrawingPoint">
        <MemberSignature Language="C#" Value="public static System.Drawing.PointF ToDrawingPoint (this SkiaSharp.SKPoint point);" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Drawing.PointF ToDrawingPoint(valuetype SkiaSharp.SKPoint point) cil managed" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberSignature Language="DocId" Value="M:SkiaSharp.Views.Android.Extensions.ToDrawingPoint(SkiaSharp.SKPoint)" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType FrameworkAlternate="skiasharp-views-1.60">System.Drawing.PointF</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="point" Type="SkiaSharp.SKPoint" Index="0" FrameworkAlternate="skiasharp-views-1.60" RefType="this" />
        </Parameters>
        <Docs>
          <param name="point">The SkiaSharp point.</param>
          <summary>Converts a SkiaSharp point into a System.Drawing point.</summary>
        </Docs>
        <Link Type="SkiaSharp.Views.Android.Extensions" Member="M:SkiaSharp.Views.Android.Extensions.ToDrawingPoint(SkiaSharp.SKPoint)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:SkiaSharp.SKPointI" />
      </Targets>
      <Member MemberName="ToDrawingPoint">
        <MemberSignature Language="C#" Value="public static System.Drawing.Point ToDrawingPoint (this SkiaSharp.SKPointI point);" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Drawing.Point ToDrawingPoint(valuetype SkiaSharp.SKPointI point) cil managed" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberSignature Language="DocId" Value="M:SkiaSharp.Views.Android.Extensions.ToDrawingPoint(SkiaSharp.SKPointI)" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType FrameworkAlternate="skiasharp-views-1.60">System.Drawing.Point</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="point" Type="SkiaSharp.SKPointI" Index="0" FrameworkAlternate="skiasharp-views-1.60" RefType="this" />
        </Parameters>
        <Docs>
          <param name="point">The SkiaSharp point.</param>
          <summary>Converts a SkiaSharp point into a System.Drawing point.</summary>
        </Docs>
        <Link Type="SkiaSharp.Views.Android.Extensions" Member="M:SkiaSharp.Views.Android.Extensions.ToDrawingPoint(SkiaSharp.SKPointI)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:SkiaSharp.SKRect" />
      </Targets>
      <Member MemberName="ToDrawingRect">
        <MemberSignature Language="C#" Value="public static System.Drawing.RectangleF ToDrawingRect (this SkiaSharp.SKRect rect);" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Drawing.RectangleF ToDrawingRect(valuetype SkiaSharp.SKRect rect) cil managed" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberSignature Language="DocId" Value="M:SkiaSharp.Views.Android.Extensions.ToDrawingRect(SkiaSharp.SKRect)" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType FrameworkAlternate="skiasharp-views-1.60">System.Drawing.RectangleF</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="rect" Type="SkiaSharp.SKRect" Index="0" FrameworkAlternate="skiasharp-views-1.60" RefType="this" />
        </Parameters>
        <Docs>
          <param name="rect">The SkiaSharp rectangle.</param>
          <summary>Converts a SkiaSharp rectangle into a System.Drawing rectangle.</summary>
        </Docs>
        <Link Type="SkiaSharp.Views.Android.Extensions" Member="M:SkiaSharp.Views.Android.Extensions.ToDrawingRect(SkiaSharp.SKRect)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:SkiaSharp.SKRectI" />
      </Targets>
      <Member MemberName="ToDrawingRect">
        <MemberSignature Language="C#" Value="public static System.Drawing.Rectangle ToDrawingRect (this SkiaSharp.SKRectI rect);" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Drawing.Rectangle ToDrawingRect(valuetype SkiaSharp.SKRectI rect) cil managed" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberSignature Language="DocId" Value="M:SkiaSharp.Views.Android.Extensions.ToDrawingRect(SkiaSharp.SKRectI)" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType FrameworkAlternate="skiasharp-views-1.60">System.Drawing.Rectangle</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="rect" Type="SkiaSharp.SKRectI" Index="0" FrameworkAlternate="skiasharp-views-1.60" RefType="this" />
        </Parameters>
        <Docs>
          <param name="rect">The SkiaSharp rectangle.</param>
          <summary>Converts a SkiaSharp rectangle into a System.Drawing rectangle.</summary>
        </Docs>
        <Link Type="SkiaSharp.Views.Android.Extensions" Member="M:SkiaSharp.Views.Android.Extensions.ToDrawingRect(SkiaSharp.SKRectI)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:SkiaSharp.SKSize" />
      </Targets>
      <Member MemberName="ToDrawingSize">
        <MemberSignature Language="C#" Value="public static System.Drawing.SizeF ToDrawingSize (this SkiaSharp.SKSize size);" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Drawing.SizeF ToDrawingSize(valuetype SkiaSharp.SKSize size) cil managed" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberSignature Language="DocId" Value="M:SkiaSharp.Views.Android.Extensions.ToDrawingSize(SkiaSharp.SKSize)" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType FrameworkAlternate="skiasharp-views-1.60">System.Drawing.SizeF</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="size" Type="SkiaSharp.SKSize" Index="0" FrameworkAlternate="skiasharp-views-1.60" RefType="this" />
        </Parameters>
        <Docs>
          <param name="size">The SkiaSharp size.</param>
          <summary>Converts a SkiaSharp size into a System.Drawing size.</summary>
        </Docs>
        <Link Type="SkiaSharp.Views.Android.Extensions" Member="M:SkiaSharp.Views.Android.Extensions.ToDrawingSize(SkiaSharp.SKSize)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:SkiaSharp.SKSizeI" />
      </Targets>
      <Member MemberName="ToDrawingSize">
        <MemberSignature Language="C#" Value="public static System.Drawing.Size ToDrawingSize (this SkiaSharp.SKSizeI size);" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Drawing.Size ToDrawingSize(valuetype SkiaSharp.SKSizeI size) cil managed" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberSignature Language="DocId" Value="M:SkiaSharp.Views.Android.Extensions.ToDrawingSize(SkiaSharp.SKSizeI)" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType FrameworkAlternate="skiasharp-views-1.60">System.Drawing.Size</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="size" Type="SkiaSharp.SKSizeI" Index="0" FrameworkAlternate="skiasharp-views-1.60" RefType="this" />
        </Parameters>
        <Docs>
          <param name="size">The SkiaSharp size.</param>
          <summary>Converts a SkiaSharp size into a System.Drawing size.</summary>
        </Docs>
        <Link Type="SkiaSharp.Views.Android.Extensions" Member="M:SkiaSharp.Views.Android.Extensions.ToDrawingSize(SkiaSharp.SKSizeI)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.Drawing.Color" />
      </Targets>
      <Member MemberName="ToSKColor">
        <MemberSignature Language="C#" Value="public static SkiaSharp.SKColor ToSKColor (this System.Drawing.Color color);" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype SkiaSharp.SKColor ToSKColor(valuetype System.Drawing.Color color) cil managed" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberSignature Language="DocId" Value="M:SkiaSharp.Views.Android.Extensions.ToSKColor(System.Drawing.Color)" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType FrameworkAlternate="skiasharp-views-1.60">SkiaSharp.SKColor</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="color" Type="System.Drawing.Color" Index="0" FrameworkAlternate="skiasharp-views-1.60" RefType="this" />
        </Parameters>
        <Docs>
          <param name="color">The System.Drawing color.</param>
          <summary>Converts a System.Drawing color into a SkiaSharp color.</summary>
        </Docs>
        <Link Type="SkiaSharp.Views.Android.Extensions" Member="M:SkiaSharp.Views.Android.Extensions.ToSKColor(System.Drawing.Color)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.Drawing.Point" />
      </Targets>
      <Member MemberName="ToSKPoint">
        <MemberSignature Language="C#" Value="public static SkiaSharp.SKPointI ToSKPoint (this System.Drawing.Point point);" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype SkiaSharp.SKPointI ToSKPoint(valuetype System.Drawing.Point point) cil managed" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberSignature Language="DocId" Value="M:SkiaSharp.Views.Android.Extensions.ToSKPoint(System.Drawing.Point)" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType FrameworkAlternate="skiasharp-views-1.60">SkiaSharp.SKPointI</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="point" Type="System.Drawing.Point" Index="0" FrameworkAlternate="skiasharp-views-1.60" RefType="this" />
        </Parameters>
        <Docs>
          <param name="point">The System.Drawing point.</param>
          <summary>Converts a System.Drawing point into a SkiaSharp point.</summary>
        </Docs>
        <Link Type="SkiaSharp.Views.Android.Extensions" Member="M:SkiaSharp.Views.Android.Extensions.ToSKPoint(System.Drawing.Point)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.Drawing.PointF" />
      </Targets>
      <Member MemberName="ToSKPoint">
        <MemberSignature Language="C#" Value="public static SkiaSharp.SKPoint ToSKPoint (this System.Drawing.PointF point);" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype SkiaSharp.SKPoint ToSKPoint(valuetype System.Drawing.PointF point) cil managed" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberSignature Language="DocId" Value="M:SkiaSharp.Views.Android.Extensions.ToSKPoint(System.Drawing.PointF)" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType FrameworkAlternate="skiasharp-views-1.60">SkiaSharp.SKPoint</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="point" Type="System.Drawing.PointF" Index="0" FrameworkAlternate="skiasharp-views-1.60" RefType="this" />
        </Parameters>
        <Docs>
          <param name="point">The System.Drawing point.</param>
          <summary>Converts a System.Drawing point into a SkiaSharp point.</summary>
        </Docs>
        <Link Type="SkiaSharp.Views.Android.Extensions" Member="M:SkiaSharp.Views.Android.Extensions.ToSKPoint(System.Drawing.PointF)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.Drawing.Rectangle" />
      </Targets>
      <Member MemberName="ToSKRect">
        <MemberSignature Language="C#" Value="public static SkiaSharp.SKRectI ToSKRect (this System.Drawing.Rectangle rect);" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype SkiaSharp.SKRectI ToSKRect(valuetype System.Drawing.Rectangle rect) cil managed" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberSignature Language="DocId" Value="M:SkiaSharp.Views.Android.Extensions.ToSKRect(System.Drawing.Rectangle)" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType FrameworkAlternate="skiasharp-views-1.60">SkiaSharp.SKRectI</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="rect" Type="System.Drawing.Rectangle" Index="0" FrameworkAlternate="skiasharp-views-1.60" RefType="this" />
        </Parameters>
        <Docs>
          <param name="rect">The System.Drawing rectangle.</param>
          <summary>Converts a System.Drawing rectangle into a SkiaSharp rectangle.</summary>
        </Docs>
        <Link Type="SkiaSharp.Views.Android.Extensions" Member="M:SkiaSharp.Views.Android.Extensions.ToSKRect(System.Drawing.Rectangle)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.Drawing.RectangleF" />
      </Targets>
      <Member MemberName="ToSKRect">
        <MemberSignature Language="C#" Value="public static SkiaSharp.SKRect ToSKRect (this System.Drawing.RectangleF rect);" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype SkiaSharp.SKRect ToSKRect(valuetype System.Drawing.RectangleF rect) cil managed" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberSignature Language="DocId" Value="M:SkiaSharp.Views.Android.Extensions.ToSKRect(System.Drawing.RectangleF)" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType FrameworkAlternate="skiasharp-views-1.60">SkiaSharp.SKRect</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="rect" Type="System.Drawing.RectangleF" Index="0" FrameworkAlternate="skiasharp-views-1.60" RefType="this" />
        </Parameters>
        <Docs>
          <param name="rect">The System.Drawing rectangle.</param>
          <summary>Converts a System.Drawing rectangle into a SkiaSharp rectangle.</summary>
        </Docs>
        <Link Type="SkiaSharp.Views.Android.Extensions" Member="M:SkiaSharp.Views.Android.Extensions.ToSKRect(System.Drawing.RectangleF)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.Drawing.Size" />
      </Targets>
      <Member MemberName="ToSKSize">
        <MemberSignature Language="C#" Value="public static SkiaSharp.SKSizeI ToSKSize (this System.Drawing.Size size);" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype SkiaSharp.SKSizeI ToSKSize(valuetype System.Drawing.Size size) cil managed" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberSignature Language="DocId" Value="M:SkiaSharp.Views.Android.Extensions.ToSKSize(System.Drawing.Size)" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType FrameworkAlternate="skiasharp-views-1.60">SkiaSharp.SKSizeI</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="size" Type="System.Drawing.Size" Index="0" FrameworkAlternate="skiasharp-views-1.60" RefType="this" />
        </Parameters>
        <Docs>
          <param name="size">The System.Drawing size.</param>
          <summary>Converts a System.Drawing size into a SkiaSharp size.</summary>
        </Docs>
        <Link Type="SkiaSharp.Views.Android.Extensions" Member="M:SkiaSharp.Views.Android.Extensions.ToSKSize(System.Drawing.Size)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.Drawing.SizeF" />
      </Targets>
      <Member MemberName="ToSKSize">
        <MemberSignature Language="C#" Value="public static SkiaSharp.SKSize ToSKSize (this System.Drawing.SizeF size);" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype SkiaSharp.SKSize ToSKSize(valuetype System.Drawing.SizeF size) cil managed" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberSignature Language="DocId" Value="M:SkiaSharp.Views.Android.Extensions.ToSKSize(System.Drawing.SizeF)" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType FrameworkAlternate="skiasharp-views-1.60">SkiaSharp.SKSize</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="size" Type="System.Drawing.SizeF" Index="0" FrameworkAlternate="skiasharp-views-1.60" RefType="this" />
        </Parameters>
        <Docs>
          <param name="size">The System.Drawing size.</param>
          <summary>Converts a System.Drawing size into a SkiaSharp size.</summary>
        </Docs>
        <Link Type="SkiaSharp.Views.Android.Extensions" Member="M:SkiaSharp.Views.Android.Extensions.ToSKSize(System.Drawing.SizeF)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:SkiaSharp.SKBitmap" />
      </Targets>
      <Member MemberName="ToBitmap">
        <MemberSignature Language="C#" Value="public static System.Drawing.Bitmap ToBitmap (this SkiaSharp.SKBitmap skiaBitmap);" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Drawing.Bitmap ToBitmap(class SkiaSharp.SKBitmap skiaBitmap) cil managed" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberSignature Language="DocId" Value="M:SkiaSharp.Views.Desktop.Extensions.ToBitmap(SkiaSharp.SKBitmap)" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType FrameworkAlternate="skiasharp-views-1.60">System.Drawing.Bitmap</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="skiaBitmap" Type="SkiaSharp.SKBitmap" Index="0" FrameworkAlternate="skiasharp-views-1.60" RefType="this" />
        </Parameters>
        <Docs>
          <param name="skiaBitmap">The SkiaSharp bitmap.</param>
          <summary>Converts a SkiaSharp bitmap into a System.Drawing bitmap.</summary>
        </Docs>
        <Link Type="SkiaSharp.Views.Desktop.Extensions" Member="M:SkiaSharp.Views.Desktop.Extensions.ToBitmap(SkiaSharp.SKBitmap)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:SkiaSharp.SKImage" />
      </Targets>
      <Member MemberName="ToBitmap">
        <MemberSignature Language="C#" Value="public static System.Drawing.Bitmap ToBitmap (this SkiaSharp.SKImage skiaImage);" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Drawing.Bitmap ToBitmap(class SkiaSharp.SKImage skiaImage) cil managed" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberSignature Language="DocId" Value="M:SkiaSharp.Views.Desktop.Extensions.ToBitmap(SkiaSharp.SKImage)" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType FrameworkAlternate="skiasharp-views-1.60">System.Drawing.Bitmap</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="skiaImage" Type="SkiaSharp.SKImage" Index="0" FrameworkAlternate="skiasharp-views-1.60" RefType="this" />
        </Parameters>
        <Docs>
          <param name="skiaImage">The SkiaSharp image.</param>
          <summary>Converts a SkiaSharp image into a System.Drawing bitmap.</summary>
        </Docs>
        <Link Type="SkiaSharp.Views.Desktop.Extensions" Member="M:SkiaSharp.Views.Desktop.Extensions.ToBitmap(SkiaSharp.SKImage)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:SkiaSharp.SKPicture" />
      </Targets>
      <Member MemberName="ToBitmap">
        <MemberSignature Language="C#" Value="public static System.Drawing.Bitmap ToBitmap (this SkiaSharp.SKPicture picture, SkiaSharp.SKSizeI dimensions);" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Drawing.Bitmap ToBitmap(class SkiaSharp.SKPicture picture, valuetype SkiaSharp.SKSizeI dimensions) cil managed" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberSignature Language="DocId" Value="M:SkiaSharp.Views.Desktop.Extensions.ToBitmap(SkiaSharp.SKPicture,SkiaSharp.SKSizeI)" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType FrameworkAlternate="skiasharp-views-1.60">System.Drawing.Bitmap</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="picture" Type="SkiaSharp.SKPicture" Index="0" FrameworkAlternate="skiasharp-views-1.60" RefType="this" />
          <Parameter Name="dimensions" Type="SkiaSharp.SKSizeI" Index="1" FrameworkAlternate="skiasharp-views-1.60" />
        </Parameters>
        <Docs>
          <param name="picture">The SkiaSharp picture.</param>
          <param name="dimensions">The dimensions of the picture.</param>
          <summary>Converts a SkiaSharp picture into a System.Drawing bitmap.</summary>
        </Docs>
        <Link Type="SkiaSharp.Views.Desktop.Extensions" Member="M:SkiaSharp.Views.Desktop.Extensions.ToBitmap(SkiaSharp.SKPicture,SkiaSharp.SKSizeI)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:SkiaSharp.SKPixmap" />
      </Targets>
      <Member MemberName="ToBitmap">
        <MemberSignature Language="C#" Value="public static System.Drawing.Bitmap ToBitmap (this SkiaSharp.SKPixmap pixmap);" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Drawing.Bitmap ToBitmap(class SkiaSharp.SKPixmap pixmap) cil managed" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberSignature Language="DocId" Value="M:SkiaSharp.Views.Desktop.Extensions.ToBitmap(SkiaSharp.SKPixmap)" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType FrameworkAlternate="skiasharp-views-1.60">System.Drawing.Bitmap</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="pixmap" Type="SkiaSharp.SKPixmap" Index="0" FrameworkAlternate="skiasharp-views-1.60" RefType="this" />
        </Parameters>
        <Docs>
          <param name="pixmap">The SkiaSharp pixmap.</param>
          <summary>Converts a SkiaSharp pixmap into a System.Drawing bitmap.</summary>
        </Docs>
        <Link Type="SkiaSharp.Views.Desktop.Extensions" Member="M:SkiaSharp.Views.Desktop.Extensions.ToBitmap(SkiaSharp.SKPixmap)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:SkiaSharp.SKColor" />
      </Targets>
      <Member MemberName="ToDrawingColor">
        <MemberSignature Language="C#" Value="public static System.Drawing.Color ToDrawingColor (this SkiaSharp.SKColor color);" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Drawing.Color ToDrawingColor(valuetype SkiaSharp.SKColor color) cil managed" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberSignature Language="DocId" Value="M:SkiaSharp.Views.Desktop.Extensions.ToDrawingColor(SkiaSharp.SKColor)" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType FrameworkAlternate="skiasharp-views-1.60">System.Drawing.Color</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="color" Type="SkiaSharp.SKColor" Index="0" FrameworkAlternate="skiasharp-views-1.60" RefType="this" />
        </Parameters>
        <Docs>
          <param name="color">The SkiaSharp color.</param>
          <summary>Converts a SkiaSharp color into a System.Drawing color.</summary>
        </Docs>
        <Link Type="SkiaSharp.Views.Desktop.Extensions" Member="M:SkiaSharp.Views.Desktop.Extensions.ToDrawingColor(SkiaSharp.SKColor)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:SkiaSharp.SKPoint" />
      </Targets>
      <Member MemberName="ToDrawingPoint">
        <MemberSignature Language="C#" Value="public static System.Drawing.PointF ToDrawingPoint (this SkiaSharp.SKPoint point);" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Drawing.PointF ToDrawingPoint(valuetype SkiaSharp.SKPoint point) cil managed" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberSignature Language="DocId" Value="M:SkiaSharp.Views.Desktop.Extensions.ToDrawingPoint(SkiaSharp.SKPoint)" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType FrameworkAlternate="skiasharp-views-1.60">System.Drawing.PointF</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="point" Type="SkiaSharp.SKPoint" Index="0" FrameworkAlternate="skiasharp-views-1.60" RefType="this" />
        </Parameters>
        <Docs>
          <param name="point">The SkiaSharp point.</param>
          <summary>Converts a SkiaSharp point into a System.Drawing point.</summary>
        </Docs>
        <Link Type="SkiaSharp.Views.Desktop.Extensions" Member="M:SkiaSharp.Views.Desktop.Extensions.ToDrawingPoint(SkiaSharp.SKPoint)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:SkiaSharp.SKPointI" />
      </Targets>
      <Member MemberName="ToDrawingPoint">
        <MemberSignature Language="C#" Value="public static System.Drawing.Point ToDrawingPoint (this SkiaSharp.SKPointI point);" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Drawing.Point ToDrawingPoint(valuetype SkiaSharp.SKPointI point) cil managed" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberSignature Language="DocId" Value="M:SkiaSharp.Views.Desktop.Extensions.ToDrawingPoint(SkiaSharp.SKPointI)" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType FrameworkAlternate="skiasharp-views-1.60">System.Drawing.Point</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="point" Type="SkiaSharp.SKPointI" Index="0" FrameworkAlternate="skiasharp-views-1.60" RefType="this" />
        </Parameters>
        <Docs>
          <param name="point">The SkiaSharp point.</param>
          <summary>Converts a SkiaSharp point into a System.Drawing point.</summary>
        </Docs>
        <Link Type="SkiaSharp.Views.Desktop.Extensions" Member="M:SkiaSharp.Views.Desktop.Extensions.ToDrawingPoint(SkiaSharp.SKPointI)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:SkiaSharp.SKRect" />
      </Targets>
      <Member MemberName="ToDrawingRect">
        <MemberSignature Language="C#" Value="public static System.Drawing.RectangleF ToDrawingRect (this SkiaSharp.SKRect rect);" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Drawing.RectangleF ToDrawingRect(valuetype SkiaSharp.SKRect rect) cil managed" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberSignature Language="DocId" Value="M:SkiaSharp.Views.Desktop.Extensions.ToDrawingRect(SkiaSharp.SKRect)" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType FrameworkAlternate="skiasharp-views-1.60">System.Drawing.RectangleF</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="rect" Type="SkiaSharp.SKRect" Index="0" FrameworkAlternate="skiasharp-views-1.60" RefType="this" />
        </Parameters>
        <Docs>
          <param name="rect">The SkiaSharp rectangle.</param>
          <summary>Converts a SkiaSharp rectangle into a System.Drawing rectangle.</summary>
        </Docs>
        <Link Type="SkiaSharp.Views.Desktop.Extensions" Member="M:SkiaSharp.Views.Desktop.Extensions.ToDrawingRect(SkiaSharp.SKRect)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:SkiaSharp.SKRectI" />
      </Targets>
      <Member MemberName="ToDrawingRect">
        <MemberSignature Language="C#" Value="public static System.Drawing.Rectangle ToDrawingRect (this SkiaSharp.SKRectI rect);" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Drawing.Rectangle ToDrawingRect(valuetype SkiaSharp.SKRectI rect) cil managed" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberSignature Language="DocId" Value="M:SkiaSharp.Views.Desktop.Extensions.ToDrawingRect(SkiaSharp.SKRectI)" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType FrameworkAlternate="skiasharp-views-1.60">System.Drawing.Rectangle</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="rect" Type="SkiaSharp.SKRectI" Index="0" FrameworkAlternate="skiasharp-views-1.60" RefType="this" />
        </Parameters>
        <Docs>
          <param name="rect">The SkiaSharp rectangle.</param>
          <summary>Converts a SkiaSharp rectangle into a System.Drawing rectangle.</summary>
        </Docs>
        <Link Type="SkiaSharp.Views.Desktop.Extensions" Member="M:SkiaSharp.Views.Desktop.Extensions.ToDrawingRect(SkiaSharp.SKRectI)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:SkiaSharp.SKSize" />
      </Targets>
      <Member MemberName="ToDrawingSize">
        <MemberSignature Language="C#" Value="public static System.Drawing.SizeF ToDrawingSize (this SkiaSharp.SKSize size);" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Drawing.SizeF ToDrawingSize(valuetype SkiaSharp.SKSize size) cil managed" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberSignature Language="DocId" Value="M:SkiaSharp.Views.Desktop.Extensions.ToDrawingSize(SkiaSharp.SKSize)" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType FrameworkAlternate="skiasharp-views-1.60">System.Drawing.SizeF</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="size" Type="SkiaSharp.SKSize" Index="0" FrameworkAlternate="skiasharp-views-1.60" RefType="this" />
        </Parameters>
        <Docs>
          <param name="size">The SkiaSharp size.</param>
          <summary>Converts a SkiaSharp size into a System.Drawing size.</summary>
        </Docs>
        <Link Type="SkiaSharp.Views.Desktop.Extensions" Member="M:SkiaSharp.Views.Desktop.Extensions.ToDrawingSize(SkiaSharp.SKSize)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:SkiaSharp.SKSizeI" />
      </Targets>
      <Member MemberName="ToDrawingSize">
        <MemberSignature Language="C#" Value="public static System.Drawing.Size ToDrawingSize (this SkiaSharp.SKSizeI size);" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Drawing.Size ToDrawingSize(valuetype SkiaSharp.SKSizeI size) cil managed" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberSignature Language="DocId" Value="M:SkiaSharp.Views.Desktop.Extensions.ToDrawingSize(SkiaSharp.SKSizeI)" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType FrameworkAlternate="skiasharp-views-1.60">System.Drawing.Size</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="size" Type="SkiaSharp.SKSizeI" Index="0" FrameworkAlternate="skiasharp-views-1.60" RefType="this" />
        </Parameters>
        <Docs>
          <param name="size">The SkiaSharp size.</param>
          <summary>Converts a SkiaSharp size into a System.Drawing size.</summary>
        </Docs>
        <Link Type="SkiaSharp.Views.Desktop.Extensions" Member="M:SkiaSharp.Views.Desktop.Extensions.ToDrawingSize(SkiaSharp.SKSizeI)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.Drawing.Bitmap" />
      </Targets>
      <Member MemberName="ToSKBitmap">
        <MemberSignature Language="C#" Value="public static SkiaSharp.SKBitmap ToSKBitmap (this System.Drawing.Bitmap bitmap);" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class SkiaSharp.SKBitmap ToSKBitmap(class System.Drawing.Bitmap bitmap) cil managed" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberSignature Language="DocId" Value="M:SkiaSharp.Views.Desktop.Extensions.ToSKBitmap(System.Drawing.Bitmap)" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType FrameworkAlternate="skiasharp-views-1.60">SkiaSharp.SKBitmap</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="bitmap" Type="System.Drawing.Bitmap" Index="0" FrameworkAlternate="skiasharp-views-1.60" RefType="this" />
        </Parameters>
        <Docs>
          <param name="bitmap">The System.Drawing bitmap.</param>
          <summary>Converts a System.Drawing bitmap into a SkiaSharp bitmap.</summary>
        </Docs>
        <Link Type="SkiaSharp.Views.Desktop.Extensions" Member="M:SkiaSharp.Views.Desktop.Extensions.ToSKBitmap(System.Drawing.Bitmap)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.Drawing.Color" />
      </Targets>
      <Member MemberName="ToSKColor">
        <MemberSignature Language="C#" Value="public static SkiaSharp.SKColor ToSKColor (this System.Drawing.Color color);" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype SkiaSharp.SKColor ToSKColor(valuetype System.Drawing.Color color) cil managed" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberSignature Language="DocId" Value="M:SkiaSharp.Views.Desktop.Extensions.ToSKColor(System.Drawing.Color)" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType FrameworkAlternate="skiasharp-views-1.60">SkiaSharp.SKColor</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="color" Type="System.Drawing.Color" Index="0" FrameworkAlternate="skiasharp-views-1.60" RefType="this" />
        </Parameters>
        <Docs>
          <param name="color">The System.Drawing color.</param>
          <summary>Converts a System.Drawing color into a SkiaSharp color.</summary>
        </Docs>
        <Link Type="SkiaSharp.Views.Desktop.Extensions" Member="M:SkiaSharp.Views.Desktop.Extensions.ToSKColor(System.Drawing.Color)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.Drawing.Bitmap" />
      </Targets>
      <Member MemberName="ToSKImage">
        <MemberSignature Language="C#" Value="public static SkiaSharp.SKImage ToSKImage (this System.Drawing.Bitmap bitmap);" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class SkiaSharp.SKImage ToSKImage(class System.Drawing.Bitmap bitmap) cil managed" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberSignature Language="DocId" Value="M:SkiaSharp.Views.Desktop.Extensions.ToSKImage(System.Drawing.Bitmap)" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType FrameworkAlternate="skiasharp-views-1.60">SkiaSharp.SKImage</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="bitmap" Type="System.Drawing.Bitmap" Index="0" FrameworkAlternate="skiasharp-views-1.60" RefType="this" />
        </Parameters>
        <Docs>
          <param name="bitmap">The System.Drawing bitmap.</param>
          <summary>Converts a System.Drawing bitmap into a SkiaSharp image.</summary>
        </Docs>
        <Link Type="SkiaSharp.Views.Desktop.Extensions" Member="M:SkiaSharp.Views.Desktop.Extensions.ToSKImage(System.Drawing.Bitmap)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.Drawing.Bitmap" />
      </Targets>
      <Member MemberName="ToSKPixmap">
        <MemberSignature Language="C#" Value="public static void ToSKPixmap (this System.Drawing.Bitmap bitmap, SkiaSharp.SKPixmap pixmap);" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ToSKPixmap(class System.Drawing.Bitmap bitmap, class SkiaSharp.SKPixmap pixmap) cil managed" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberSignature Language="DocId" Value="M:SkiaSharp.Views.Desktop.Extensions.ToSKPixmap(System.Drawing.Bitmap,SkiaSharp.SKPixmap)" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType FrameworkAlternate="skiasharp-views-1.60">System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="bitmap" Type="System.Drawing.Bitmap" Index="0" FrameworkAlternate="skiasharp-views-1.60" RefType="this" />
          <Parameter Name="pixmap" Type="SkiaSharp.SKPixmap" Index="1" FrameworkAlternate="skiasharp-views-1.60" />
        </Parameters>
        <Docs>
          <param name="bitmap">The System.Drawing bitmap.</param>
          <param name="pixmap">The SkiaSharp pixmap to hold the copy of the bitmap data.</param>
          <summary>Converts a System.Drawing bitmap into a SkiaSharp pixmap.</summary>
        </Docs>
        <Link Type="SkiaSharp.Views.Desktop.Extensions" Member="M:SkiaSharp.Views.Desktop.Extensions.ToSKPixmap(System.Drawing.Bitmap,SkiaSharp.SKPixmap)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.Drawing.Point" />
      </Targets>
      <Member MemberName="ToSKPoint">
        <MemberSignature Language="C#" Value="public static SkiaSharp.SKPointI ToSKPoint (this System.Drawing.Point point);" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype SkiaSharp.SKPointI ToSKPoint(valuetype System.Drawing.Point point) cil managed" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberSignature Language="DocId" Value="M:SkiaSharp.Views.Desktop.Extensions.ToSKPoint(System.Drawing.Point)" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType FrameworkAlternate="skiasharp-views-1.60">SkiaSharp.SKPointI</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="point" Type="System.Drawing.Point" Index="0" FrameworkAlternate="skiasharp-views-1.60" RefType="this" />
        </Parameters>
        <Docs>
          <param name="point">The System.Drawing point.</param>
          <summary>Converts a System.Drawing point into a SkiaSharp point.</summary>
        </Docs>
        <Link Type="SkiaSharp.Views.Desktop.Extensions" Member="M:SkiaSharp.Views.Desktop.Extensions.ToSKPoint(System.Drawing.Point)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.Drawing.PointF" />
      </Targets>
      <Member MemberName="ToSKPoint">
        <MemberSignature Language="C#" Value="public static SkiaSharp.SKPoint ToSKPoint (this System.Drawing.PointF point);" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype SkiaSharp.SKPoint ToSKPoint(valuetype System.Drawing.PointF point) cil managed" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberSignature Language="DocId" Value="M:SkiaSharp.Views.Desktop.Extensions.ToSKPoint(System.Drawing.PointF)" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType FrameworkAlternate="skiasharp-views-1.60">SkiaSharp.SKPoint</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="point" Type="System.Drawing.PointF" Index="0" FrameworkAlternate="skiasharp-views-1.60" RefType="this" />
        </Parameters>
        <Docs>
          <param name="point">The System.Drawing point.</param>
          <summary>Converts a System.Drawing point into a SkiaSharp point.</summary>
        </Docs>
        <Link Type="SkiaSharp.Views.Desktop.Extensions" Member="M:SkiaSharp.Views.Desktop.Extensions.ToSKPoint(System.Drawing.PointF)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.Drawing.Rectangle" />
      </Targets>
      <Member MemberName="ToSKRect">
        <MemberSignature Language="C#" Value="public static SkiaSharp.SKRectI ToSKRect (this System.Drawing.Rectangle rect);" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype SkiaSharp.SKRectI ToSKRect(valuetype System.Drawing.Rectangle rect) cil managed" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberSignature Language="DocId" Value="M:SkiaSharp.Views.Desktop.Extensions.ToSKRect(System.Drawing.Rectangle)" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType FrameworkAlternate="skiasharp-views-1.60">SkiaSharp.SKRectI</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="rect" Type="System.Drawing.Rectangle" Index="0" FrameworkAlternate="skiasharp-views-1.60" RefType="this" />
        </Parameters>
        <Docs>
          <param name="rect">The System.Drawing rectangle.</param>
          <summary>Converts a System.Drawing rectangle into a SkiaSharp rectangle.</summary>
        </Docs>
        <Link Type="SkiaSharp.Views.Desktop.Extensions" Member="M:SkiaSharp.Views.Desktop.Extensions.ToSKRect(System.Drawing.Rectangle)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.Drawing.RectangleF" />
      </Targets>
      <Member MemberName="ToSKRect">
        <MemberSignature Language="C#" Value="public static SkiaSharp.SKRect ToSKRect (this System.Drawing.RectangleF rect);" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype SkiaSharp.SKRect ToSKRect(valuetype System.Drawing.RectangleF rect) cil managed" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberSignature Language="DocId" Value="M:SkiaSharp.Views.Desktop.Extensions.ToSKRect(System.Drawing.RectangleF)" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType FrameworkAlternate="skiasharp-views-1.60">SkiaSharp.SKRect</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="rect" Type="System.Drawing.RectangleF" Index="0" FrameworkAlternate="skiasharp-views-1.60" RefType="this" />
        </Parameters>
        <Docs>
          <param name="rect">The System.Drawing rectangle.</param>
          <summary>Converts a System.Drawing rectangle into a SkiaSharp rectangle.</summary>
        </Docs>
        <Link Type="SkiaSharp.Views.Desktop.Extensions" Member="M:SkiaSharp.Views.Desktop.Extensions.ToSKRect(System.Drawing.RectangleF)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.Drawing.Size" />
      </Targets>
      <Member MemberName="ToSKSize">
        <MemberSignature Language="C#" Value="public static SkiaSharp.SKSizeI ToSKSize (this System.Drawing.Size size);" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype SkiaSharp.SKSizeI ToSKSize(valuetype System.Drawing.Size size) cil managed" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberSignature Language="DocId" Value="M:SkiaSharp.Views.Desktop.Extensions.ToSKSize(System.Drawing.Size)" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType FrameworkAlternate="skiasharp-views-1.60">SkiaSharp.SKSizeI</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="size" Type="System.Drawing.Size" Index="0" FrameworkAlternate="skiasharp-views-1.60" RefType="this" />
        </Parameters>
        <Docs>
          <param name="size">The System.Drawing size.</param>
          <summary>Converts a System.Drawing size into a SkiaSharp size.</summary>
        </Docs>
        <Link Type="SkiaSharp.Views.Desktop.Extensions" Member="M:SkiaSharp.Views.Desktop.Extensions.ToSKSize(System.Drawing.Size)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.Drawing.SizeF" />
      </Targets>
      <Member MemberName="ToSKSize">
        <MemberSignature Language="C#" Value="public static SkiaSharp.SKSize ToSKSize (this System.Drawing.SizeF size);" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype SkiaSharp.SKSize ToSKSize(valuetype System.Drawing.SizeF size) cil managed" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberSignature Language="DocId" Value="M:SkiaSharp.Views.Desktop.Extensions.ToSKSize(System.Drawing.SizeF)" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType FrameworkAlternate="skiasharp-views-1.60">SkiaSharp.SKSize</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="size" Type="System.Drawing.SizeF" Index="0" FrameworkAlternate="skiasharp-views-1.60" RefType="this" />
        </Parameters>
        <Docs>
          <param name="size">The System.Drawing size.</param>
          <summary>Converts a System.Drawing size into a SkiaSharp size.</summary>
        </Docs>
        <Link Type="SkiaSharp.Views.Desktop.Extensions" Member="M:SkiaSharp.Views.Desktop.Extensions.ToSKSize(System.Drawing.SizeF)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:SkiaSharp.SKColor" />
      </Targets>
      <Member MemberName="ToFormsColor">
        <MemberSignature Language="C#" Value="public static Xamarin.Forms.Color ToFormsColor (this SkiaSharp.SKColor color);" FrameworkAlternate="skiasharp-views-forms-1.60" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype Xamarin.Forms.Color ToFormsColor(valuetype SkiaSharp.SKColor color) cil managed" FrameworkAlternate="skiasharp-views-forms-1.60" />
        <MemberSignature Language="DocId" Value="M:SkiaSharp.Views.Forms.Extensions.ToFormsColor(SkiaSharp.SKColor)" FrameworkAlternate="skiasharp-views-forms-1.60" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType FrameworkAlternate="skiasharp-views-forms-1.60">Xamarin.Forms.Color</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="color" Type="SkiaSharp.SKColor" Index="0" FrameworkAlternate="skiasharp-views-forms-1.60" RefType="this" />
        </Parameters>
        <Docs>
          <param name="color">The SkiaSharp color.</param>
          <summary>Converts a SkiaSharp color into a Xamarin.Forms color.</summary>
        </Docs>
        <Link Type="SkiaSharp.Views.Forms.Extensions" Member="M:SkiaSharp.Views.Forms.Extensions.ToFormsColor(SkiaSharp.SKColor)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:SkiaSharp.SKColorF" />
      </Targets>
      <Member MemberName="ToFormsColor">
        <MemberSignature Language="C#" Value="public static Xamarin.Forms.Color ToFormsColor (this SkiaSharp.SKColorF color);" FrameworkAlternate="skiasharp-views-forms-2.80" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype Xamarin.Forms.Color ToFormsColor(valuetype SkiaSharp.SKColorF color) cil managed" FrameworkAlternate="skiasharp-views-forms-2.80" />
        <MemberSignature Language="DocId" Value="M:SkiaSharp.Views.Forms.Extensions.ToFormsColor(SkiaSharp.SKColorF)" FrameworkAlternate="skiasharp-views-forms-2.80" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType FrameworkAlternate="skiasharp-views-forms-2.80">Xamarin.Forms.Color</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="color" Type="SkiaSharp.SKColorF" RefType="this" Index="0" FrameworkAlternate="skiasharp-views-forms-2.80;skiasharp-views-forms-2.88" />
        </Parameters>
        <Docs>
          <param name="color">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="SkiaSharp.Views.Forms.Extensions" Member="M:SkiaSharp.Views.Forms.Extensions.ToFormsColor(SkiaSharp.SKColorF)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:SkiaSharp.SKPoint" />
      </Targets>
      <Member MemberName="ToFormsPoint">
        <MemberSignature Language="C#" Value="public static Xamarin.Forms.Point ToFormsPoint (this SkiaSharp.SKPoint point);" FrameworkAlternate="skiasharp-views-forms-1.60" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype Xamarin.Forms.Point ToFormsPoint(valuetype SkiaSharp.SKPoint point) cil managed" FrameworkAlternate="skiasharp-views-forms-1.60" />
        <MemberSignature Language="DocId" Value="M:SkiaSharp.Views.Forms.Extensions.ToFormsPoint(SkiaSharp.SKPoint)" FrameworkAlternate="skiasharp-views-forms-1.60" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType FrameworkAlternate="skiasharp-views-forms-1.60">Xamarin.Forms.Point</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="point" Type="SkiaSharp.SKPoint" Index="0" FrameworkAlternate="skiasharp-views-forms-1.60" RefType="this" />
        </Parameters>
        <Docs>
          <param name="point">The SkiaSharp point.</param>
          <summary>Converts a SkiaSharp point into a Xamarin.Forms point.</summary>
        </Docs>
        <Link Type="SkiaSharp.Views.Forms.Extensions" Member="M:SkiaSharp.Views.Forms.Extensions.ToFormsPoint(SkiaSharp.SKPoint)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:SkiaSharp.SKPointI" />
      </Targets>
      <Member MemberName="ToFormsPoint">
        <MemberSignature Language="C#" Value="public static Xamarin.Forms.Point ToFormsPoint (this SkiaSharp.SKPointI point);" FrameworkAlternate="skiasharp-views-forms-1.60" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype Xamarin.Forms.Point ToFormsPoint(valuetype SkiaSharp.SKPointI point) cil managed" FrameworkAlternate="skiasharp-views-forms-1.60" />
        <MemberSignature Language="DocId" Value="M:SkiaSharp.Views.Forms.Extensions.ToFormsPoint(SkiaSharp.SKPointI)" FrameworkAlternate="skiasharp-views-forms-1.60" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType FrameworkAlternate="skiasharp-views-forms-1.60">Xamarin.Forms.Point</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="point" Type="SkiaSharp.SKPointI" Index="0" FrameworkAlternate="skiasharp-views-forms-1.60" RefType="this" />
        </Parameters>
        <Docs>
          <param name="point">The SkiaSharp point.</param>
          <summary>Converts a SkiaSharp point into a Xamarin.Forms point.</summary>
        </Docs>
        <Link Type="SkiaSharp.Views.Forms.Extensions" Member="M:SkiaSharp.Views.Forms.Extensions.ToFormsPoint(SkiaSharp.SKPointI)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:SkiaSharp.SKRect" />
      </Targets>
      <Member MemberName="ToFormsRect">
        <MemberSignature Language="C#" Value="public static Xamarin.Forms.Rectangle ToFormsRect (this SkiaSharp.SKRect rect);" FrameworkAlternate="skiasharp-views-forms-1.60" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype Xamarin.Forms.Rectangle ToFormsRect(valuetype SkiaSharp.SKRect rect) cil managed" FrameworkAlternate="skiasharp-views-forms-1.60" />
        <MemberSignature Language="DocId" Value="M:SkiaSharp.Views.Forms.Extensions.ToFormsRect(SkiaSharp.SKRect)" FrameworkAlternate="skiasharp-views-forms-1.60" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType FrameworkAlternate="skiasharp-views-forms-1.60">Xamarin.Forms.Rectangle</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="rect" Type="SkiaSharp.SKRect" Index="0" FrameworkAlternate="skiasharp-views-forms-1.60" RefType="this" />
        </Parameters>
        <Docs>
          <param name="rect">The SkiaSharp rectangle.</param>
          <summary>Converts a SkiaSharp rectangle into a Xamarin.Forms rectangle.</summary>
        </Docs>
        <Link Type="SkiaSharp.Views.Forms.Extensions" Member="M:SkiaSharp.Views.Forms.Extensions.ToFormsRect(SkiaSharp.SKRect)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:SkiaSharp.SKRectI" />
      </Targets>
      <Member MemberName="ToFormsRect">
        <MemberSignature Language="C#" Value="public static Xamarin.Forms.Rectangle ToFormsRect (this SkiaSharp.SKRectI rect);" FrameworkAlternate="skiasharp-views-forms-1.60" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype Xamarin.Forms.Rectangle ToFormsRect(valuetype SkiaSharp.SKRectI rect) cil managed" FrameworkAlternate="skiasharp-views-forms-1.60" />
        <MemberSignature Language="DocId" Value="M:SkiaSharp.Views.Forms.Extensions.ToFormsRect(SkiaSharp.SKRectI)" FrameworkAlternate="skiasharp-views-forms-1.60" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType FrameworkAlternate="skiasharp-views-forms-1.60">Xamarin.Forms.Rectangle</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="rect" Type="SkiaSharp.SKRectI" Index="0" FrameworkAlternate="skiasharp-views-forms-1.60" RefType="this" />
        </Parameters>
        <Docs>
          <param name="rect">The SkiaSharp rectangle.</param>
          <summary>Converts a SkiaSharp rectangle into a Xamarin.Forms rectangle.</summary>
        </Docs>
        <Link Type="SkiaSharp.Views.Forms.Extensions" Member="M:SkiaSharp.Views.Forms.Extensions.ToFormsRect(SkiaSharp.SKRectI)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:SkiaSharp.SKSize" />
      </Targets>
      <Member MemberName="ToFormsSize">
        <MemberSignature Language="C#" Value="public static Xamarin.Forms.Size ToFormsSize (this SkiaSharp.SKSize size);" FrameworkAlternate="skiasharp-views-forms-1.60" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype Xamarin.Forms.Size ToFormsSize(valuetype SkiaSharp.SKSize size) cil managed" FrameworkAlternate="skiasharp-views-forms-1.60" />
        <MemberSignature Language="DocId" Value="M:SkiaSharp.Views.Forms.Extensions.ToFormsSize(SkiaSharp.SKSize)" FrameworkAlternate="skiasharp-views-forms-1.60" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType FrameworkAlternate="skiasharp-views-forms-1.60">Xamarin.Forms.Size</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="size" Type="SkiaSharp.SKSize" Index="0" FrameworkAlternate="skiasharp-views-forms-1.60" RefType="this" />
        </Parameters>
        <Docs>
          <param name="size">The SkiaSharp size.</param>
          <summary>Converts a SkiaSharp size into a Xamarin.Forms size.</summary>
        </Docs>
        <Link Type="SkiaSharp.Views.Forms.Extensions" Member="M:SkiaSharp.Views.Forms.Extensions.ToFormsSize(SkiaSharp.SKSize)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:SkiaSharp.SKSizeI" />
      </Targets>
      <Member MemberName="ToFormsSize">
        <MemberSignature Language="C#" Value="public static Xamarin.Forms.Size ToFormsSize (this SkiaSharp.SKSizeI size);" FrameworkAlternate="skiasharp-views-forms-1.60" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype Xamarin.Forms.Size ToFormsSize(valuetype SkiaSharp.SKSizeI size) cil managed" FrameworkAlternate="skiasharp-views-forms-1.60" />
        <MemberSignature Language="DocId" Value="M:SkiaSharp.Views.Forms.Extensions.ToFormsSize(SkiaSharp.SKSizeI)" FrameworkAlternate="skiasharp-views-forms-1.60" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType FrameworkAlternate="skiasharp-views-forms-1.60">Xamarin.Forms.Size</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="size" Type="SkiaSharp.SKSizeI" Index="0" FrameworkAlternate="skiasharp-views-forms-1.60" RefType="this" />
        </Parameters>
        <Docs>
          <param name="size">The SkiaSharp size.</param>
          <summary>Converts a SkiaSharp size into a Xamarin.Forms size.</summary>
        </Docs>
        <Link Type="SkiaSharp.Views.Forms.Extensions" Member="M:SkiaSharp.Views.Forms.Extensions.ToFormsSize(SkiaSharp.SKSizeI)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Xamarin.Forms.Color" />
      </Targets>
      <Member MemberName="ToSKColor">
        <MemberSignature Language="C#" Value="public static SkiaSharp.SKColor ToSKColor (this Xamarin.Forms.Color color);" FrameworkAlternate="skiasharp-views-forms-1.60" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype SkiaSharp.SKColor ToSKColor(valuetype Xamarin.Forms.Color color) cil managed" FrameworkAlternate="skiasharp-views-forms-1.60" />
        <MemberSignature Language="DocId" Value="M:SkiaSharp.Views.Forms.Extensions.ToSKColor(Xamarin.Forms.Color)" FrameworkAlternate="skiasharp-views-forms-1.60" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType FrameworkAlternate="skiasharp-views-forms-1.60">SkiaSharp.SKColor</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="color" Type="Xamarin.Forms.Color" Index="0" FrameworkAlternate="skiasharp-views-forms-1.60" RefType="this" />
        </Parameters>
        <Docs>
          <param name="color">The Xamarin.Forms color.</param>
          <summary>Converts a Xamarin.Forms color into a SkiaSharp color.</summary>
        </Docs>
        <Link Type="SkiaSharp.Views.Forms.Extensions" Member="M:SkiaSharp.Views.Forms.Extensions.ToSKColor(Xamarin.Forms.Color)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Xamarin.Forms.Color" />
      </Targets>
      <Member MemberName="ToSKColorF">
        <MemberSignature Language="C#" Value="public static SkiaSharp.SKColorF ToSKColorF (this Xamarin.Forms.Color color);" FrameworkAlternate="skiasharp-views-forms-2.80" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype SkiaSharp.SKColorF ToSKColorF(valuetype Xamarin.Forms.Color color) cil managed" FrameworkAlternate="skiasharp-views-forms-2.80" />
        <MemberSignature Language="DocId" Value="M:SkiaSharp.Views.Forms.Extensions.ToSKColorF(Xamarin.Forms.Color)" FrameworkAlternate="skiasharp-views-forms-2.80" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType FrameworkAlternate="skiasharp-views-forms-2.80">SkiaSharp.SKColorF</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="color" Type="Xamarin.Forms.Color" RefType="this" Index="0" FrameworkAlternate="skiasharp-views-forms-2.80;skiasharp-views-forms-2.88" />
        </Parameters>
        <Docs>
          <param name="color">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="SkiaSharp.Views.Forms.Extensions" Member="M:SkiaSharp.Views.Forms.Extensions.ToSKColorF(Xamarin.Forms.Color)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Xamarin.Forms.Point" />
      </Targets>
      <Member MemberName="ToSKPoint">
        <MemberSignature Language="C#" Value="public static SkiaSharp.SKPoint ToSKPoint (this Xamarin.Forms.Point point);" FrameworkAlternate="skiasharp-views-forms-1.60" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype SkiaSharp.SKPoint ToSKPoint(valuetype Xamarin.Forms.Point point) cil managed" FrameworkAlternate="skiasharp-views-forms-1.60" />
        <MemberSignature Language="DocId" Value="M:SkiaSharp.Views.Forms.Extensions.ToSKPoint(Xamarin.Forms.Point)" FrameworkAlternate="skiasharp-views-forms-1.60" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType FrameworkAlternate="skiasharp-views-forms-1.60">SkiaSharp.SKPoint</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="point" Type="Xamarin.Forms.Point" Index="0" FrameworkAlternate="skiasharp-views-forms-1.60" RefType="this" />
        </Parameters>
        <Docs>
          <param name="point">The Xamarin.Forms point.</param>
          <summary>Converts a Xamarin.Forms point into a SkiaSharp point.</summary>
        </Docs>
        <Link Type="SkiaSharp.Views.Forms.Extensions" Member="M:SkiaSharp.Views.Forms.Extensions.ToSKPoint(Xamarin.Forms.Point)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Xamarin.Forms.Rectangle" />
      </Targets>
      <Member MemberName="ToSKRect">
        <MemberSignature Language="C#" Value="public static SkiaSharp.SKRect ToSKRect (this Xamarin.Forms.Rectangle rect);" FrameworkAlternate="skiasharp-views-forms-1.60" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype SkiaSharp.SKRect ToSKRect(valuetype Xamarin.Forms.Rectangle rect) cil managed" FrameworkAlternate="skiasharp-views-forms-1.60" />
        <MemberSignature Language="DocId" Value="M:SkiaSharp.Views.Forms.Extensions.ToSKRect(Xamarin.Forms.Rectangle)" FrameworkAlternate="skiasharp-views-forms-1.60" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType FrameworkAlternate="skiasharp-views-forms-1.60">SkiaSharp.SKRect</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="rect" Type="Xamarin.Forms.Rectangle" Index="0" FrameworkAlternate="skiasharp-views-forms-1.60" RefType="this" />
        </Parameters>
        <Docs>
          <param name="rect">The Xamarin.Forms rectangle.</param>
          <summary>Converts a Xamarin.Forms rectangle into a SkiaSharp rectangle.</summary>
        </Docs>
        <Link Type="SkiaSharp.Views.Forms.Extensions" Member="M:SkiaSharp.Views.Forms.Extensions.ToSKRect(Xamarin.Forms.Rectangle)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Xamarin.Forms.Size" />
      </Targets>
      <Member MemberName="ToSKSize">
        <MemberSignature Language="C#" Value="public static SkiaSharp.SKSize ToSKSize (this Xamarin.Forms.Size size);" FrameworkAlternate="skiasharp-views-forms-1.60" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype SkiaSharp.SKSize ToSKSize(valuetype Xamarin.Forms.Size size) cil managed" FrameworkAlternate="skiasharp-views-forms-1.60" />
        <MemberSignature Language="DocId" Value="M:SkiaSharp.Views.Forms.Extensions.ToSKSize(Xamarin.Forms.Size)" FrameworkAlternate="skiasharp-views-forms-1.60" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType FrameworkAlternate="skiasharp-views-forms-1.60">SkiaSharp.SKSize</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="size" Type="Xamarin.Forms.Size" Index="0" FrameworkAlternate="skiasharp-views-forms-1.60" RefType="this" />
        </Parameters>
        <Docs>
          <param name="size">The Xamarin.Forms size.</param>
          <summary>Converts a Xamarin.Forms size into a SkiaSharp size.</summary>
        </Docs>
        <Link Type="SkiaSharp.Views.Forms.Extensions" Member="M:SkiaSharp.Views.Forms.Extensions.ToSKSize(Xamarin.Forms.Size)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:SkiaSharp.SKColor" />
      </Targets>
      <Member MemberName="ToColor">
        <MemberSignature Language="C#" Value="public static Gdk.Color ToColor (this SkiaSharp.SKColor color);" FrameworkAlternate="skiasharp-views-1.68" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype Gdk.Color ToColor(valuetype SkiaSharp.SKColor color) cil managed" FrameworkAlternate="skiasharp-views-1.68" />
        <MemberSignature Language="DocId" Value="M:SkiaSharp.Views.Gtk.GTKExtensions.ToColor(SkiaSharp.SKColor)" FrameworkAlternate="skiasharp-views-1.68" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType FrameworkAlternate="skiasharp-views-1.68">Gdk.Color</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="color" Type="SkiaSharp.SKColor" Index="0" FrameworkAlternate="skiasharp-views-1.68" RefType="this" />
        </Parameters>
        <Docs>
          <param name="color">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="SkiaSharp.Views.Gtk.GTKExtensions" Member="M:SkiaSharp.Views.Gtk.GTKExtensions.ToColor(SkiaSharp.SKColor)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:SkiaSharp.SKBitmap" />
      </Targets>
      <Member MemberName="ToPixbuf">
        <MemberSignature Language="C#" Value="public static Gdk.Pixbuf ToPixbuf (this SkiaSharp.SKBitmap skiaBitmap);" FrameworkAlternate="skiasharp-views-1.68" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Gdk.Pixbuf ToPixbuf(class SkiaSharp.SKBitmap skiaBitmap) cil managed" FrameworkAlternate="skiasharp-views-1.68" />
        <MemberSignature Language="DocId" Value="M:SkiaSharp.Views.Gtk.GTKExtensions.ToPixbuf(SkiaSharp.SKBitmap)" FrameworkAlternate="skiasharp-views-1.68" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType FrameworkAlternate="skiasharp-views-1.68">Gdk.Pixbuf</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="skiaBitmap" Type="SkiaSharp.SKBitmap" Index="0" FrameworkAlternate="skiasharp-views-1.68" RefType="this" />
        </Parameters>
        <Docs>
          <param name="skiaBitmap">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="SkiaSharp.Views.Gtk.GTKExtensions" Member="M:SkiaSharp.Views.Gtk.GTKExtensions.ToPixbuf(SkiaSharp.SKBitmap)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:SkiaSharp.SKImage" />
      </Targets>
      <Member MemberName="ToPixbuf">
        <MemberSignature Language="C#" Value="public static Gdk.Pixbuf ToPixbuf (this SkiaSharp.SKImage skiaImage);" FrameworkAlternate="skiasharp-views-1.68" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Gdk.Pixbuf ToPixbuf(class SkiaSharp.SKImage skiaImage) cil managed" FrameworkAlternate="skiasharp-views-1.68" />
        <MemberSignature Language="DocId" Value="M:SkiaSharp.Views.Gtk.GTKExtensions.ToPixbuf(SkiaSharp.SKImage)" FrameworkAlternate="skiasharp-views-1.68" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType FrameworkAlternate="skiasharp-views-1.68">Gdk.Pixbuf</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="skiaImage" Type="SkiaSharp.SKImage" Index="0" FrameworkAlternate="skiasharp-views-1.68" RefType="this" />
        </Parameters>
        <Docs>
          <param name="skiaImage">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="SkiaSharp.Views.Gtk.GTKExtensions" Member="M:SkiaSharp.Views.Gtk.GTKExtensions.ToPixbuf(SkiaSharp.SKImage)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:SkiaSharp.SKPicture" />
      </Targets>
      <Member MemberName="ToPixbuf">
        <MemberSignature Language="C#" Value="public static Gdk.Pixbuf ToPixbuf (this SkiaSharp.SKPicture picture, SkiaSharp.SKSizeI dimensions);" FrameworkAlternate="skiasharp-views-1.68" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Gdk.Pixbuf ToPixbuf(class SkiaSharp.SKPicture picture, valuetype SkiaSharp.SKSizeI dimensions) cil managed" FrameworkAlternate="skiasharp-views-1.68" />
        <MemberSignature Language="DocId" Value="M:SkiaSharp.Views.Gtk.GTKExtensions.ToPixbuf(SkiaSharp.SKPicture,SkiaSharp.SKSizeI)" FrameworkAlternate="skiasharp-views-1.68" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType FrameworkAlternate="skiasharp-views-1.68">Gdk.Pixbuf</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="picture" Type="SkiaSharp.SKPicture" Index="0" FrameworkAlternate="skiasharp-views-1.68" RefType="this" />
          <Parameter Name="dimensions" Type="SkiaSharp.SKSizeI" Index="1" FrameworkAlternate="skiasharp-views-1.68" />
        </Parameters>
        <Docs>
          <param name="picture">To be added.</param>
          <param name="dimensions">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="SkiaSharp.Views.Gtk.GTKExtensions" Member="M:SkiaSharp.Views.Gtk.GTKExtensions.ToPixbuf(SkiaSharp.SKPicture,SkiaSharp.SKSizeI)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:SkiaSharp.SKPixmap" />
      </Targets>
      <Member MemberName="ToPixbuf">
        <MemberSignature Language="C#" Value="public static Gdk.Pixbuf ToPixbuf (this SkiaSharp.SKPixmap pixmap);" FrameworkAlternate="skiasharp-views-1.68" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Gdk.Pixbuf ToPixbuf(class SkiaSharp.SKPixmap pixmap) cil managed" FrameworkAlternate="skiasharp-views-1.68" />
        <MemberSignature Language="DocId" Value="M:SkiaSharp.Views.Gtk.GTKExtensions.ToPixbuf(SkiaSharp.SKPixmap)" FrameworkAlternate="skiasharp-views-1.68" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType FrameworkAlternate="skiasharp-views-1.68">Gdk.Pixbuf</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="pixmap" Type="SkiaSharp.SKPixmap" Index="0" FrameworkAlternate="skiasharp-views-1.68" RefType="this" />
        </Parameters>
        <Docs>
          <param name="pixmap">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="SkiaSharp.Views.Gtk.GTKExtensions" Member="M:SkiaSharp.Views.Gtk.GTKExtensions.ToPixbuf(SkiaSharp.SKPixmap)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:SkiaSharp.SKPointI" />
      </Targets>
      <Member MemberName="ToPoint">
        <MemberSignature Language="C#" Value="public static Gdk.Point ToPoint (this SkiaSharp.SKPointI point);" FrameworkAlternate="skiasharp-views-1.68" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype Gdk.Point ToPoint(valuetype SkiaSharp.SKPointI point) cil managed" FrameworkAlternate="skiasharp-views-1.68" />
        <MemberSignature Language="DocId" Value="M:SkiaSharp.Views.Gtk.GTKExtensions.ToPoint(SkiaSharp.SKPointI)" FrameworkAlternate="skiasharp-views-1.68" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType FrameworkAlternate="skiasharp-views-1.68">Gdk.Point</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="point" Type="SkiaSharp.SKPointI" Index="0" FrameworkAlternate="skiasharp-views-1.68" RefType="this" />
        </Parameters>
        <Docs>
          <param name="point">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="SkiaSharp.Views.Gtk.GTKExtensions" Member="M:SkiaSharp.Views.Gtk.GTKExtensions.ToPoint(SkiaSharp.SKPointI)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:SkiaSharp.SKRectI" />
      </Targets>
      <Member MemberName="ToRect">
        <MemberSignature Language="C#" Value="public static Gdk.Rectangle ToRect (this SkiaSharp.SKRectI rect);" FrameworkAlternate="skiasharp-views-1.68" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype Gdk.Rectangle ToRect(valuetype SkiaSharp.SKRectI rect) cil managed" FrameworkAlternate="skiasharp-views-1.68" />
        <MemberSignature Language="DocId" Value="M:SkiaSharp.Views.Gtk.GTKExtensions.ToRect(SkiaSharp.SKRectI)" FrameworkAlternate="skiasharp-views-1.68" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType FrameworkAlternate="skiasharp-views-1.68">Gdk.Rectangle</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="rect" Type="SkiaSharp.SKRectI" Index="0" FrameworkAlternate="skiasharp-views-1.68" RefType="this" />
        </Parameters>
        <Docs>
          <param name="rect">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="SkiaSharp.Views.Gtk.GTKExtensions" Member="M:SkiaSharp.Views.Gtk.GTKExtensions.ToRect(SkiaSharp.SKRectI)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:SkiaSharp.SKSizeI" />
      </Targets>
      <Member MemberName="ToSize">
        <MemberSignature Language="C#" Value="public static Gdk.Size ToSize (this SkiaSharp.SKSizeI size);" FrameworkAlternate="skiasharp-views-1.68" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype Gdk.Size ToSize(valuetype SkiaSharp.SKSizeI size) cil managed" FrameworkAlternate="skiasharp-views-1.68" />
        <MemberSignature Language="DocId" Value="M:SkiaSharp.Views.Gtk.GTKExtensions.ToSize(SkiaSharp.SKSizeI)" FrameworkAlternate="skiasharp-views-1.68" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType FrameworkAlternate="skiasharp-views-1.68">Gdk.Size</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="size" Type="SkiaSharp.SKSizeI" Index="0" FrameworkAlternate="skiasharp-views-1.68" RefType="this" />
        </Parameters>
        <Docs>
          <param name="size">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="SkiaSharp.Views.Gtk.GTKExtensions" Member="M:SkiaSharp.Views.Gtk.GTKExtensions.ToSize(SkiaSharp.SKSizeI)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Gdk.Pixbuf" />
      </Targets>
      <Member MemberName="ToSKBitmap">
        <MemberSignature Language="C#" Value="public static SkiaSharp.SKBitmap ToSKBitmap (this Gdk.Pixbuf pixbuf);" FrameworkAlternate="skiasharp-views-1.68" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class SkiaSharp.SKBitmap ToSKBitmap(class Gdk.Pixbuf pixbuf) cil managed" FrameworkAlternate="skiasharp-views-1.68" />
        <MemberSignature Language="DocId" Value="M:SkiaSharp.Views.Gtk.GTKExtensions.ToSKBitmap(Gdk.Pixbuf)" FrameworkAlternate="skiasharp-views-1.68" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType FrameworkAlternate="skiasharp-views-1.68">SkiaSharp.SKBitmap</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="pixbuf" Type="Gdk.Pixbuf" Index="0" FrameworkAlternate="skiasharp-views-1.68" RefType="this" />
        </Parameters>
        <Docs>
          <param name="pixbuf">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="SkiaSharp.Views.Gtk.GTKExtensions" Member="M:SkiaSharp.Views.Gtk.GTKExtensions.ToSKBitmap(Gdk.Pixbuf)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Gdk.Color" />
      </Targets>
      <Member MemberName="ToSKColor">
        <MemberSignature Language="C#" Value="public static SkiaSharp.SKColor ToSKColor (this Gdk.Color color);" FrameworkAlternate="skiasharp-views-1.68" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype SkiaSharp.SKColor ToSKColor(valuetype Gdk.Color color) cil managed" FrameworkAlternate="skiasharp-views-1.68" />
        <MemberSignature Language="DocId" Value="M:SkiaSharp.Views.Gtk.GTKExtensions.ToSKColor(Gdk.Color)" FrameworkAlternate="skiasharp-views-1.68" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType FrameworkAlternate="skiasharp-views-1.68">SkiaSharp.SKColor</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="color" Type="Gdk.Color" Index="0" FrameworkAlternate="skiasharp-views-1.68" RefType="this" />
        </Parameters>
        <Docs>
          <param name="color">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="SkiaSharp.Views.Gtk.GTKExtensions" Member="M:SkiaSharp.Views.Gtk.GTKExtensions.ToSKColor(Gdk.Color)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Gdk.Pixbuf" />
      </Targets>
      <Member MemberName="ToSKImage">
        <MemberSignature Language="C#" Value="public static SkiaSharp.SKImage ToSKImage (this Gdk.Pixbuf pixbuf);" FrameworkAlternate="skiasharp-views-1.68" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class SkiaSharp.SKImage ToSKImage(class Gdk.Pixbuf pixbuf) cil managed" FrameworkAlternate="skiasharp-views-1.68" />
        <MemberSignature Language="DocId" Value="M:SkiaSharp.Views.Gtk.GTKExtensions.ToSKImage(Gdk.Pixbuf)" FrameworkAlternate="skiasharp-views-1.68" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType FrameworkAlternate="skiasharp-views-1.68">SkiaSharp.SKImage</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="pixbuf" Type="Gdk.Pixbuf" Index="0" FrameworkAlternate="skiasharp-views-1.68" RefType="this" />
        </Parameters>
        <Docs>
          <param name="pixbuf">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="SkiaSharp.Views.Gtk.GTKExtensions" Member="M:SkiaSharp.Views.Gtk.GTKExtensions.ToSKImage(Gdk.Pixbuf)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Gdk.Pixbuf" />
      </Targets>
      <Member MemberName="ToSKPixmap">
        <MemberSignature Language="C#" Value="public static void ToSKPixmap (this Gdk.Pixbuf pixbuf, SkiaSharp.SKPixmap pixmap);" FrameworkAlternate="skiasharp-views-1.68" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ToSKPixmap(class Gdk.Pixbuf pixbuf, class SkiaSharp.SKPixmap pixmap) cil managed" FrameworkAlternate="skiasharp-views-1.68" />
        <MemberSignature Language="DocId" Value="M:SkiaSharp.Views.Gtk.GTKExtensions.ToSKPixmap(Gdk.Pixbuf,SkiaSharp.SKPixmap)" FrameworkAlternate="skiasharp-views-1.68" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType FrameworkAlternate="skiasharp-views-1.68">System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="pixbuf" Type="Gdk.Pixbuf" Index="0" FrameworkAlternate="skiasharp-views-1.68" RefType="this" />
          <Parameter Name="pixmap" Type="SkiaSharp.SKPixmap" Index="1" FrameworkAlternate="skiasharp-views-1.68" />
        </Parameters>
        <Docs>
          <param name="pixbuf">To be added.</param>
          <param name="pixmap">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="SkiaSharp.Views.Gtk.GTKExtensions" Member="M:SkiaSharp.Views.Gtk.GTKExtensions.ToSKPixmap(Gdk.Pixbuf,SkiaSharp.SKPixmap)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Gdk.Point" />
      </Targets>
      <Member MemberName="ToSKPointI">
        <MemberSignature Language="C#" Value="public static SkiaSharp.SKPointI ToSKPointI (this Gdk.Point point);" FrameworkAlternate="skiasharp-views-1.68" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype SkiaSharp.SKPointI ToSKPointI(valuetype Gdk.Point point) cil managed" FrameworkAlternate="skiasharp-views-1.68" />
        <MemberSignature Language="DocId" Value="M:SkiaSharp.Views.Gtk.GTKExtensions.ToSKPointI(Gdk.Point)" FrameworkAlternate="skiasharp-views-1.68" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType FrameworkAlternate="skiasharp-views-1.68">SkiaSharp.SKPointI</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="point" Type="Gdk.Point" Index="0" FrameworkAlternate="skiasharp-views-1.68" RefType="this" />
        </Parameters>
        <Docs>
          <param name="point">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="SkiaSharp.Views.Gtk.GTKExtensions" Member="M:SkiaSharp.Views.Gtk.GTKExtensions.ToSKPointI(Gdk.Point)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Gdk.Rectangle" />
      </Targets>
      <Member MemberName="ToSKRectI">
        <MemberSignature Language="C#" Value="public static SkiaSharp.SKRectI ToSKRectI (this Gdk.Rectangle rect);" FrameworkAlternate="skiasharp-views-1.68" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype SkiaSharp.SKRectI ToSKRectI(valuetype Gdk.Rectangle rect) cil managed" FrameworkAlternate="skiasharp-views-1.68" />
        <MemberSignature Language="DocId" Value="M:SkiaSharp.Views.Gtk.GTKExtensions.ToSKRectI(Gdk.Rectangle)" FrameworkAlternate="skiasharp-views-1.68" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType FrameworkAlternate="skiasharp-views-1.68">SkiaSharp.SKRectI</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="rect" Type="Gdk.Rectangle" Index="0" FrameworkAlternate="skiasharp-views-1.68" RefType="this" />
        </Parameters>
        <Docs>
          <param name="rect">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="SkiaSharp.Views.Gtk.GTKExtensions" Member="M:SkiaSharp.Views.Gtk.GTKExtensions.ToSKRectI(Gdk.Rectangle)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Gdk.Size" />
      </Targets>
      <Member MemberName="ToSKSizeI">
        <MemberSignature Language="C#" Value="public static SkiaSharp.SKSizeI ToSKSizeI (this Gdk.Size size);" FrameworkAlternate="skiasharp-views-1.68" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype SkiaSharp.SKSizeI ToSKSizeI(valuetype Gdk.Size size) cil managed" FrameworkAlternate="skiasharp-views-1.68" />
        <MemberSignature Language="DocId" Value="M:SkiaSharp.Views.Gtk.GTKExtensions.ToSKSizeI(Gdk.Size)" FrameworkAlternate="skiasharp-views-1.68" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType FrameworkAlternate="skiasharp-views-1.68">SkiaSharp.SKSizeI</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="size" Type="Gdk.Size" Index="0" FrameworkAlternate="skiasharp-views-1.68" RefType="this" />
        </Parameters>
        <Docs>
          <param name="size">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="SkiaSharp.Views.Gtk.GTKExtensions" Member="M:SkiaSharp.Views.Gtk.GTKExtensions.ToSKSizeI(Gdk.Size)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:SkiaSharp.SKColor" />
      </Targets>
      <Member MemberName="ToCGColor">
        <MemberSignature Language="C#" Value="public static CoreGraphics.CGColor ToCGColor (this SkiaSharp.SKColor color);" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class CoreGraphics.CGColor ToCGColor(valuetype SkiaSharp.SKColor color) cil managed" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberSignature Language="DocId" Value="M:SkiaSharp.Views.iOS.AppleExtensions.ToCGColor(SkiaSharp.SKColor)" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType FrameworkAlternate="skiasharp-views-1.60">CoreGraphics.CGColor</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="color" Type="SkiaSharp.SKColor" Index="0" FrameworkAlternate="skiasharp-views-1.60" RefType="this" />
        </Parameters>
        <Docs>
          <param name="color">The SkiaSharp color.</param>
          <summary>Converts a SkiaSharp color into a CoreGraphics color.</summary>
        </Docs>
        <Link Type="SkiaSharp.Views.iOS.AppleExtensions" Member="M:SkiaSharp.Views.iOS.AppleExtensions.ToCGColor(SkiaSharp.SKColor)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:SkiaSharp.SKColorF" />
      </Targets>
      <Member MemberName="ToCGColor">
        <MemberSignature Language="C#" Value="public static CoreGraphics.CGColor ToCGColor (this SkiaSharp.SKColorF color);" FrameworkAlternate="skiasharp-views-2.80" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class CoreGraphics.CGColor ToCGColor(valuetype SkiaSharp.SKColorF color) cil managed" FrameworkAlternate="skiasharp-views-2.80" />
        <MemberSignature Language="DocId" Value="M:SkiaSharp.Views.iOS.AppleExtensions.ToCGColor(SkiaSharp.SKColorF)" FrameworkAlternate="skiasharp-views-2.80" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType FrameworkAlternate="skiasharp-views-2.80">CoreGraphics.CGColor</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="color" Type="SkiaSharp.SKColorF" RefType="this" Index="0" FrameworkAlternate="skiasharp-views-2.80;skiasharp-views-2.88" />
        </Parameters>
        <Docs>
          <param name="color">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="SkiaSharp.Views.iOS.AppleExtensions" Member="M:SkiaSharp.Views.iOS.AppleExtensions.ToCGColor(SkiaSharp.SKColorF)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:SkiaSharp.SKBitmap" />
      </Targets>
      <Member MemberName="ToCGImage">
        <MemberSignature Language="C#" Value="public static CoreGraphics.CGImage ToCGImage (this SkiaSharp.SKBitmap skiaBitmap);" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class CoreGraphics.CGImage ToCGImage(class SkiaSharp.SKBitmap skiaBitmap) cil managed" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberSignature Language="DocId" Value="M:SkiaSharp.Views.iOS.AppleExtensions.ToCGImage(SkiaSharp.SKBitmap)" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType FrameworkAlternate="skiasharp-views-1.60">CoreGraphics.CGImage</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="skiaBitmap" Type="SkiaSharp.SKBitmap" Index="0" FrameworkAlternate="skiasharp-views-1.60" RefType="this" />
        </Parameters>
        <Docs>
          <param name="skiaBitmap">The SkiaSharp bitmap.</param>
          <summary>Converts a SkiaSharp bitmap into a CoreGraphics image.</summary>
        </Docs>
        <Link Type="SkiaSharp.Views.iOS.AppleExtensions" Member="M:SkiaSharp.Views.iOS.AppleExtensions.ToCGImage(SkiaSharp.SKBitmap)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:SkiaSharp.SKImage" />
      </Targets>
      <Member MemberName="ToCGImage">
        <MemberSignature Language="C#" Value="public static CoreGraphics.CGImage ToCGImage (this SkiaSharp.SKImage skiaImage);" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class CoreGraphics.CGImage ToCGImage(class SkiaSharp.SKImage skiaImage) cil managed" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberSignature Language="DocId" Value="M:SkiaSharp.Views.iOS.AppleExtensions.ToCGImage(SkiaSharp.SKImage)" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType FrameworkAlternate="skiasharp-views-1.60">CoreGraphics.CGImage</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="skiaImage" Type="SkiaSharp.SKImage" Index="0" FrameworkAlternate="skiasharp-views-1.60" RefType="this" />
        </Parameters>
        <Docs>
          <param name="skiaImage">The SkiaSharp image.</param>
          <summary>Converts a SkiaSharp image into a CoreGraphics image.</summary>
        </Docs>
        <Link Type="SkiaSharp.Views.iOS.AppleExtensions" Member="M:SkiaSharp.Views.iOS.AppleExtensions.ToCGImage(SkiaSharp.SKImage)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:SkiaSharp.SKPicture" />
      </Targets>
      <Member MemberName="ToCGImage">
        <MemberSignature Language="C#" Value="public static CoreGraphics.CGImage ToCGImage (this SkiaSharp.SKPicture skiaPicture, SkiaSharp.SKSizeI dimensions);" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class CoreGraphics.CGImage ToCGImage(class SkiaSharp.SKPicture skiaPicture, valuetype SkiaSharp.SKSizeI dimensions) cil managed" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberSignature Language="DocId" Value="M:SkiaSharp.Views.iOS.AppleExtensions.ToCGImage(SkiaSharp.SKPicture,SkiaSharp.SKSizeI)" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType FrameworkAlternate="skiasharp-views-1.60">CoreGraphics.CGImage</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="skiaPicture" Type="SkiaSharp.SKPicture" Index="0" FrameworkAlternate="skiasharp-views-1.60" RefType="this" />
          <Parameter Name="dimensions" Type="SkiaSharp.SKSizeI" Index="1" FrameworkAlternate="skiasharp-views-1.60" />
        </Parameters>
        <Docs>
          <param name="skiaPicture">The SkiaSharp picture.</param>
          <param name="dimensions">The dimensions of the picture.</param>
          <summary>Converts a SkiaSharp picture into a CoreGraphics image.</summary>
        </Docs>
        <Link Type="SkiaSharp.Views.iOS.AppleExtensions" Member="M:SkiaSharp.Views.iOS.AppleExtensions.ToCGImage(SkiaSharp.SKPicture,SkiaSharp.SKSizeI)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:SkiaSharp.SKPixmap" />
      </Targets>
      <Member MemberName="ToCGImage">
        <MemberSignature Language="C#" Value="public static CoreGraphics.CGImage ToCGImage (this SkiaSharp.SKPixmap skiaPixmap);" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class CoreGraphics.CGImage ToCGImage(class SkiaSharp.SKPixmap skiaPixmap) cil managed" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberSignature Language="DocId" Value="M:SkiaSharp.Views.iOS.AppleExtensions.ToCGImage(SkiaSharp.SKPixmap)" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType FrameworkAlternate="skiasharp-views-1.60">CoreGraphics.CGImage</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="skiaPixmap" Type="SkiaSharp.SKPixmap" Index="0" FrameworkAlternate="skiasharp-views-1.60" RefType="this" />
        </Parameters>
        <Docs>
          <param name="skiaPixmap">The SkiaSharp pixmap.</param>
          <summary>Converts a SkiaSharp pixmap into a CoreGraphics image.</summary>
        </Docs>
        <Link Type="SkiaSharp.Views.iOS.AppleExtensions" Member="M:SkiaSharp.Views.iOS.AppleExtensions.ToCGImage(SkiaSharp.SKPixmap)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:SkiaSharp.SKColor" />
      </Targets>
      <Member MemberName="ToCIColor">
        <MemberSignature Language="C#" Value="public static CoreImage.CIColor ToCIColor (this SkiaSharp.SKColor color);" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class CoreImage.CIColor ToCIColor(valuetype SkiaSharp.SKColor color) cil managed" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberSignature Language="DocId" Value="M:SkiaSharp.Views.iOS.AppleExtensions.ToCIColor(SkiaSharp.SKColor)" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType FrameworkAlternate="skiasharp-views-1.60">CoreImage.CIColor</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="color" Type="SkiaSharp.SKColor" Index="0" FrameworkAlternate="skiasharp-views-1.60" RefType="this" />
        </Parameters>
        <Docs>
          <param name="color">The SkiaSharp color.</param>
          <summary>Converts a SkiaSharp color into a CoreImage color.</summary>
        </Docs>
        <Link Type="SkiaSharp.Views.iOS.AppleExtensions" Member="M:SkiaSharp.Views.iOS.AppleExtensions.ToCIColor(SkiaSharp.SKColor)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:SkiaSharp.SKColorF" />
      </Targets>
      <Member MemberName="ToCIColor">
        <MemberSignature Language="C#" Value="public static CoreImage.CIColor ToCIColor (this SkiaSharp.SKColorF color);" FrameworkAlternate="skiasharp-views-2.80" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class CoreImage.CIColor ToCIColor(valuetype SkiaSharp.SKColorF color) cil managed" FrameworkAlternate="skiasharp-views-2.80" />
        <MemberSignature Language="DocId" Value="M:SkiaSharp.Views.iOS.AppleExtensions.ToCIColor(SkiaSharp.SKColorF)" FrameworkAlternate="skiasharp-views-2.80" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType FrameworkAlternate="skiasharp-views-2.80">CoreImage.CIColor</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="color" Type="SkiaSharp.SKColorF" RefType="this" Index="0" FrameworkAlternate="skiasharp-views-2.80;skiasharp-views-2.88" />
        </Parameters>
        <Docs>
          <param name="color">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="SkiaSharp.Views.iOS.AppleExtensions" Member="M:SkiaSharp.Views.iOS.AppleExtensions.ToCIColor(SkiaSharp.SKColorF)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:SkiaSharp.SKBitmap" />
      </Targets>
      <Member MemberName="ToCIImage">
        <MemberSignature Language="C#" Value="public static CoreImage.CIImage ToCIImage (this SkiaSharp.SKBitmap skiaBitmap);" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class CoreImage.CIImage ToCIImage(class SkiaSharp.SKBitmap skiaBitmap) cil managed" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberSignature Language="DocId" Value="M:SkiaSharp.Views.iOS.AppleExtensions.ToCIImage(SkiaSharp.SKBitmap)" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType FrameworkAlternate="skiasharp-views-1.60">CoreImage.CIImage</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="skiaBitmap" Type="SkiaSharp.SKBitmap" Index="0" FrameworkAlternate="skiasharp-views-1.60" RefType="this" />
        </Parameters>
        <Docs>
          <param name="skiaBitmap">The SkiaSharp bitmap.</param>
          <summary>Converts a SkiaSharp bitmap into a CoreImage image.</summary>
        </Docs>
        <Link Type="SkiaSharp.Views.iOS.AppleExtensions" Member="M:SkiaSharp.Views.iOS.AppleExtensions.ToCIImage(SkiaSharp.SKBitmap)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:SkiaSharp.SKImage" />
      </Targets>
      <Member MemberName="ToCIImage">
        <MemberSignature Language="C#" Value="public static CoreImage.CIImage ToCIImage (this SkiaSharp.SKImage skiaImage);" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class CoreImage.CIImage ToCIImage(class SkiaSharp.SKImage skiaImage) cil managed" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberSignature Language="DocId" Value="M:SkiaSharp.Views.iOS.AppleExtensions.ToCIImage(SkiaSharp.SKImage)" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType FrameworkAlternate="skiasharp-views-1.60">CoreImage.CIImage</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="skiaImage" Type="SkiaSharp.SKImage" Index="0" FrameworkAlternate="skiasharp-views-1.60" RefType="this" />
        </Parameters>
        <Docs>
          <param name="skiaImage">The SkiaSharp image.</param>
          <summary>Converts a SkiaSharp image into a CoreImage image.</summary>
        </Docs>
        <Link Type="SkiaSharp.Views.iOS.AppleExtensions" Member="M:SkiaSharp.Views.iOS.AppleExtensions.ToCIImage(SkiaSharp.SKImage)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:SkiaSharp.SKPicture" />
      </Targets>
      <Member MemberName="ToCIImage">
        <MemberSignature Language="C#" Value="public static CoreImage.CIImage ToCIImage (this SkiaSharp.SKPicture skiaPicture, SkiaSharp.SKSizeI dimensions);" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class CoreImage.CIImage ToCIImage(class SkiaSharp.SKPicture skiaPicture, valuetype SkiaSharp.SKSizeI dimensions) cil managed" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberSignature Language="DocId" Value="M:SkiaSharp.Views.iOS.AppleExtensions.ToCIImage(SkiaSharp.SKPicture,SkiaSharp.SKSizeI)" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType FrameworkAlternate="skiasharp-views-1.60">CoreImage.CIImage</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="skiaPicture" Type="SkiaSharp.SKPicture" Index="0" FrameworkAlternate="skiasharp-views-1.60" RefType="this" />
          <Parameter Name="dimensions" Type="SkiaSharp.SKSizeI" Index="1" FrameworkAlternate="skiasharp-views-1.60" />
        </Parameters>
        <Docs>
          <param name="skiaPicture">The SkiaSharp picture.</param>
          <param name="dimensions">The dimensions of the picture.</param>
          <summary>Converts a SkiaSharp picture into a CoreImage image.</summary>
        </Docs>
        <Link Type="SkiaSharp.Views.iOS.AppleExtensions" Member="M:SkiaSharp.Views.iOS.AppleExtensions.ToCIImage(SkiaSharp.SKPicture,SkiaSharp.SKSizeI)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:SkiaSharp.SKPixmap" />
      </Targets>
      <Member MemberName="ToCIImage">
        <MemberSignature Language="C#" Value="public static CoreImage.CIImage ToCIImage (this SkiaSharp.SKPixmap skiaPixmap);" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class CoreImage.CIImage ToCIImage(class SkiaSharp.SKPixmap skiaPixmap) cil managed" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberSignature Language="DocId" Value="M:SkiaSharp.Views.iOS.AppleExtensions.ToCIImage(SkiaSharp.SKPixmap)" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType FrameworkAlternate="skiasharp-views-1.60">CoreImage.CIImage</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="skiaPixmap" Type="SkiaSharp.SKPixmap" Index="0" FrameworkAlternate="skiasharp-views-1.60" RefType="this" />
        </Parameters>
        <Docs>
          <param name="skiaPixmap">The SkiaSharp pixmap.</param>
          <summary>Converts a SkiaSharp pixmap into a CoreImage image.</summary>
        </Docs>
        <Link Type="SkiaSharp.Views.iOS.AppleExtensions" Member="M:SkiaSharp.Views.iOS.AppleExtensions.ToCIImage(SkiaSharp.SKPixmap)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:SkiaSharp.SKData" />
      </Targets>
      <Member MemberName="ToNSData">
        <MemberSignature Language="C#" Value="public static Foundation.NSData ToNSData (this SkiaSharp.SKData skiaData);" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Foundation.NSData ToNSData(class SkiaSharp.SKData skiaData) cil managed" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberSignature Language="DocId" Value="M:SkiaSharp.Views.iOS.AppleExtensions.ToNSData(SkiaSharp.SKData)" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType FrameworkAlternate="skiasharp-views-1.60">Foundation.NSData</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="skiaData" Type="SkiaSharp.SKData" Index="0" FrameworkAlternate="skiasharp-views-1.60" RefType="this" />
        </Parameters>
        <Docs>
          <param name="skiaData">The SkiaSharp data object.</param>
          <summary>Converts a SkiaSharp data object into a NSData.</summary>
        </Docs>
        <Link Type="SkiaSharp.Views.iOS.AppleExtensions" Member="M:SkiaSharp.Views.iOS.AppleExtensions.ToNSData(SkiaSharp.SKData)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:SkiaSharp.SKPoint" />
      </Targets>
      <Member MemberName="ToPoint">
        <MemberSignature Language="C#" Value="public static CoreGraphics.CGPoint ToPoint (this SkiaSharp.SKPoint point);" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype CoreGraphics.CGPoint ToPoint(valuetype SkiaSharp.SKPoint point) cil managed" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberSignature Language="DocId" Value="M:SkiaSharp.Views.iOS.AppleExtensions.ToPoint(SkiaSharp.SKPoint)" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType FrameworkAlternate="skiasharp-views-1.60">CoreGraphics.CGPoint</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="point" Type="SkiaSharp.SKPoint" Index="0" FrameworkAlternate="skiasharp-views-1.60" RefType="this" />
        </Parameters>
        <Docs>
          <param name="point">The SkiaSharp point.</param>
          <summary>Converts a SkiaSharp point into a CoreGraphics point.</summary>
        </Docs>
        <Link Type="SkiaSharp.Views.iOS.AppleExtensions" Member="M:SkiaSharp.Views.iOS.AppleExtensions.ToPoint(SkiaSharp.SKPoint)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:SkiaSharp.SKRect" />
      </Targets>
      <Member MemberName="ToRect">
        <MemberSignature Language="C#" Value="public static CoreGraphics.CGRect ToRect (this SkiaSharp.SKRect rect);" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype CoreGraphics.CGRect ToRect(valuetype SkiaSharp.SKRect rect) cil managed" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberSignature Language="DocId" Value="M:SkiaSharp.Views.iOS.AppleExtensions.ToRect(SkiaSharp.SKRect)" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType FrameworkAlternate="skiasharp-views-1.60">CoreGraphics.CGRect</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="rect" Type="SkiaSharp.SKRect" Index="0" FrameworkAlternate="skiasharp-views-1.60" RefType="this" />
        </Parameters>
        <Docs>
          <param name="rect">The SkiaSharp rectangle.</param>
          <summary>Converts a SkiaSharp rectangle into a CoreGraphics rectangle.</summary>
        </Docs>
        <Link Type="SkiaSharp.Views.iOS.AppleExtensions" Member="M:SkiaSharp.Views.iOS.AppleExtensions.ToRect(SkiaSharp.SKRect)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:SkiaSharp.SKSize" />
      </Targets>
      <Member MemberName="ToSize">
        <MemberSignature Language="C#" Value="public static CoreGraphics.CGSize ToSize (this SkiaSharp.SKSize size);" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype CoreGraphics.CGSize ToSize(valuetype SkiaSharp.SKSize size) cil managed" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberSignature Language="DocId" Value="M:SkiaSharp.Views.iOS.AppleExtensions.ToSize(SkiaSharp.SKSize)" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType FrameworkAlternate="skiasharp-views-1.60">CoreGraphics.CGSize</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="size" Type="SkiaSharp.SKSize" Index="0" FrameworkAlternate="skiasharp-views-1.60" RefType="this" />
        </Parameters>
        <Docs>
          <param name="size">The SkiaSharp size.</param>
          <summary>Converts a SkiaSharp size into a CoreGraphics size.</summary>
        </Docs>
        <Link Type="SkiaSharp.Views.iOS.AppleExtensions" Member="M:SkiaSharp.Views.iOS.AppleExtensions.ToSize(SkiaSharp.SKSize)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:CoreGraphics.CGImage" />
      </Targets>
      <Member MemberName="ToSKBitmap">
        <MemberSignature Language="C#" Value="public static SkiaSharp.SKBitmap ToSKBitmap (this CoreGraphics.CGImage cgImage);" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class SkiaSharp.SKBitmap ToSKBitmap(class CoreGraphics.CGImage cgImage) cil managed" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberSignature Language="DocId" Value="M:SkiaSharp.Views.iOS.AppleExtensions.ToSKBitmap(CoreGraphics.CGImage)" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType FrameworkAlternate="skiasharp-views-1.60">SkiaSharp.SKBitmap</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="cgImage" Type="CoreGraphics.CGImage" Index="0" FrameworkAlternate="skiasharp-views-1.60" RefType="this" />
        </Parameters>
        <Docs>
          <param name="cgImage">The CoreGraphics image.</param>
          <summary>Converts a CoreGraphics image into a SkiaSharp bitmap.</summary>
        </Docs>
        <Link Type="SkiaSharp.Views.iOS.AppleExtensions" Member="M:SkiaSharp.Views.iOS.AppleExtensions.ToSKBitmap(CoreGraphics.CGImage)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:CoreImage.CIImage" />
      </Targets>
      <Member MemberName="ToSKBitmap">
        <MemberSignature Language="C#" Value="public static SkiaSharp.SKBitmap ToSKBitmap (this CoreImage.CIImage ciImage);" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class SkiaSharp.SKBitmap ToSKBitmap(class CoreImage.CIImage ciImage) cil managed" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberSignature Language="DocId" Value="M:SkiaSharp.Views.iOS.AppleExtensions.ToSKBitmap(CoreImage.CIImage)" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType FrameworkAlternate="skiasharp-views-1.60">SkiaSharp.SKBitmap</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="ciImage" Type="CoreImage.CIImage" Index="0" FrameworkAlternate="skiasharp-views-1.60" RefType="this" />
        </Parameters>
        <Docs>
          <param name="ciImage">The CoreImage image.</param>
          <summary>Converts a CoreImage image into a SkiaSharp bitmap.</summary>
        </Docs>
        <Link Type="SkiaSharp.Views.iOS.AppleExtensions" Member="M:SkiaSharp.Views.iOS.AppleExtensions.ToSKBitmap(CoreImage.CIImage)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:CoreGraphics.CGColor" />
      </Targets>
      <Member MemberName="ToSKColor">
        <MemberSignature Language="C#" Value="public static SkiaSharp.SKColor ToSKColor (this CoreGraphics.CGColor color);" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype SkiaSharp.SKColor ToSKColor(class CoreGraphics.CGColor color) cil managed" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberSignature Language="DocId" Value="M:SkiaSharp.Views.iOS.AppleExtensions.ToSKColor(CoreGraphics.CGColor)" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType FrameworkAlternate="skiasharp-views-1.60">SkiaSharp.SKColor</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="color" Type="CoreGraphics.CGColor" Index="0" FrameworkAlternate="skiasharp-views-1.60" RefType="this" />
        </Parameters>
        <Docs>
          <param name="color">The CoreGraphics color.</param>
          <summary>Converts a CoreGraphics color into a SkiaSharp color.</summary>
        </Docs>
        <Link Type="SkiaSharp.Views.iOS.AppleExtensions" Member="M:SkiaSharp.Views.iOS.AppleExtensions.ToSKColor(CoreGraphics.CGColor)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:CoreImage.CIColor" />
      </Targets>
      <Member MemberName="ToSKColor">
        <MemberSignature Language="C#" Value="public static SkiaSharp.SKColor ToSKColor (this CoreImage.CIColor color);" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype SkiaSharp.SKColor ToSKColor(class CoreImage.CIColor color) cil managed" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberSignature Language="DocId" Value="M:SkiaSharp.Views.iOS.AppleExtensions.ToSKColor(CoreImage.CIColor)" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType FrameworkAlternate="skiasharp-views-1.60">SkiaSharp.SKColor</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="color" Type="CoreImage.CIColor" Index="0" FrameworkAlternate="skiasharp-views-1.60" RefType="this" />
        </Parameters>
        <Docs>
          <param name="color">The CoreImage color.</param>
          <summary>Converts a CoreImage color into a SkiaSharp color.</summary>
        </Docs>
        <Link Type="SkiaSharp.Views.iOS.AppleExtensions" Member="M:SkiaSharp.Views.iOS.AppleExtensions.ToSKColor(CoreImage.CIColor)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:CoreGraphics.CGColor" />
      </Targets>
      <Member MemberName="ToSKColorF">
        <MemberSignature Language="C#" Value="public static SkiaSharp.SKColorF ToSKColorF (this CoreGraphics.CGColor color);" FrameworkAlternate="skiasharp-views-2.80" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype SkiaSharp.SKColorF ToSKColorF(class CoreGraphics.CGColor color) cil managed" FrameworkAlternate="skiasharp-views-2.80" />
        <MemberSignature Language="DocId" Value="M:SkiaSharp.Views.iOS.AppleExtensions.ToSKColorF(CoreGraphics.CGColor)" FrameworkAlternate="skiasharp-views-2.80" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType FrameworkAlternate="skiasharp-views-2.80">SkiaSharp.SKColorF</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="color" Type="CoreGraphics.CGColor" RefType="this" Index="0" FrameworkAlternate="skiasharp-views-2.80;skiasharp-views-2.88" />
        </Parameters>
        <Docs>
          <param name="color">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="SkiaSharp.Views.iOS.AppleExtensions" Member="M:SkiaSharp.Views.iOS.AppleExtensions.ToSKColorF(CoreGraphics.CGColor)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:CoreImage.CIColor" />
      </Targets>
      <Member MemberName="ToSKColorF">
        <MemberSignature Language="C#" Value="public static SkiaSharp.SKColorF ToSKColorF (this CoreImage.CIColor color);" FrameworkAlternate="skiasharp-views-2.80" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype SkiaSharp.SKColorF ToSKColorF(class CoreImage.CIColor color) cil managed" FrameworkAlternate="skiasharp-views-2.80" />
        <MemberSignature Language="DocId" Value="M:SkiaSharp.Views.iOS.AppleExtensions.ToSKColorF(CoreImage.CIColor)" FrameworkAlternate="skiasharp-views-2.80" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType FrameworkAlternate="skiasharp-views-2.80">SkiaSharp.SKColorF</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="color" Type="CoreImage.CIColor" RefType="this" Index="0" FrameworkAlternate="skiasharp-views-2.80;skiasharp-views-2.88" />
        </Parameters>
        <Docs>
          <param name="color">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="SkiaSharp.Views.iOS.AppleExtensions" Member="M:SkiaSharp.Views.iOS.AppleExtensions.ToSKColorF(CoreImage.CIColor)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Foundation.NSData" />
      </Targets>
      <Member MemberName="ToSKData">
        <MemberSignature Language="C#" Value="public static SkiaSharp.SKData ToSKData (this Foundation.NSData nsData);" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class SkiaSharp.SKData ToSKData(class Foundation.NSData nsData) cil managed" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberSignature Language="DocId" Value="M:SkiaSharp.Views.iOS.AppleExtensions.ToSKData(Foundation.NSData)" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType FrameworkAlternate="skiasharp-views-1.60">SkiaSharp.SKData</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="nsData" Type="Foundation.NSData" Index="0" FrameworkAlternate="skiasharp-views-1.60" RefType="this" />
        </Parameters>
        <Docs>
          <param name="nsData">The NSData.</param>
          <summary>Converts a NSData into a SkiaSharp data object.</summary>
        </Docs>
        <Link Type="SkiaSharp.Views.iOS.AppleExtensions" Member="M:SkiaSharp.Views.iOS.AppleExtensions.ToSKData(Foundation.NSData)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:CoreGraphics.CGImage" />
      </Targets>
      <Member MemberName="ToSKImage">
        <MemberSignature Language="C#" Value="public static SkiaSharp.SKImage ToSKImage (this CoreGraphics.CGImage cgImage);" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class SkiaSharp.SKImage ToSKImage(class CoreGraphics.CGImage cgImage) cil managed" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberSignature Language="DocId" Value="M:SkiaSharp.Views.iOS.AppleExtensions.ToSKImage(CoreGraphics.CGImage)" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType FrameworkAlternate="skiasharp-views-1.60">SkiaSharp.SKImage</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="cgImage" Type="CoreGraphics.CGImage" Index="0" FrameworkAlternate="skiasharp-views-1.60" RefType="this" />
        </Parameters>
        <Docs>
          <param name="cgImage">The CoreGraphics image.</param>
          <summary>Converts a CoreGraphics image into a SkiaSharp image.</summary>
        </Docs>
        <Link Type="SkiaSharp.Views.iOS.AppleExtensions" Member="M:SkiaSharp.Views.iOS.AppleExtensions.ToSKImage(CoreGraphics.CGImage)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:CoreImage.CIImage" />
      </Targets>
      <Member MemberName="ToSKImage">
        <MemberSignature Language="C#" Value="public static SkiaSharp.SKImage ToSKImage (this CoreImage.CIImage ciImage);" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class SkiaSharp.SKImage ToSKImage(class CoreImage.CIImage ciImage) cil managed" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberSignature Language="DocId" Value="M:SkiaSharp.Views.iOS.AppleExtensions.ToSKImage(CoreImage.CIImage)" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType FrameworkAlternate="skiasharp-views-1.60">SkiaSharp.SKImage</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="ciImage" Type="CoreImage.CIImage" Index="0" FrameworkAlternate="skiasharp-views-1.60" RefType="this" />
        </Parameters>
        <Docs>
          <param name="ciImage">The CoreImage image.</param>
          <summary>Converts a CoreImage image into a SkiaSharp image.</summary>
        </Docs>
        <Link Type="SkiaSharp.Views.iOS.AppleExtensions" Member="M:SkiaSharp.Views.iOS.AppleExtensions.ToSKImage(CoreImage.CIImage)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:CoreGraphics.CGImage" />
      </Targets>
      <Member MemberName="ToSKPixmap">
        <MemberSignature Language="C#" Value="public static void ToSKPixmap (this CoreGraphics.CGImage cgImage, SkiaSharp.SKPixmap pixmap);" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ToSKPixmap(class CoreGraphics.CGImage cgImage, class SkiaSharp.SKPixmap pixmap) cil managed" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberSignature Language="DocId" Value="M:SkiaSharp.Views.iOS.AppleExtensions.ToSKPixmap(CoreGraphics.CGImage,SkiaSharp.SKPixmap)" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType FrameworkAlternate="skiasharp-views-1.60">System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="cgImage" Type="CoreGraphics.CGImage" Index="0" FrameworkAlternate="skiasharp-views-1.60" RefType="this" />
          <Parameter Name="pixmap" Type="SkiaSharp.SKPixmap" Index="1" FrameworkAlternate="skiasharp-views-1.60" />
        </Parameters>
        <Docs>
          <param name="cgImage">The CoreGraphics image.</param>
          <param name="pixmap">The SkiaSharp pixmap to hold the copy of the image data.</param>
          <summary>Converts a CoreGraphics image into a SkiaSharp pixmap.</summary>
        </Docs>
        <Link Type="SkiaSharp.Views.iOS.AppleExtensions" Member="M:SkiaSharp.Views.iOS.AppleExtensions.ToSKPixmap(CoreGraphics.CGImage,SkiaSharp.SKPixmap)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:CoreImage.CIImage" />
      </Targets>
      <Member MemberName="ToSKPixmap">
        <MemberSignature Language="C#" Value="public static void ToSKPixmap (this CoreImage.CIImage ciImage, SkiaSharp.SKPixmap pixmap);" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ToSKPixmap(class CoreImage.CIImage ciImage, class SkiaSharp.SKPixmap pixmap) cil managed" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberSignature Language="DocId" Value="M:SkiaSharp.Views.iOS.AppleExtensions.ToSKPixmap(CoreImage.CIImage,SkiaSharp.SKPixmap)" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType FrameworkAlternate="skiasharp-views-1.60">System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="ciImage" Type="CoreImage.CIImage" Index="0" FrameworkAlternate="skiasharp-views-1.60" RefType="this" />
          <Parameter Name="pixmap" Type="SkiaSharp.SKPixmap" Index="1" FrameworkAlternate="skiasharp-views-1.60" />
        </Parameters>
        <Docs>
          <param name="ciImage">The CoreImage image.</param>
          <param name="pixmap">The SkiaSharp pixmap to hold the copy of the image data.</param>
          <summary>Converts a CoreImage image into a SkiaSharp pixmap.</summary>
        </Docs>
        <Link Type="SkiaSharp.Views.iOS.AppleExtensions" Member="M:SkiaSharp.Views.iOS.AppleExtensions.ToSKPixmap(CoreImage.CIImage,SkiaSharp.SKPixmap)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:CoreGraphics.CGPoint" />
      </Targets>
      <Member MemberName="ToSKPoint">
        <MemberSignature Language="C#" Value="public static SkiaSharp.SKPoint ToSKPoint (this CoreGraphics.CGPoint point);" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype SkiaSharp.SKPoint ToSKPoint(valuetype CoreGraphics.CGPoint point) cil managed" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberSignature Language="DocId" Value="M:SkiaSharp.Views.iOS.AppleExtensions.ToSKPoint(CoreGraphics.CGPoint)" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType FrameworkAlternate="skiasharp-views-1.60">SkiaSharp.SKPoint</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="point" Type="CoreGraphics.CGPoint" Index="0" FrameworkAlternate="skiasharp-views-1.60" RefType="this" />
        </Parameters>
        <Docs>
          <param name="point">The CoreGraphics point.</param>
          <summary>Converts a CoreGraphics point into a SkiaSharp point.</summary>
        </Docs>
        <Link Type="SkiaSharp.Views.iOS.AppleExtensions" Member="M:SkiaSharp.Views.iOS.AppleExtensions.ToSKPoint(CoreGraphics.CGPoint)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:CoreGraphics.CGRect" />
      </Targets>
      <Member MemberName="ToSKRect">
        <MemberSignature Language="C#" Value="public static SkiaSharp.SKRect ToSKRect (this CoreGraphics.CGRect rect);" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype SkiaSharp.SKRect ToSKRect(valuetype CoreGraphics.CGRect rect) cil managed" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberSignature Language="DocId" Value="M:SkiaSharp.Views.iOS.AppleExtensions.ToSKRect(CoreGraphics.CGRect)" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType FrameworkAlternate="skiasharp-views-1.60">SkiaSharp.SKRect</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="rect" Type="CoreGraphics.CGRect" Index="0" FrameworkAlternate="skiasharp-views-1.60" RefType="this" />
        </Parameters>
        <Docs>
          <param name="rect">The CoreGraphics rectangle.</param>
          <summary>Converts a CoreGraphics rectangle into a SkiaSharp rectangle.</summary>
        </Docs>
        <Link Type="SkiaSharp.Views.iOS.AppleExtensions" Member="M:SkiaSharp.Views.iOS.AppleExtensions.ToSKRect(CoreGraphics.CGRect)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:CoreGraphics.CGSize" />
      </Targets>
      <Member MemberName="ToSKSize">
        <MemberSignature Language="C#" Value="public static SkiaSharp.SKSize ToSKSize (this CoreGraphics.CGSize size);" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype SkiaSharp.SKSize ToSKSize(valuetype CoreGraphics.CGSize size) cil managed" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberSignature Language="DocId" Value="M:SkiaSharp.Views.iOS.AppleExtensions.ToSKSize(CoreGraphics.CGSize)" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType FrameworkAlternate="skiasharp-views-1.60">SkiaSharp.SKSize</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="size" Type="CoreGraphics.CGSize" Index="0" FrameworkAlternate="skiasharp-views-1.60" RefType="this" />
        </Parameters>
        <Docs>
          <param name="size">The CoreGraphics size.</param>
          <summary>Converts a CoreGraphics size into a SkiaSharp size.</summary>
        </Docs>
        <Link Type="SkiaSharp.Views.iOS.AppleExtensions" Member="M:SkiaSharp.Views.iOS.AppleExtensions.ToSKSize(CoreGraphics.CGSize)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:SkiaSharp.SKPoint" />
      </Targets>
      <Member MemberName="ToDrawingPoint">
        <MemberSignature Language="C#" Value="public static System.Drawing.PointF ToDrawingPoint (this SkiaSharp.SKPoint point);" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Drawing.PointF ToDrawingPoint(valuetype SkiaSharp.SKPoint point) cil managed" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberSignature Language="DocId" Value="M:SkiaSharp.Views.iOS.Extensions.ToDrawingPoint(SkiaSharp.SKPoint)" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType FrameworkAlternate="skiasharp-views-1.60">System.Drawing.PointF</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="point" Type="SkiaSharp.SKPoint" Index="0" FrameworkAlternate="skiasharp-views-1.60" RefType="this" />
        </Parameters>
        <Docs>
          <param name="point">The SkiaSharp point.</param>
          <summary>Converts a SkiaSharp point into a System.Drawing point.</summary>
        </Docs>
        <Link Type="SkiaSharp.Views.iOS.Extensions" Member="M:SkiaSharp.Views.iOS.Extensions.ToDrawingPoint(SkiaSharp.SKPoint)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:SkiaSharp.SKPointI" />
      </Targets>
      <Member MemberName="ToDrawingPoint">
        <MemberSignature Language="C#" Value="public static System.Drawing.Point ToDrawingPoint (this SkiaSharp.SKPointI point);" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Drawing.Point ToDrawingPoint(valuetype SkiaSharp.SKPointI point) cil managed" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberSignature Language="DocId" Value="M:SkiaSharp.Views.iOS.Extensions.ToDrawingPoint(SkiaSharp.SKPointI)" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType FrameworkAlternate="skiasharp-views-1.60">System.Drawing.Point</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="point" Type="SkiaSharp.SKPointI" Index="0" FrameworkAlternate="skiasharp-views-1.60" RefType="this" />
        </Parameters>
        <Docs>
          <param name="point">The SkiaSharp point.</param>
          <summary>Converts a SkiaSharp point into a System.Drawing point.</summary>
        </Docs>
        <Link Type="SkiaSharp.Views.iOS.Extensions" Member="M:SkiaSharp.Views.iOS.Extensions.ToDrawingPoint(SkiaSharp.SKPointI)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:SkiaSharp.SKRect" />
      </Targets>
      <Member MemberName="ToDrawingRect">
        <MemberSignature Language="C#" Value="public static System.Drawing.RectangleF ToDrawingRect (this SkiaSharp.SKRect rect);" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Drawing.RectangleF ToDrawingRect(valuetype SkiaSharp.SKRect rect) cil managed" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberSignature Language="DocId" Value="M:SkiaSharp.Views.iOS.Extensions.ToDrawingRect(SkiaSharp.SKRect)" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType FrameworkAlternate="skiasharp-views-1.60">System.Drawing.RectangleF</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="rect" Type="SkiaSharp.SKRect" Index="0" FrameworkAlternate="skiasharp-views-1.60" RefType="this" />
        </Parameters>
        <Docs>
          <param name="rect">The SkiaSharp rectangle.</param>
          <summary>Converts a SkiaSharp rectangle into a System.Drawing rectangle.</summary>
        </Docs>
        <Link Type="SkiaSharp.Views.iOS.Extensions" Member="M:SkiaSharp.Views.iOS.Extensions.ToDrawingRect(SkiaSharp.SKRect)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:SkiaSharp.SKRectI" />
      </Targets>
      <Member MemberName="ToDrawingRect">
        <MemberSignature Language="C#" Value="public static System.Drawing.Rectangle ToDrawingRect (this SkiaSharp.SKRectI rect);" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Drawing.Rectangle ToDrawingRect(valuetype SkiaSharp.SKRectI rect) cil managed" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberSignature Language="DocId" Value="M:SkiaSharp.Views.iOS.Extensions.ToDrawingRect(SkiaSharp.SKRectI)" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType FrameworkAlternate="skiasharp-views-1.60">System.Drawing.Rectangle</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="rect" Type="SkiaSharp.SKRectI" Index="0" FrameworkAlternate="skiasharp-views-1.60" RefType="this" />
        </Parameters>
        <Docs>
          <param name="rect">The SkiaSharp rectangle.</param>
          <summary>Converts a SkiaSharp rectangle into a System.Drawing rectangle.</summary>
        </Docs>
        <Link Type="SkiaSharp.Views.iOS.Extensions" Member="M:SkiaSharp.Views.iOS.Extensions.ToDrawingRect(SkiaSharp.SKRectI)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:SkiaSharp.SKSize" />
      </Targets>
      <Member MemberName="ToDrawingSize">
        <MemberSignature Language="C#" Value="public static System.Drawing.SizeF ToDrawingSize (this SkiaSharp.SKSize size);" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Drawing.SizeF ToDrawingSize(valuetype SkiaSharp.SKSize size) cil managed" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberSignature Language="DocId" Value="M:SkiaSharp.Views.iOS.Extensions.ToDrawingSize(SkiaSharp.SKSize)" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType FrameworkAlternate="skiasharp-views-1.60">System.Drawing.SizeF</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="size" Type="SkiaSharp.SKSize" Index="0" FrameworkAlternate="skiasharp-views-1.60" RefType="this" />
        </Parameters>
        <Docs>
          <param name="size">The SkiaSharp size.</param>
          <summary>Converts a SkiaSharp size into a System.Drawing size.</summary>
        </Docs>
        <Link Type="SkiaSharp.Views.iOS.Extensions" Member="M:SkiaSharp.Views.iOS.Extensions.ToDrawingSize(SkiaSharp.SKSize)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:SkiaSharp.SKSizeI" />
      </Targets>
      <Member MemberName="ToDrawingSize">
        <MemberSignature Language="C#" Value="public static System.Drawing.Size ToDrawingSize (this SkiaSharp.SKSizeI size);" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Drawing.Size ToDrawingSize(valuetype SkiaSharp.SKSizeI size) cil managed" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberSignature Language="DocId" Value="M:SkiaSharp.Views.iOS.Extensions.ToDrawingSize(SkiaSharp.SKSizeI)" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType FrameworkAlternate="skiasharp-views-1.60">System.Drawing.Size</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="size" Type="SkiaSharp.SKSizeI" Index="0" FrameworkAlternate="skiasharp-views-1.60" RefType="this" />
        </Parameters>
        <Docs>
          <param name="size">The SkiaSharp size.</param>
          <summary>Converts a SkiaSharp size into a System.Drawing size.</summary>
        </Docs>
        <Link Type="SkiaSharp.Views.iOS.Extensions" Member="M:SkiaSharp.Views.iOS.Extensions.ToDrawingSize(SkiaSharp.SKSizeI)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.Drawing.Point" />
      </Targets>
      <Member MemberName="ToSKPoint">
        <MemberSignature Language="C#" Value="public static SkiaSharp.SKPointI ToSKPoint (this System.Drawing.Point point);" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype SkiaSharp.SKPointI ToSKPoint(valuetype System.Drawing.Point point) cil managed" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberSignature Language="DocId" Value="M:SkiaSharp.Views.iOS.Extensions.ToSKPoint(System.Drawing.Point)" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType FrameworkAlternate="skiasharp-views-1.60">SkiaSharp.SKPointI</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="point" Type="System.Drawing.Point" Index="0" FrameworkAlternate="skiasharp-views-1.60" RefType="this" />
        </Parameters>
        <Docs>
          <param name="point">The System.Drawing point.</param>
          <summary>Converts a System.Drawing point into a SkiaSharp point.</summary>
        </Docs>
        <Link Type="SkiaSharp.Views.iOS.Extensions" Member="M:SkiaSharp.Views.iOS.Extensions.ToSKPoint(System.Drawing.Point)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.Drawing.PointF" />
      </Targets>
      <Member MemberName="ToSKPoint">
        <MemberSignature Language="C#" Value="public static SkiaSharp.SKPoint ToSKPoint (this System.Drawing.PointF point);" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype SkiaSharp.SKPoint ToSKPoint(valuetype System.Drawing.PointF point) cil managed" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberSignature Language="DocId" Value="M:SkiaSharp.Views.iOS.Extensions.ToSKPoint(System.Drawing.PointF)" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType FrameworkAlternate="skiasharp-views-1.60">SkiaSharp.SKPoint</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="point" Type="System.Drawing.PointF" Index="0" FrameworkAlternate="skiasharp-views-1.60" RefType="this" />
        </Parameters>
        <Docs>
          <param name="point">The System.Drawing point.</param>
          <summary>Converts a System.Drawing point into a SkiaSharp point.</summary>
        </Docs>
        <Link Type="SkiaSharp.Views.iOS.Extensions" Member="M:SkiaSharp.Views.iOS.Extensions.ToSKPoint(System.Drawing.PointF)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.Drawing.Rectangle" />
      </Targets>
      <Member MemberName="ToSKRect">
        <MemberSignature Language="C#" Value="public static SkiaSharp.SKRectI ToSKRect (this System.Drawing.Rectangle rect);" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype SkiaSharp.SKRectI ToSKRect(valuetype System.Drawing.Rectangle rect) cil managed" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberSignature Language="DocId" Value="M:SkiaSharp.Views.iOS.Extensions.ToSKRect(System.Drawing.Rectangle)" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType FrameworkAlternate="skiasharp-views-1.60">SkiaSharp.SKRectI</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="rect" Type="System.Drawing.Rectangle" Index="0" FrameworkAlternate="skiasharp-views-1.60" RefType="this" />
        </Parameters>
        <Docs>
          <param name="rect">The System.Drawing rectangle.</param>
          <summary>Converts a System.Drawing rectangle into a SkiaSharp rectangle.</summary>
        </Docs>
        <Link Type="SkiaSharp.Views.iOS.Extensions" Member="M:SkiaSharp.Views.iOS.Extensions.ToSKRect(System.Drawing.Rectangle)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.Drawing.RectangleF" />
      </Targets>
      <Member MemberName="ToSKRect">
        <MemberSignature Language="C#" Value="public static SkiaSharp.SKRect ToSKRect (this System.Drawing.RectangleF rect);" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype SkiaSharp.SKRect ToSKRect(valuetype System.Drawing.RectangleF rect) cil managed" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberSignature Language="DocId" Value="M:SkiaSharp.Views.iOS.Extensions.ToSKRect(System.Drawing.RectangleF)" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType FrameworkAlternate="skiasharp-views-1.60">SkiaSharp.SKRect</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="rect" Type="System.Drawing.RectangleF" Index="0" FrameworkAlternate="skiasharp-views-1.60" RefType="this" />
        </Parameters>
        <Docs>
          <param name="rect">The System.Drawing rectangle.</param>
          <summary>Converts a System.Drawing rectangle into a SkiaSharp rectangle.</summary>
        </Docs>
        <Link Type="SkiaSharp.Views.iOS.Extensions" Member="M:SkiaSharp.Views.iOS.Extensions.ToSKRect(System.Drawing.RectangleF)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.Drawing.Size" />
      </Targets>
      <Member MemberName="ToSKSize">
        <MemberSignature Language="C#" Value="public static SkiaSharp.SKSizeI ToSKSize (this System.Drawing.Size size);" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype SkiaSharp.SKSizeI ToSKSize(valuetype System.Drawing.Size size) cil managed" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberSignature Language="DocId" Value="M:SkiaSharp.Views.iOS.Extensions.ToSKSize(System.Drawing.Size)" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType FrameworkAlternate="skiasharp-views-1.60">SkiaSharp.SKSizeI</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="size" Type="System.Drawing.Size" Index="0" FrameworkAlternate="skiasharp-views-1.60" RefType="this" />
        </Parameters>
        <Docs>
          <param name="size">The System.Drawing size.</param>
          <summary>Converts a System.Drawing size into a SkiaSharp size.</summary>
        </Docs>
        <Link Type="SkiaSharp.Views.iOS.Extensions" Member="M:SkiaSharp.Views.iOS.Extensions.ToSKSize(System.Drawing.Size)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.Drawing.SizeF" />
      </Targets>
      <Member MemberName="ToSKSize">
        <MemberSignature Language="C#" Value="public static SkiaSharp.SKSize ToSKSize (this System.Drawing.SizeF size);" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype SkiaSharp.SKSize ToSKSize(valuetype System.Drawing.SizeF size) cil managed" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberSignature Language="DocId" Value="M:SkiaSharp.Views.iOS.Extensions.ToSKSize(System.Drawing.SizeF)" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType FrameworkAlternate="skiasharp-views-1.60">SkiaSharp.SKSize</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="size" Type="System.Drawing.SizeF" Index="0" FrameworkAlternate="skiasharp-views-1.60" RefType="this" />
        </Parameters>
        <Docs>
          <param name="size">The System.Drawing size.</param>
          <summary>Converts a System.Drawing size into a SkiaSharp size.</summary>
        </Docs>
        <Link Type="SkiaSharp.Views.iOS.Extensions" Member="M:SkiaSharp.Views.iOS.Extensions.ToSKSize(System.Drawing.SizeF)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:UIKit.UIImage" />
      </Targets>
      <Member MemberName="ToSKBitmap">
        <MemberSignature Language="C#" Value="public static SkiaSharp.SKBitmap ToSKBitmap (this UIKit.UIImage uiImage);" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class SkiaSharp.SKBitmap ToSKBitmap(class UIKit.UIImage uiImage) cil managed" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberSignature Language="DocId" Value="M:SkiaSharp.Views.iOS.iOSExtensions.ToSKBitmap(UIKit.UIImage)" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType FrameworkAlternate="skiasharp-views-1.60">SkiaSharp.SKBitmap</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="uiImage" Type="UIKit.UIImage" Index="0" FrameworkAlternate="skiasharp-views-1.60" RefType="this" />
        </Parameters>
        <Docs>
          <param name="uiImage">The UIKit image.</param>
          <summary>Converts a UIKit image into a SkiaSharp bitmap.</summary>
        </Docs>
        <Link Type="SkiaSharp.Views.iOS.iOSExtensions" Member="M:SkiaSharp.Views.iOS.iOSExtensions.ToSKBitmap(UIKit.UIImage)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:UIKit.UIColor" />
      </Targets>
      <Member MemberName="ToSKColor">
        <MemberSignature Language="C#" Value="public static SkiaSharp.SKColor ToSKColor (this UIKit.UIColor color);" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype SkiaSharp.SKColor ToSKColor(class UIKit.UIColor color) cil managed" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberSignature Language="DocId" Value="M:SkiaSharp.Views.iOS.iOSExtensions.ToSKColor(UIKit.UIColor)" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType FrameworkAlternate="skiasharp-views-1.60">SkiaSharp.SKColor</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="color" Type="UIKit.UIColor" Index="0" FrameworkAlternate="skiasharp-views-1.60" RefType="this" />
        </Parameters>
        <Docs>
          <param name="color">The UIKit color</param>
          <summary>Converts a UIKit color into a SkiaSharp color.</summary>
        </Docs>
        <Link Type="SkiaSharp.Views.iOS.iOSExtensions" Member="M:SkiaSharp.Views.iOS.iOSExtensions.ToSKColor(UIKit.UIColor)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:UIKit.UIColor" />
      </Targets>
      <Member MemberName="ToSKColorF">
        <MemberSignature Language="C#" Value="public static SkiaSharp.SKColorF ToSKColorF (this UIKit.UIColor color);" FrameworkAlternate="skiasharp-views-2.80" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype SkiaSharp.SKColorF ToSKColorF(class UIKit.UIColor color) cil managed" FrameworkAlternate="skiasharp-views-2.80" />
        <MemberSignature Language="DocId" Value="M:SkiaSharp.Views.iOS.iOSExtensions.ToSKColorF(UIKit.UIColor)" FrameworkAlternate="skiasharp-views-2.80" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType FrameworkAlternate="skiasharp-views-2.80">SkiaSharp.SKColorF</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="color" Type="UIKit.UIColor" RefType="this" Index="0" FrameworkAlternate="skiasharp-views-2.80;skiasharp-views-2.88" />
        </Parameters>
        <Docs>
          <param name="color">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="SkiaSharp.Views.iOS.iOSExtensions" Member="M:SkiaSharp.Views.iOS.iOSExtensions.ToSKColorF(UIKit.UIColor)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:UIKit.UIImage" />
      </Targets>
      <Member MemberName="ToSKImage">
        <MemberSignature Language="C#" Value="public static SkiaSharp.SKImage ToSKImage (this UIKit.UIImage uiImage);" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class SkiaSharp.SKImage ToSKImage(class UIKit.UIImage uiImage) cil managed" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberSignature Language="DocId" Value="M:SkiaSharp.Views.iOS.iOSExtensions.ToSKImage(UIKit.UIImage)" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType FrameworkAlternate="skiasharp-views-1.60">SkiaSharp.SKImage</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="uiImage" Type="UIKit.UIImage" Index="0" FrameworkAlternate="skiasharp-views-1.60" RefType="this" />
        </Parameters>
        <Docs>
          <param name="uiImage">The UIKit image.</param>
          <summary>Converts a UIKit image into a SkiaSharp image.</summary>
        </Docs>
        <Link Type="SkiaSharp.Views.iOS.iOSExtensions" Member="M:SkiaSharp.Views.iOS.iOSExtensions.ToSKImage(UIKit.UIImage)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:UIKit.UIImage" />
      </Targets>
      <Member MemberName="ToSKPixmap">
        <MemberSignature Language="C#" Value="public static bool ToSKPixmap (this UIKit.UIImage uiImage, SkiaSharp.SKPixmap pixmap);" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool ToSKPixmap(class UIKit.UIImage uiImage, class SkiaSharp.SKPixmap pixmap) cil managed" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberSignature Language="DocId" Value="M:SkiaSharp.Views.iOS.iOSExtensions.ToSKPixmap(UIKit.UIImage,SkiaSharp.SKPixmap)" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType FrameworkAlternate="skiasharp-views-1.60">System.Boolean</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="uiImage" Type="UIKit.UIImage" Index="0" FrameworkAlternate="skiasharp-views-1.60" RefType="this" />
          <Parameter Name="pixmap" Type="SkiaSharp.SKPixmap" Index="1" FrameworkAlternate="skiasharp-views-1.60" />
        </Parameters>
        <Docs>
          <param name="uiImage">The UIKit image.</param>
          <param name="pixmap">The SkiaSharp pixmap to hold the copy of the image data.</param>
          <summary>Converts a SkiaSharp pixmap into a UIKit image.</summary>
        </Docs>
        <Link Type="SkiaSharp.Views.iOS.iOSExtensions" Member="M:SkiaSharp.Views.iOS.iOSExtensions.ToSKPixmap(UIKit.UIImage,SkiaSharp.SKPixmap)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:SkiaSharp.SKColor" />
      </Targets>
      <Member MemberName="ToUIColor">
        <MemberSignature Language="C#" Value="public static UIKit.UIColor ToUIColor (this SkiaSharp.SKColor color);" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class UIKit.UIColor ToUIColor(valuetype SkiaSharp.SKColor color) cil managed" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberSignature Language="DocId" Value="M:SkiaSharp.Views.iOS.iOSExtensions.ToUIColor(SkiaSharp.SKColor)" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType FrameworkAlternate="skiasharp-views-1.60">UIKit.UIColor</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="color" Type="SkiaSharp.SKColor" Index="0" FrameworkAlternate="skiasharp-views-1.60" RefType="this" />
        </Parameters>
        <Docs>
          <param name="color">The SkiaSharp color</param>
          <summary>Converts a SkiaSharp color into a UIKit color.</summary>
        </Docs>
        <Link Type="SkiaSharp.Views.iOS.iOSExtensions" Member="M:SkiaSharp.Views.iOS.iOSExtensions.ToUIColor(SkiaSharp.SKColor)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:SkiaSharp.SKColorF" />
      </Targets>
      <Member MemberName="ToUIColor">
        <MemberSignature Language="C#" Value="public static UIKit.UIColor ToUIColor (this SkiaSharp.SKColorF color);" FrameworkAlternate="skiasharp-views-2.80" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class UIKit.UIColor ToUIColor(valuetype SkiaSharp.SKColorF color) cil managed" FrameworkAlternate="skiasharp-views-2.80" />
        <MemberSignature Language="DocId" Value="M:SkiaSharp.Views.iOS.iOSExtensions.ToUIColor(SkiaSharp.SKColorF)" FrameworkAlternate="skiasharp-views-2.80" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType FrameworkAlternate="skiasharp-views-2.80">UIKit.UIColor</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="color" Type="SkiaSharp.SKColorF" RefType="this" Index="0" FrameworkAlternate="skiasharp-views-2.80;skiasharp-views-2.88" />
        </Parameters>
        <Docs>
          <param name="color">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="SkiaSharp.Views.iOS.iOSExtensions" Member="M:SkiaSharp.Views.iOS.iOSExtensions.ToUIColor(SkiaSharp.SKColorF)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:SkiaSharp.SKBitmap" />
      </Targets>
      <Member MemberName="ToUIImage">
        <MemberSignature Language="C#" Value="public static UIKit.UIImage ToUIImage (this SkiaSharp.SKBitmap skiaBitmap);" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class UIKit.UIImage ToUIImage(class SkiaSharp.SKBitmap skiaBitmap) cil managed" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberSignature Language="DocId" Value="M:SkiaSharp.Views.iOS.iOSExtensions.ToUIImage(SkiaSharp.SKBitmap)" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType FrameworkAlternate="skiasharp-views-1.60">UIKit.UIImage</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="skiaBitmap" Type="SkiaSharp.SKBitmap" Index="0" FrameworkAlternate="skiasharp-views-1.60" RefType="this" />
        </Parameters>
        <Docs>
          <param name="skiaBitmap">The SkiaSharp bitmap.</param>
          <summary>Converts a SkiaSharp bitmap into a UIKit image.</summary>
        </Docs>
        <Link Type="SkiaSharp.Views.iOS.iOSExtensions" Member="M:SkiaSharp.Views.iOS.iOSExtensions.ToUIImage(SkiaSharp.SKBitmap)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:SkiaSharp.SKBitmap" />
      </Targets>
      <Member MemberName="ToUIImage">
        <MemberSignature Language="C#" Value="public static UIKit.UIImage ToUIImage (this SkiaSharp.SKBitmap skiaBitmap, nfloat scale, UIKit.UIImageOrientation orientation);" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class UIKit.UIImage ToUIImage(class SkiaSharp.SKBitmap skiaBitmap, valuetype System.nfloat scale, valuetype UIKit.UIImageOrientation orientation) cil managed" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberSignature Language="DocId" Value="M:SkiaSharp.Views.iOS.iOSExtensions.ToUIImage(SkiaSharp.SKBitmap,System.nfloat,UIKit.UIImageOrientation)" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType FrameworkAlternate="skiasharp-views-1.60">UIKit.UIImage</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="skiaBitmap" Type="SkiaSharp.SKBitmap" Index="0" FrameworkAlternate="skiasharp-views-1.60" RefType="this" />
          <Parameter Name="scale" Type="System.nfloat" Index="1" FrameworkAlternate="skiasharp-views-1.60" />
          <Parameter Name="orientation" Type="UIKit.UIImageOrientation" Index="2" FrameworkAlternate="skiasharp-views-1.60" />
        </Parameters>
        <Docs>
          <param name="skiaBitmap">The SkiaSharp bitmap.</param>
          <param name="scale">The scale factor for the image. A factor of 1.0 is the original size of the image.</param>
          <param name="orientation">The rotation that is to be applied to the image.</param>
          <summary>Converts a SkiaSharp bitmap into a UIKit image.</summary>
        </Docs>
        <Link Type="SkiaSharp.Views.iOS.iOSExtensions" Member="M:SkiaSharp.Views.iOS.iOSExtensions.ToUIImage(SkiaSharp.SKBitmap,System.nfloat,UIKit.UIImageOrientation)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:SkiaSharp.SKImage" />
      </Targets>
      <Member MemberName="ToUIImage">
        <MemberSignature Language="C#" Value="public static UIKit.UIImage ToUIImage (this SkiaSharp.SKImage skiaImage);" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class UIKit.UIImage ToUIImage(class SkiaSharp.SKImage skiaImage) cil managed" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberSignature Language="DocId" Value="M:SkiaSharp.Views.iOS.iOSExtensions.ToUIImage(SkiaSharp.SKImage)" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType FrameworkAlternate="skiasharp-views-1.60">UIKit.UIImage</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="skiaImage" Type="SkiaSharp.SKImage" Index="0" FrameworkAlternate="skiasharp-views-1.60" RefType="this" />
        </Parameters>
        <Docs>
          <param name="skiaImage">The SkiaSharp image.</param>
          <summary>Converts a SkiaSharp image into a UIKit image.</summary>
        </Docs>
        <Link Type="SkiaSharp.Views.iOS.iOSExtensions" Member="M:SkiaSharp.Views.iOS.iOSExtensions.ToUIImage(SkiaSharp.SKImage)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:SkiaSharp.SKPicture" />
      </Targets>
      <Member MemberName="ToUIImage">
        <MemberSignature Language="C#" Value="public static UIKit.UIImage ToUIImage (this SkiaSharp.SKPicture skiaPicture, SkiaSharp.SKSizeI dimensions);" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class UIKit.UIImage ToUIImage(class SkiaSharp.SKPicture skiaPicture, valuetype SkiaSharp.SKSizeI dimensions) cil managed" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberSignature Language="DocId" Value="M:SkiaSharp.Views.iOS.iOSExtensions.ToUIImage(SkiaSharp.SKPicture,SkiaSharp.SKSizeI)" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType FrameworkAlternate="skiasharp-views-1.60">UIKit.UIImage</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="skiaPicture" Type="SkiaSharp.SKPicture" Index="0" FrameworkAlternate="skiasharp-views-1.60" RefType="this" />
          <Parameter Name="dimensions" Type="SkiaSharp.SKSizeI" Index="1" FrameworkAlternate="skiasharp-views-1.60" />
        </Parameters>
        <Docs>
          <param name="skiaPicture">The SkiaSharp picture.</param>
          <param name="dimensions">The dimensions of the picture.</param>
          <summary>Converts a SkiaSharp picture into a UIKit image.</summary>
        </Docs>
        <Link Type="SkiaSharp.Views.iOS.iOSExtensions" Member="M:SkiaSharp.Views.iOS.iOSExtensions.ToUIImage(SkiaSharp.SKPicture,SkiaSharp.SKSizeI)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:SkiaSharp.SKPicture" />
      </Targets>
      <Member MemberName="ToUIImage">
        <MemberSignature Language="C#" Value="public static UIKit.UIImage ToUIImage (this SkiaSharp.SKPicture skiaPicture, SkiaSharp.SKSizeI dimensions, nfloat scale, UIKit.UIImageOrientation orientation);" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class UIKit.UIImage ToUIImage(class SkiaSharp.SKPicture skiaPicture, valuetype SkiaSharp.SKSizeI dimensions, valuetype System.nfloat scale, valuetype UIKit.UIImageOrientation orientation) cil managed" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberSignature Language="DocId" Value="M:SkiaSharp.Views.iOS.iOSExtensions.ToUIImage(SkiaSharp.SKPicture,SkiaSharp.SKSizeI,System.nfloat,UIKit.UIImageOrientation)" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType FrameworkAlternate="skiasharp-views-1.60">UIKit.UIImage</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="skiaPicture" Type="SkiaSharp.SKPicture" Index="0" FrameworkAlternate="skiasharp-views-1.60" RefType="this" />
          <Parameter Name="dimensions" Type="SkiaSharp.SKSizeI" Index="1" FrameworkAlternate="skiasharp-views-1.60" />
          <Parameter Name="scale" Type="System.nfloat" Index="2" FrameworkAlternate="skiasharp-views-1.60" />
          <Parameter Name="orientation" Type="UIKit.UIImageOrientation" Index="3" FrameworkAlternate="skiasharp-views-1.60" />
        </Parameters>
        <Docs>
          <param name="skiaPicture">The SkiaSharp picture.</param>
          <param name="dimensions">The dimensions of the picture.</param>
          <param name="scale">The scale factor for the image. A factor of 1.0 is the original size of the image.</param>
          <param name="orientation">The rotation that is to be applied to the image.</param>
          <summary>Converts a SkiaSharp picture into a UIKit image.</summary>
        </Docs>
        <Link Type="SkiaSharp.Views.iOS.iOSExtensions" Member="M:SkiaSharp.Views.iOS.iOSExtensions.ToUIImage(SkiaSharp.SKPicture,SkiaSharp.SKSizeI,System.nfloat,UIKit.UIImageOrientation)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:SkiaSharp.SKPixmap" />
      </Targets>
      <Member MemberName="ToUIImage">
        <MemberSignature Language="C#" Value="public static UIKit.UIImage ToUIImage (this SkiaSharp.SKPixmap skiaPixmap);" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class UIKit.UIImage ToUIImage(class SkiaSharp.SKPixmap skiaPixmap) cil managed" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberSignature Language="DocId" Value="M:SkiaSharp.Views.iOS.iOSExtensions.ToUIImage(SkiaSharp.SKPixmap)" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType FrameworkAlternate="skiasharp-views-1.60">UIKit.UIImage</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="skiaPixmap" Type="SkiaSharp.SKPixmap" Index="0" FrameworkAlternate="skiasharp-views-1.60" RefType="this" />
        </Parameters>
        <Docs>
          <param name="skiaPixmap">The SkiaSharp pixmap.</param>
          <summary>Converts a SkiaSharp pixmap into a UIKit image.</summary>
        </Docs>
        <Link Type="SkiaSharp.Views.iOS.iOSExtensions" Member="M:SkiaSharp.Views.iOS.iOSExtensions.ToUIImage(SkiaSharp.SKPixmap)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:SkiaSharp.SKPixmap" />
      </Targets>
      <Member MemberName="ToUIImage">
        <MemberSignature Language="C#" Value="public static UIKit.UIImage ToUIImage (this SkiaSharp.SKPixmap skiaPixmap, nfloat scale, UIKit.UIImageOrientation orientation);" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class UIKit.UIImage ToUIImage(class SkiaSharp.SKPixmap skiaPixmap, valuetype System.nfloat scale, valuetype UIKit.UIImageOrientation orientation) cil managed" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberSignature Language="DocId" Value="M:SkiaSharp.Views.iOS.iOSExtensions.ToUIImage(SkiaSharp.SKPixmap,System.nfloat,UIKit.UIImageOrientation)" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType FrameworkAlternate="skiasharp-views-1.60">UIKit.UIImage</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="skiaPixmap" Type="SkiaSharp.SKPixmap" Index="0" FrameworkAlternate="skiasharp-views-1.60" RefType="this" />
          <Parameter Name="scale" Type="System.nfloat" Index="1" FrameworkAlternate="skiasharp-views-1.60" />
          <Parameter Name="orientation" Type="UIKit.UIImageOrientation" Index="2" FrameworkAlternate="skiasharp-views-1.60" />
        </Parameters>
        <Docs>
          <param name="skiaPixmap">The SkiaSharp pixmap.</param>
          <param name="scale">The scale factor for the image. A factor of 1.0 is the original size of the image.</param>
          <param name="orientation">The rotation that is to be applied to the image.</param>
          <summary>Converts a SkiaSharp pixmap into a UIKit image.</summary>
        </Docs>
        <Link Type="SkiaSharp.Views.iOS.iOSExtensions" Member="M:SkiaSharp.Views.iOS.iOSExtensions.ToUIImage(SkiaSharp.SKPixmap,System.nfloat,UIKit.UIImageOrientation)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:SkiaSharp.SKColor" />
      </Targets>
      <Member MemberName="ToCGColor">
        <MemberSignature Language="C#" Value="public static CoreGraphics.CGColor ToCGColor (this SkiaSharp.SKColor color);" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class CoreGraphics.CGColor ToCGColor(valuetype SkiaSharp.SKColor color) cil managed" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberSignature Language="DocId" Value="M:SkiaSharp.Views.Mac.AppleExtensions.ToCGColor(SkiaSharp.SKColor)" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType FrameworkAlternate="skiasharp-views-1.60">CoreGraphics.CGColor</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="color" Type="SkiaSharp.SKColor" Index="0" FrameworkAlternate="skiasharp-views-1.60" RefType="this" />
        </Parameters>
        <Docs>
          <param name="color">The SkiaSharp color.</param>
          <summary>Converts a SkiaSharp color into a CoreGraphics color.</summary>
        </Docs>
        <Link Type="SkiaSharp.Views.Mac.AppleExtensions" Member="M:SkiaSharp.Views.Mac.AppleExtensions.ToCGColor(SkiaSharp.SKColor)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:SkiaSharp.SKColorF" />
      </Targets>
      <Member MemberName="ToCGColor">
        <MemberSignature Language="C#" Value="public static CoreGraphics.CGColor ToCGColor (this SkiaSharp.SKColorF color);" FrameworkAlternate="skiasharp-views-2.80" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class CoreGraphics.CGColor ToCGColor(valuetype SkiaSharp.SKColorF color) cil managed" FrameworkAlternate="skiasharp-views-2.80" />
        <MemberSignature Language="DocId" Value="M:SkiaSharp.Views.Mac.AppleExtensions.ToCGColor(SkiaSharp.SKColorF)" FrameworkAlternate="skiasharp-views-2.80" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType FrameworkAlternate="skiasharp-views-2.80">CoreGraphics.CGColor</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="color" Type="SkiaSharp.SKColorF" RefType="this" Index="0" FrameworkAlternate="skiasharp-views-2.80;skiasharp-views-2.88" />
        </Parameters>
        <Docs>
          <param name="color">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="SkiaSharp.Views.Mac.AppleExtensions" Member="M:SkiaSharp.Views.Mac.AppleExtensions.ToCGColor(SkiaSharp.SKColorF)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:SkiaSharp.SKBitmap" />
      </Targets>
      <Member MemberName="ToCGImage">
        <MemberSignature Language="C#" Value="public static CoreGraphics.CGImage ToCGImage (this SkiaSharp.SKBitmap skiaBitmap);" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class CoreGraphics.CGImage ToCGImage(class SkiaSharp.SKBitmap skiaBitmap) cil managed" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberSignature Language="DocId" Value="M:SkiaSharp.Views.Mac.AppleExtensions.ToCGImage(SkiaSharp.SKBitmap)" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType FrameworkAlternate="skiasharp-views-1.60">CoreGraphics.CGImage</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="skiaBitmap" Type="SkiaSharp.SKBitmap" Index="0" FrameworkAlternate="skiasharp-views-1.60" RefType="this" />
        </Parameters>
        <Docs>
          <param name="skiaBitmap">The SkiaSharp bitmap.</param>
          <summary>Converts a SkiaSharp bitmap into a CoreGraphics image.</summary>
        </Docs>
        <Link Type="SkiaSharp.Views.Mac.AppleExtensions" Member="M:SkiaSharp.Views.Mac.AppleExtensions.ToCGImage(SkiaSharp.SKBitmap)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:SkiaSharp.SKImage" />
      </Targets>
      <Member MemberName="ToCGImage">
        <MemberSignature Language="C#" Value="public static CoreGraphics.CGImage ToCGImage (this SkiaSharp.SKImage skiaImage);" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class CoreGraphics.CGImage ToCGImage(class SkiaSharp.SKImage skiaImage) cil managed" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberSignature Language="DocId" Value="M:SkiaSharp.Views.Mac.AppleExtensions.ToCGImage(SkiaSharp.SKImage)" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType FrameworkAlternate="skiasharp-views-1.60">CoreGraphics.CGImage</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="skiaImage" Type="SkiaSharp.SKImage" Index="0" FrameworkAlternate="skiasharp-views-1.60" RefType="this" />
        </Parameters>
        <Docs>
          <param name="skiaImage">The SkiaSharp image.</param>
          <summary>Converts a SkiaSharp image into a CoreGraphics image.</summary>
        </Docs>
        <Link Type="SkiaSharp.Views.Mac.AppleExtensions" Member="M:SkiaSharp.Views.Mac.AppleExtensions.ToCGImage(SkiaSharp.SKImage)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:SkiaSharp.SKPicture" />
      </Targets>
      <Member MemberName="ToCGImage">
        <MemberSignature Language="C#" Value="public static CoreGraphics.CGImage ToCGImage (this SkiaSharp.SKPicture skiaPicture, SkiaSharp.SKSizeI dimensions);" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class CoreGraphics.CGImage ToCGImage(class SkiaSharp.SKPicture skiaPicture, valuetype SkiaSharp.SKSizeI dimensions) cil managed" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberSignature Language="DocId" Value="M:SkiaSharp.Views.Mac.AppleExtensions.ToCGImage(SkiaSharp.SKPicture,SkiaSharp.SKSizeI)" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType FrameworkAlternate="skiasharp-views-1.60">CoreGraphics.CGImage</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="skiaPicture" Type="SkiaSharp.SKPicture" Index="0" FrameworkAlternate="skiasharp-views-1.60" RefType="this" />
          <Parameter Name="dimensions" Type="SkiaSharp.SKSizeI" Index="1" FrameworkAlternate="skiasharp-views-1.60" />
        </Parameters>
        <Docs>
          <param name="skiaPicture">The SkiaSharp picture.</param>
          <param name="dimensions">The dimensions of the picture.</param>
          <summary>Converts a SkiaSharp picture into a CoreGraphics image.</summary>
        </Docs>
        <Link Type="SkiaSharp.Views.Mac.AppleExtensions" Member="M:SkiaSharp.Views.Mac.AppleExtensions.ToCGImage(SkiaSharp.SKPicture,SkiaSharp.SKSizeI)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:SkiaSharp.SKPixmap" />
      </Targets>
      <Member MemberName="ToCGImage">
        <MemberSignature Language="C#" Value="public static CoreGraphics.CGImage ToCGImage (this SkiaSharp.SKPixmap skiaPixmap);" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class CoreGraphics.CGImage ToCGImage(class SkiaSharp.SKPixmap skiaPixmap) cil managed" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberSignature Language="DocId" Value="M:SkiaSharp.Views.Mac.AppleExtensions.ToCGImage(SkiaSharp.SKPixmap)" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType FrameworkAlternate="skiasharp-views-1.60">CoreGraphics.CGImage</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="skiaPixmap" Type="SkiaSharp.SKPixmap" Index="0" FrameworkAlternate="skiasharp-views-1.60" RefType="this" />
        </Parameters>
        <Docs>
          <param name="skiaPixmap">The SkiaSharp pixmap.</param>
          <summary>Converts a SkiaSharp pixmap into a CoreGraphics image.</summary>
        </Docs>
        <Link Type="SkiaSharp.Views.Mac.AppleExtensions" Member="M:SkiaSharp.Views.Mac.AppleExtensions.ToCGImage(SkiaSharp.SKPixmap)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:SkiaSharp.SKColor" />
      </Targets>
      <Member MemberName="ToCIColor">
        <MemberSignature Language="C#" Value="public static CoreImage.CIColor ToCIColor (this SkiaSharp.SKColor color);" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class CoreImage.CIColor ToCIColor(valuetype SkiaSharp.SKColor color) cil managed" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberSignature Language="DocId" Value="M:SkiaSharp.Views.Mac.AppleExtensions.ToCIColor(SkiaSharp.SKColor)" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType FrameworkAlternate="skiasharp-views-1.60">CoreImage.CIColor</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="color" Type="SkiaSharp.SKColor" Index="0" FrameworkAlternate="skiasharp-views-1.60" RefType="this" />
        </Parameters>
        <Docs>
          <param name="color">The SkiaSharp color.</param>
          <summary>Converts a SkiaSharp color into a CoreImage color.</summary>
        </Docs>
        <Link Type="SkiaSharp.Views.Mac.AppleExtensions" Member="M:SkiaSharp.Views.Mac.AppleExtensions.ToCIColor(SkiaSharp.SKColor)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:SkiaSharp.SKColorF" />
      </Targets>
      <Member MemberName="ToCIColor">
        <MemberSignature Language="C#" Value="public static CoreImage.CIColor ToCIColor (this SkiaSharp.SKColorF color);" FrameworkAlternate="skiasharp-views-2.80" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class CoreImage.CIColor ToCIColor(valuetype SkiaSharp.SKColorF color) cil managed" FrameworkAlternate="skiasharp-views-2.80" />
        <MemberSignature Language="DocId" Value="M:SkiaSharp.Views.Mac.AppleExtensions.ToCIColor(SkiaSharp.SKColorF)" FrameworkAlternate="skiasharp-views-2.80" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType FrameworkAlternate="skiasharp-views-2.80">CoreImage.CIColor</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="color" Type="SkiaSharp.SKColorF" RefType="this" Index="0" FrameworkAlternate="skiasharp-views-2.80;skiasharp-views-2.88" />
        </Parameters>
        <Docs>
          <param name="color">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="SkiaSharp.Views.Mac.AppleExtensions" Member="M:SkiaSharp.Views.Mac.AppleExtensions.ToCIColor(SkiaSharp.SKColorF)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:SkiaSharp.SKBitmap" />
      </Targets>
      <Member MemberName="ToCIImage">
        <MemberSignature Language="C#" Value="public static CoreImage.CIImage ToCIImage (this SkiaSharp.SKBitmap skiaBitmap);" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class CoreImage.CIImage ToCIImage(class SkiaSharp.SKBitmap skiaBitmap) cil managed" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberSignature Language="DocId" Value="M:SkiaSharp.Views.Mac.AppleExtensions.ToCIImage(SkiaSharp.SKBitmap)" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType FrameworkAlternate="skiasharp-views-1.60">CoreImage.CIImage</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="skiaBitmap" Type="SkiaSharp.SKBitmap" Index="0" FrameworkAlternate="skiasharp-views-1.60" RefType="this" />
        </Parameters>
        <Docs>
          <param name="skiaBitmap">The SkiaSharp bitmap.</param>
          <summary>Converts a SkiaSharp bitmap into a CoreImage image.</summary>
        </Docs>
        <Link Type="SkiaSharp.Views.Mac.AppleExtensions" Member="M:SkiaSharp.Views.Mac.AppleExtensions.ToCIImage(SkiaSharp.SKBitmap)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:SkiaSharp.SKImage" />
      </Targets>
      <Member MemberName="ToCIImage">
        <MemberSignature Language="C#" Value="public static CoreImage.CIImage ToCIImage (this SkiaSharp.SKImage skiaImage);" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class CoreImage.CIImage ToCIImage(class SkiaSharp.SKImage skiaImage) cil managed" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberSignature Language="DocId" Value="M:SkiaSharp.Views.Mac.AppleExtensions.ToCIImage(SkiaSharp.SKImage)" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType FrameworkAlternate="skiasharp-views-1.60">CoreImage.CIImage</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="skiaImage" Type="SkiaSharp.SKImage" Index="0" FrameworkAlternate="skiasharp-views-1.60" RefType="this" />
        </Parameters>
        <Docs>
          <param name="skiaImage">The SkiaSharp image.</param>
          <summary>Converts a SkiaSharp image into a CoreImage image.</summary>
        </Docs>
        <Link Type="SkiaSharp.Views.Mac.AppleExtensions" Member="M:SkiaSharp.Views.Mac.AppleExtensions.ToCIImage(SkiaSharp.SKImage)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:SkiaSharp.SKPicture" />
      </Targets>
      <Member MemberName="ToCIImage">
        <MemberSignature Language="C#" Value="public static CoreImage.CIImage ToCIImage (this SkiaSharp.SKPicture skiaPicture, SkiaSharp.SKSizeI dimensions);" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class CoreImage.CIImage ToCIImage(class SkiaSharp.SKPicture skiaPicture, valuetype SkiaSharp.SKSizeI dimensions) cil managed" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberSignature Language="DocId" Value="M:SkiaSharp.Views.Mac.AppleExtensions.ToCIImage(SkiaSharp.SKPicture,SkiaSharp.SKSizeI)" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType FrameworkAlternate="skiasharp-views-1.60">CoreImage.CIImage</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="skiaPicture" Type="SkiaSharp.SKPicture" Index="0" FrameworkAlternate="skiasharp-views-1.60" RefType="this" />
          <Parameter Name="dimensions" Type="SkiaSharp.SKSizeI" Index="1" FrameworkAlternate="skiasharp-views-1.60" />
        </Parameters>
        <Docs>
          <param name="skiaPicture">The SkiaSharp picture.</param>
          <param name="dimensions">The dimensions of the picture.</param>
          <summary>Converts a SkiaSharp picture into a CoreImage image.</summary>
        </Docs>
        <Link Type="SkiaSharp.Views.Mac.AppleExtensions" Member="M:SkiaSharp.Views.Mac.AppleExtensions.ToCIImage(SkiaSharp.SKPicture,SkiaSharp.SKSizeI)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:SkiaSharp.SKPixmap" />
      </Targets>
      <Member MemberName="ToCIImage">
        <MemberSignature Language="C#" Value="public static CoreImage.CIImage ToCIImage (this SkiaSharp.SKPixmap skiaPixmap);" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class CoreImage.CIImage ToCIImage(class SkiaSharp.SKPixmap skiaPixmap) cil managed" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberSignature Language="DocId" Value="M:SkiaSharp.Views.Mac.AppleExtensions.ToCIImage(SkiaSharp.SKPixmap)" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType FrameworkAlternate="skiasharp-views-1.60">CoreImage.CIImage</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="skiaPixmap" Type="SkiaSharp.SKPixmap" Index="0" FrameworkAlternate="skiasharp-views-1.60" RefType="this" />
        </Parameters>
        <Docs>
          <param name="skiaPixmap">The SkiaSharp pixmap.</param>
          <summary>Converts a SkiaSharp pixmap into a CoreImage image.</summary>
        </Docs>
        <Link Type="SkiaSharp.Views.Mac.AppleExtensions" Member="M:SkiaSharp.Views.Mac.AppleExtensions.ToCIImage(SkiaSharp.SKPixmap)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:SkiaSharp.SKData" />
      </Targets>
      <Member MemberName="ToNSData">
        <MemberSignature Language="C#" Value="public static Foundation.NSData ToNSData (this SkiaSharp.SKData skiaData);" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Foundation.NSData ToNSData(class SkiaSharp.SKData skiaData) cil managed" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberSignature Language="DocId" Value="M:SkiaSharp.Views.Mac.AppleExtensions.ToNSData(SkiaSharp.SKData)" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType FrameworkAlternate="skiasharp-views-1.60">Foundation.NSData</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="skiaData" Type="SkiaSharp.SKData" Index="0" FrameworkAlternate="skiasharp-views-1.60" RefType="this" />
        </Parameters>
        <Docs>
          <param name="skiaData">The SkiaSharp data object.</param>
          <summary>Converts a SkiaSharp data object into a NSData.</summary>
        </Docs>
        <Link Type="SkiaSharp.Views.Mac.AppleExtensions" Member="M:SkiaSharp.Views.Mac.AppleExtensions.ToNSData(SkiaSharp.SKData)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:SkiaSharp.SKPoint" />
      </Targets>
      <Member MemberName="ToPoint">
        <MemberSignature Language="C#" Value="public static CoreGraphics.CGPoint ToPoint (this SkiaSharp.SKPoint point);" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype CoreGraphics.CGPoint ToPoint(valuetype SkiaSharp.SKPoint point) cil managed" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberSignature Language="DocId" Value="M:SkiaSharp.Views.Mac.AppleExtensions.ToPoint(SkiaSharp.SKPoint)" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType FrameworkAlternate="skiasharp-views-1.60">CoreGraphics.CGPoint</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="point" Type="SkiaSharp.SKPoint" Index="0" FrameworkAlternate="skiasharp-views-1.60" RefType="this" />
        </Parameters>
        <Docs>
          <param name="point">The SkiaSharp point.</param>
          <summary>Converts a SkiaSharp point into a CoreGraphics point.</summary>
        </Docs>
        <Link Type="SkiaSharp.Views.Mac.AppleExtensions" Member="M:SkiaSharp.Views.Mac.AppleExtensions.ToPoint(SkiaSharp.SKPoint)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:SkiaSharp.SKRect" />
      </Targets>
      <Member MemberName="ToRect">
        <MemberSignature Language="C#" Value="public static CoreGraphics.CGRect ToRect (this SkiaSharp.SKRect rect);" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype CoreGraphics.CGRect ToRect(valuetype SkiaSharp.SKRect rect) cil managed" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberSignature Language="DocId" Value="M:SkiaSharp.Views.Mac.AppleExtensions.ToRect(SkiaSharp.SKRect)" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType FrameworkAlternate="skiasharp-views-1.60">CoreGraphics.CGRect</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="rect" Type="SkiaSharp.SKRect" Index="0" FrameworkAlternate="skiasharp-views-1.60" RefType="this" />
        </Parameters>
        <Docs>
          <param name="rect">The SkiaSharp rectangle.</param>
          <summary>Converts a SkiaSharp rectangle into a CoreGraphics rectangle.</summary>
        </Docs>
        <Link Type="SkiaSharp.Views.Mac.AppleExtensions" Member="M:SkiaSharp.Views.Mac.AppleExtensions.ToRect(SkiaSharp.SKRect)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:SkiaSharp.SKSize" />
      </Targets>
      <Member MemberName="ToSize">
        <MemberSignature Language="C#" Value="public static CoreGraphics.CGSize ToSize (this SkiaSharp.SKSize size);" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype CoreGraphics.CGSize ToSize(valuetype SkiaSharp.SKSize size) cil managed" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberSignature Language="DocId" Value="M:SkiaSharp.Views.Mac.AppleExtensions.ToSize(SkiaSharp.SKSize)" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType FrameworkAlternate="skiasharp-views-1.60">CoreGraphics.CGSize</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="size" Type="SkiaSharp.SKSize" Index="0" FrameworkAlternate="skiasharp-views-1.60" RefType="this" />
        </Parameters>
        <Docs>
          <param name="size">The SkiaSharp size.</param>
          <summary>Converts a SkiaSharp size into a CoreGraphics size.</summary>
        </Docs>
        <Link Type="SkiaSharp.Views.Mac.AppleExtensions" Member="M:SkiaSharp.Views.Mac.AppleExtensions.ToSize(SkiaSharp.SKSize)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:CoreGraphics.CGImage" />
      </Targets>
      <Member MemberName="ToSKBitmap">
        <MemberSignature Language="C#" Value="public static SkiaSharp.SKBitmap ToSKBitmap (this CoreGraphics.CGImage cgImage);" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class SkiaSharp.SKBitmap ToSKBitmap(class CoreGraphics.CGImage cgImage) cil managed" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberSignature Language="DocId" Value="M:SkiaSharp.Views.Mac.AppleExtensions.ToSKBitmap(CoreGraphics.CGImage)" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType FrameworkAlternate="skiasharp-views-1.60">SkiaSharp.SKBitmap</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="cgImage" Type="CoreGraphics.CGImage" Index="0" FrameworkAlternate="skiasharp-views-1.60" RefType="this" />
        </Parameters>
        <Docs>
          <param name="cgImage">The CoreGraphics image.</param>
          <summary>Converts a CoreGraphics image into a SkiaSharp bitmap.</summary>
        </Docs>
        <Link Type="SkiaSharp.Views.Mac.AppleExtensions" Member="M:SkiaSharp.Views.Mac.AppleExtensions.ToSKBitmap(CoreGraphics.CGImage)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:CoreImage.CIImage" />
      </Targets>
      <Member MemberName="ToSKBitmap">
        <MemberSignature Language="C#" Value="public static SkiaSharp.SKBitmap ToSKBitmap (this CoreImage.CIImage ciImage);" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class SkiaSharp.SKBitmap ToSKBitmap(class CoreImage.CIImage ciImage) cil managed" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberSignature Language="DocId" Value="M:SkiaSharp.Views.Mac.AppleExtensions.ToSKBitmap(CoreImage.CIImage)" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType FrameworkAlternate="skiasharp-views-1.60">SkiaSharp.SKBitmap</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="ciImage" Type="CoreImage.CIImage" Index="0" FrameworkAlternate="skiasharp-views-1.60" RefType="this" />
        </Parameters>
        <Docs>
          <param name="ciImage">The CoreImage image.</param>
          <summary>Converts a CoreImage image into a SkiaSharp bitmap.</summary>
        </Docs>
        <Link Type="SkiaSharp.Views.Mac.AppleExtensions" Member="M:SkiaSharp.Views.Mac.AppleExtensions.ToSKBitmap(CoreImage.CIImage)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:CoreGraphics.CGColor" />
      </Targets>
      <Member MemberName="ToSKColor">
        <MemberSignature Language="C#" Value="public static SkiaSharp.SKColor ToSKColor (this CoreGraphics.CGColor color);" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype SkiaSharp.SKColor ToSKColor(class CoreGraphics.CGColor color) cil managed" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberSignature Language="DocId" Value="M:SkiaSharp.Views.Mac.AppleExtensions.ToSKColor(CoreGraphics.CGColor)" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType FrameworkAlternate="skiasharp-views-1.60">SkiaSharp.SKColor</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="color" Type="CoreGraphics.CGColor" Index="0" FrameworkAlternate="skiasharp-views-1.60" RefType="this" />
        </Parameters>
        <Docs>
          <param name="color">The CoreGraphics color.</param>
          <summary>Converts a CoreGraphics color into a SkiaSharp color.</summary>
        </Docs>
        <Link Type="SkiaSharp.Views.Mac.AppleExtensions" Member="M:SkiaSharp.Views.Mac.AppleExtensions.ToSKColor(CoreGraphics.CGColor)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:CoreImage.CIColor" />
      </Targets>
      <Member MemberName="ToSKColor">
        <MemberSignature Language="C#" Value="public static SkiaSharp.SKColor ToSKColor (this CoreImage.CIColor color);" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype SkiaSharp.SKColor ToSKColor(class CoreImage.CIColor color) cil managed" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberSignature Language="DocId" Value="M:SkiaSharp.Views.Mac.AppleExtensions.ToSKColor(CoreImage.CIColor)" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType FrameworkAlternate="skiasharp-views-1.60">SkiaSharp.SKColor</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="color" Type="CoreImage.CIColor" Index="0" FrameworkAlternate="skiasharp-views-1.60" RefType="this" />
        </Parameters>
        <Docs>
          <param name="color">The CoreImage color.</param>
          <summary>Converts a CoreImage color into a SkiaSharp color.</summary>
        </Docs>
        <Link Type="SkiaSharp.Views.Mac.AppleExtensions" Member="M:SkiaSharp.Views.Mac.AppleExtensions.ToSKColor(CoreImage.CIColor)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:CoreGraphics.CGColor" />
      </Targets>
      <Member MemberName="ToSKColorF">
        <MemberSignature Language="C#" Value="public static SkiaSharp.SKColorF ToSKColorF (this CoreGraphics.CGColor color);" FrameworkAlternate="skiasharp-views-2.80" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype SkiaSharp.SKColorF ToSKColorF(class CoreGraphics.CGColor color) cil managed" FrameworkAlternate="skiasharp-views-2.80" />
        <MemberSignature Language="DocId" Value="M:SkiaSharp.Views.Mac.AppleExtensions.ToSKColorF(CoreGraphics.CGColor)" FrameworkAlternate="skiasharp-views-2.80" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType FrameworkAlternate="skiasharp-views-2.80">SkiaSharp.SKColorF</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="color" Type="CoreGraphics.CGColor" RefType="this" Index="0" FrameworkAlternate="skiasharp-views-2.80;skiasharp-views-2.88" />
        </Parameters>
        <Docs>
          <param name="color">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="SkiaSharp.Views.Mac.AppleExtensions" Member="M:SkiaSharp.Views.Mac.AppleExtensions.ToSKColorF(CoreGraphics.CGColor)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:CoreImage.CIColor" />
      </Targets>
      <Member MemberName="ToSKColorF">
        <MemberSignature Language="C#" Value="public static SkiaSharp.SKColorF ToSKColorF (this CoreImage.CIColor color);" FrameworkAlternate="skiasharp-views-2.80" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype SkiaSharp.SKColorF ToSKColorF(class CoreImage.CIColor color) cil managed" FrameworkAlternate="skiasharp-views-2.80" />
        <MemberSignature Language="DocId" Value="M:SkiaSharp.Views.Mac.AppleExtensions.ToSKColorF(CoreImage.CIColor)" FrameworkAlternate="skiasharp-views-2.80" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType FrameworkAlternate="skiasharp-views-2.80">SkiaSharp.SKColorF</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="color" Type="CoreImage.CIColor" RefType="this" Index="0" FrameworkAlternate="skiasharp-views-2.80;skiasharp-views-2.88" />
        </Parameters>
        <Docs>
          <param name="color">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="SkiaSharp.Views.Mac.AppleExtensions" Member="M:SkiaSharp.Views.Mac.AppleExtensions.ToSKColorF(CoreImage.CIColor)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Foundation.NSData" />
      </Targets>
      <Member MemberName="ToSKData">
        <MemberSignature Language="C#" Value="public static SkiaSharp.SKData ToSKData (this Foundation.NSData nsData);" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class SkiaSharp.SKData ToSKData(class Foundation.NSData nsData) cil managed" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberSignature Language="DocId" Value="M:SkiaSharp.Views.Mac.AppleExtensions.ToSKData(Foundation.NSData)" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType FrameworkAlternate="skiasharp-views-1.60">SkiaSharp.SKData</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="nsData" Type="Foundation.NSData" Index="0" FrameworkAlternate="skiasharp-views-1.60" RefType="this" />
        </Parameters>
        <Docs>
          <param name="nsData">The NSData.</param>
          <summary>Converts a NSData into a SkiaSharp data object.</summary>
        </Docs>
        <Link Type="SkiaSharp.Views.Mac.AppleExtensions" Member="M:SkiaSharp.Views.Mac.AppleExtensions.ToSKData(Foundation.NSData)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:CoreGraphics.CGImage" />
      </Targets>
      <Member MemberName="ToSKImage">
        <MemberSignature Language="C#" Value="public static SkiaSharp.SKImage ToSKImage (this CoreGraphics.CGImage cgImage);" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class SkiaSharp.SKImage ToSKImage(class CoreGraphics.CGImage cgImage) cil managed" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberSignature Language="DocId" Value="M:SkiaSharp.Views.Mac.AppleExtensions.ToSKImage(CoreGraphics.CGImage)" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType FrameworkAlternate="skiasharp-views-1.60">SkiaSharp.SKImage</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="cgImage" Type="CoreGraphics.CGImage" Index="0" FrameworkAlternate="skiasharp-views-1.60" RefType="this" />
        </Parameters>
        <Docs>
          <param name="cgImage">The CoreGraphics image.</param>
          <summary>Converts a CoreGraphics image into a SkiaSharp image.</summary>
        </Docs>
        <Link Type="SkiaSharp.Views.Mac.AppleExtensions" Member="M:SkiaSharp.Views.Mac.AppleExtensions.ToSKImage(CoreGraphics.CGImage)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:CoreImage.CIImage" />
      </Targets>
      <Member MemberName="ToSKImage">
        <MemberSignature Language="C#" Value="public static SkiaSharp.SKImage ToSKImage (this CoreImage.CIImage ciImage);" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class SkiaSharp.SKImage ToSKImage(class CoreImage.CIImage ciImage) cil managed" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberSignature Language="DocId" Value="M:SkiaSharp.Views.Mac.AppleExtensions.ToSKImage(CoreImage.CIImage)" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType FrameworkAlternate="skiasharp-views-1.60">SkiaSharp.SKImage</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="ciImage" Type="CoreImage.CIImage" Index="0" FrameworkAlternate="skiasharp-views-1.60" RefType="this" />
        </Parameters>
        <Docs>
          <param name="ciImage">The CoreImage image.</param>
          <summary>Converts a CoreImage image into a SkiaSharp image.</summary>
        </Docs>
        <Link Type="SkiaSharp.Views.Mac.AppleExtensions" Member="M:SkiaSharp.Views.Mac.AppleExtensions.ToSKImage(CoreImage.CIImage)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:CoreGraphics.CGImage" />
      </Targets>
      <Member MemberName="ToSKPixmap">
        <MemberSignature Language="C#" Value="public static void ToSKPixmap (this CoreGraphics.CGImage cgImage, SkiaSharp.SKPixmap pixmap);" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ToSKPixmap(class CoreGraphics.CGImage cgImage, class SkiaSharp.SKPixmap pixmap) cil managed" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberSignature Language="DocId" Value="M:SkiaSharp.Views.Mac.AppleExtensions.ToSKPixmap(CoreGraphics.CGImage,SkiaSharp.SKPixmap)" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType FrameworkAlternate="skiasharp-views-1.60">System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="cgImage" Type="CoreGraphics.CGImage" Index="0" FrameworkAlternate="skiasharp-views-1.60" RefType="this" />
          <Parameter Name="pixmap" Type="SkiaSharp.SKPixmap" Index="1" FrameworkAlternate="skiasharp-views-1.60" />
        </Parameters>
        <Docs>
          <param name="cgImage">The CoreGraphics image.</param>
          <param name="pixmap">The SkiaSharp pixmap to hold the copy of the image data.</param>
          <summary>Converts a CoreGraphics image into a SkiaSharp pixmap.</summary>
        </Docs>
        <Link Type="SkiaSharp.Views.Mac.AppleExtensions" Member="M:SkiaSharp.Views.Mac.AppleExtensions.ToSKPixmap(CoreGraphics.CGImage,SkiaSharp.SKPixmap)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:CoreImage.CIImage" />
      </Targets>
      <Member MemberName="ToSKPixmap">
        <MemberSignature Language="C#" Value="public static void ToSKPixmap (this CoreImage.CIImage ciImage, SkiaSharp.SKPixmap pixmap);" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ToSKPixmap(class CoreImage.CIImage ciImage, class SkiaSharp.SKPixmap pixmap) cil managed" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberSignature Language="DocId" Value="M:SkiaSharp.Views.Mac.AppleExtensions.ToSKPixmap(CoreImage.CIImage,SkiaSharp.SKPixmap)" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType FrameworkAlternate="skiasharp-views-1.60">System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="ciImage" Type="CoreImage.CIImage" Index="0" FrameworkAlternate="skiasharp-views-1.60" RefType="this" />
          <Parameter Name="pixmap" Type="SkiaSharp.SKPixmap" Index="1" FrameworkAlternate="skiasharp-views-1.60" />
        </Parameters>
        <Docs>
          <param name="ciImage">The CoreImage image.</param>
          <param name="pixmap">The SkiaSharp pixmap to hold the copy of the image data.</param>
          <summary>Converts a CoreImage image into a SkiaSharp pixmap.</summary>
        </Docs>
        <Link Type="SkiaSharp.Views.Mac.AppleExtensions" Member="M:SkiaSharp.Views.Mac.AppleExtensions.ToSKPixmap(CoreImage.CIImage,SkiaSharp.SKPixmap)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:CoreGraphics.CGPoint" />
      </Targets>
      <Member MemberName="ToSKPoint">
        <MemberSignature Language="C#" Value="public static SkiaSharp.SKPoint ToSKPoint (this CoreGraphics.CGPoint point);" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype SkiaSharp.SKPoint ToSKPoint(valuetype CoreGraphics.CGPoint point) cil managed" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberSignature Language="DocId" Value="M:SkiaSharp.Views.Mac.AppleExtensions.ToSKPoint(CoreGraphics.CGPoint)" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType FrameworkAlternate="skiasharp-views-1.60">SkiaSharp.SKPoint</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="point" Type="CoreGraphics.CGPoint" Index="0" FrameworkAlternate="skiasharp-views-1.60" RefType="this" />
        </Parameters>
        <Docs>
          <param name="point">The CoreGraphics point.</param>
          <summary>Converts a CoreGraphics point into a SkiaSharp point.</summary>
        </Docs>
        <Link Type="SkiaSharp.Views.Mac.AppleExtensions" Member="M:SkiaSharp.Views.Mac.AppleExtensions.ToSKPoint(CoreGraphics.CGPoint)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:CoreGraphics.CGRect" />
      </Targets>
      <Member MemberName="ToSKRect">
        <MemberSignature Language="C#" Value="public static SkiaSharp.SKRect ToSKRect (this CoreGraphics.CGRect rect);" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype SkiaSharp.SKRect ToSKRect(valuetype CoreGraphics.CGRect rect) cil managed" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberSignature Language="DocId" Value="M:SkiaSharp.Views.Mac.AppleExtensions.ToSKRect(CoreGraphics.CGRect)" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType FrameworkAlternate="skiasharp-views-1.60">SkiaSharp.SKRect</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="rect" Type="CoreGraphics.CGRect" Index="0" FrameworkAlternate="skiasharp-views-1.60" RefType="this" />
        </Parameters>
        <Docs>
          <param name="rect">The CoreGraphics rectangle.</param>
          <summary>Converts a CoreGraphics rectangle into a SkiaSharp rectangle.</summary>
        </Docs>
        <Link Type="SkiaSharp.Views.Mac.AppleExtensions" Member="M:SkiaSharp.Views.Mac.AppleExtensions.ToSKRect(CoreGraphics.CGRect)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:CoreGraphics.CGSize" />
      </Targets>
      <Member MemberName="ToSKSize">
        <MemberSignature Language="C#" Value="public static SkiaSharp.SKSize ToSKSize (this CoreGraphics.CGSize size);" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype SkiaSharp.SKSize ToSKSize(valuetype CoreGraphics.CGSize size) cil managed" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberSignature Language="DocId" Value="M:SkiaSharp.Views.Mac.AppleExtensions.ToSKSize(CoreGraphics.CGSize)" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType FrameworkAlternate="skiasharp-views-1.60">SkiaSharp.SKSize</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="size" Type="CoreGraphics.CGSize" Index="0" FrameworkAlternate="skiasharp-views-1.60" RefType="this" />
        </Parameters>
        <Docs>
          <param name="size">The CoreGraphics size.</param>
          <summary>Converts a CoreGraphics size into a SkiaSharp size.</summary>
        </Docs>
        <Link Type="SkiaSharp.Views.Mac.AppleExtensions" Member="M:SkiaSharp.Views.Mac.AppleExtensions.ToSKSize(CoreGraphics.CGSize)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:SkiaSharp.SKPoint" />
      </Targets>
      <Member MemberName="ToDrawingPoint">
        <MemberSignature Language="C#" Value="public static System.Drawing.PointF ToDrawingPoint (this SkiaSharp.SKPoint point);" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Drawing.PointF ToDrawingPoint(valuetype SkiaSharp.SKPoint point) cil managed" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberSignature Language="DocId" Value="M:SkiaSharp.Views.Mac.Extensions.ToDrawingPoint(SkiaSharp.SKPoint)" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType FrameworkAlternate="skiasharp-views-1.60">System.Drawing.PointF</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="point" Type="SkiaSharp.SKPoint" Index="0" FrameworkAlternate="skiasharp-views-1.60" RefType="this" />
        </Parameters>
        <Docs>
          <param name="point">The SkiaSharp point.</param>
          <summary>Converts a SkiaSharp point into a System.Drawing point.</summary>
        </Docs>
        <Link Type="SkiaSharp.Views.Mac.Extensions" Member="M:SkiaSharp.Views.Mac.Extensions.ToDrawingPoint(SkiaSharp.SKPoint)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:SkiaSharp.SKPointI" />
      </Targets>
      <Member MemberName="ToDrawingPoint">
        <MemberSignature Language="C#" Value="public static System.Drawing.Point ToDrawingPoint (this SkiaSharp.SKPointI point);" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Drawing.Point ToDrawingPoint(valuetype SkiaSharp.SKPointI point) cil managed" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberSignature Language="DocId" Value="M:SkiaSharp.Views.Mac.Extensions.ToDrawingPoint(SkiaSharp.SKPointI)" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType FrameworkAlternate="skiasharp-views-1.60">System.Drawing.Point</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="point" Type="SkiaSharp.SKPointI" Index="0" FrameworkAlternate="skiasharp-views-1.60" RefType="this" />
        </Parameters>
        <Docs>
          <param name="point">The SkiaSharp point.</param>
          <summary>Converts a SkiaSharp point into a System.Drawing point.</summary>
        </Docs>
        <Link Type="SkiaSharp.Views.Mac.Extensions" Member="M:SkiaSharp.Views.Mac.Extensions.ToDrawingPoint(SkiaSharp.SKPointI)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:SkiaSharp.SKRect" />
      </Targets>
      <Member MemberName="ToDrawingRect">
        <MemberSignature Language="C#" Value="public static System.Drawing.RectangleF ToDrawingRect (this SkiaSharp.SKRect rect);" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Drawing.RectangleF ToDrawingRect(valuetype SkiaSharp.SKRect rect) cil managed" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberSignature Language="DocId" Value="M:SkiaSharp.Views.Mac.Extensions.ToDrawingRect(SkiaSharp.SKRect)" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType FrameworkAlternate="skiasharp-views-1.60">System.Drawing.RectangleF</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="rect" Type="SkiaSharp.SKRect" Index="0" FrameworkAlternate="skiasharp-views-1.60" RefType="this" />
        </Parameters>
        <Docs>
          <param name="rect">The SkiaSharp rectangle.</param>
          <summary>Converts a SkiaSharp rectangle into a System.Drawing rectangle.</summary>
        </Docs>
        <Link Type="SkiaSharp.Views.Mac.Extensions" Member="M:SkiaSharp.Views.Mac.Extensions.ToDrawingRect(SkiaSharp.SKRect)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:SkiaSharp.SKRectI" />
      </Targets>
      <Member MemberName="ToDrawingRect">
        <MemberSignature Language="C#" Value="public static System.Drawing.Rectangle ToDrawingRect (this SkiaSharp.SKRectI rect);" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Drawing.Rectangle ToDrawingRect(valuetype SkiaSharp.SKRectI rect) cil managed" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberSignature Language="DocId" Value="M:SkiaSharp.Views.Mac.Extensions.ToDrawingRect(SkiaSharp.SKRectI)" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType FrameworkAlternate="skiasharp-views-1.60">System.Drawing.Rectangle</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="rect" Type="SkiaSharp.SKRectI" Index="0" FrameworkAlternate="skiasharp-views-1.60" RefType="this" />
        </Parameters>
        <Docs>
          <param name="rect">The SkiaSharp rectangle.</param>
          <summary>Converts a SkiaSharp rectangle into a System.Drawing rectangle.</summary>
        </Docs>
        <Link Type="SkiaSharp.Views.Mac.Extensions" Member="M:SkiaSharp.Views.Mac.Extensions.ToDrawingRect(SkiaSharp.SKRectI)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:SkiaSharp.SKSize" />
      </Targets>
      <Member MemberName="ToDrawingSize">
        <MemberSignature Language="C#" Value="public static System.Drawing.SizeF ToDrawingSize (this SkiaSharp.SKSize size);" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Drawing.SizeF ToDrawingSize(valuetype SkiaSharp.SKSize size) cil managed" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberSignature Language="DocId" Value="M:SkiaSharp.Views.Mac.Extensions.ToDrawingSize(SkiaSharp.SKSize)" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType FrameworkAlternate="skiasharp-views-1.60">System.Drawing.SizeF</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="size" Type="SkiaSharp.SKSize" Index="0" FrameworkAlternate="skiasharp-views-1.60" RefType="this" />
        </Parameters>
        <Docs>
          <param name="size">The SkiaSharp size.</param>
          <summary>Converts a SkiaSharp size into a System.Drawing size.</summary>
        </Docs>
        <Link Type="SkiaSharp.Views.Mac.Extensions" Member="M:SkiaSharp.Views.Mac.Extensions.ToDrawingSize(SkiaSharp.SKSize)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:SkiaSharp.SKSizeI" />
      </Targets>
      <Member MemberName="ToDrawingSize">
        <MemberSignature Language="C#" Value="public static System.Drawing.Size ToDrawingSize (this SkiaSharp.SKSizeI size);" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Drawing.Size ToDrawingSize(valuetype SkiaSharp.SKSizeI size) cil managed" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberSignature Language="DocId" Value="M:SkiaSharp.Views.Mac.Extensions.ToDrawingSize(SkiaSharp.SKSizeI)" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType FrameworkAlternate="skiasharp-views-1.60">System.Drawing.Size</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="size" Type="SkiaSharp.SKSizeI" Index="0" FrameworkAlternate="skiasharp-views-1.60" RefType="this" />
        </Parameters>
        <Docs>
          <param name="size">The SkiaSharp size.</param>
          <summary>Converts a SkiaSharp size into a System.Drawing size.</summary>
        </Docs>
        <Link Type="SkiaSharp.Views.Mac.Extensions" Member="M:SkiaSharp.Views.Mac.Extensions.ToDrawingSize(SkiaSharp.SKSizeI)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.Drawing.Point" />
      </Targets>
      <Member MemberName="ToSKPoint">
        <MemberSignature Language="C#" Value="public static SkiaSharp.SKPointI ToSKPoint (this System.Drawing.Point point);" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype SkiaSharp.SKPointI ToSKPoint(valuetype System.Drawing.Point point) cil managed" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberSignature Language="DocId" Value="M:SkiaSharp.Views.Mac.Extensions.ToSKPoint(System.Drawing.Point)" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType FrameworkAlternate="skiasharp-views-1.60">SkiaSharp.SKPointI</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="point" Type="System.Drawing.Point" Index="0" FrameworkAlternate="skiasharp-views-1.60" RefType="this" />
        </Parameters>
        <Docs>
          <param name="point">The System.Drawing point.</param>
          <summary>Converts a System.Drawing point into a SkiaSharp point.</summary>
        </Docs>
        <Link Type="SkiaSharp.Views.Mac.Extensions" Member="M:SkiaSharp.Views.Mac.Extensions.ToSKPoint(System.Drawing.Point)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.Drawing.PointF" />
      </Targets>
      <Member MemberName="ToSKPoint">
        <MemberSignature Language="C#" Value="public static SkiaSharp.SKPoint ToSKPoint (this System.Drawing.PointF point);" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype SkiaSharp.SKPoint ToSKPoint(valuetype System.Drawing.PointF point) cil managed" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberSignature Language="DocId" Value="M:SkiaSharp.Views.Mac.Extensions.ToSKPoint(System.Drawing.PointF)" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType FrameworkAlternate="skiasharp-views-1.60">SkiaSharp.SKPoint</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="point" Type="System.Drawing.PointF" Index="0" FrameworkAlternate="skiasharp-views-1.60" RefType="this" />
        </Parameters>
        <Docs>
          <param name="point">The System.Drawing point.</param>
          <summary>Converts a System.Drawing point into a SkiaSharp point.</summary>
        </Docs>
        <Link Type="SkiaSharp.Views.Mac.Extensions" Member="M:SkiaSharp.Views.Mac.Extensions.ToSKPoint(System.Drawing.PointF)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.Drawing.Rectangle" />
      </Targets>
      <Member MemberName="ToSKRect">
        <MemberSignature Language="C#" Value="public static SkiaSharp.SKRectI ToSKRect (this System.Drawing.Rectangle rect);" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype SkiaSharp.SKRectI ToSKRect(valuetype System.Drawing.Rectangle rect) cil managed" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberSignature Language="DocId" Value="M:SkiaSharp.Views.Mac.Extensions.ToSKRect(System.Drawing.Rectangle)" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType FrameworkAlternate="skiasharp-views-1.60">SkiaSharp.SKRectI</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="rect" Type="System.Drawing.Rectangle" Index="0" FrameworkAlternate="skiasharp-views-1.60" RefType="this" />
        </Parameters>
        <Docs>
          <param name="rect">The System.Drawing rectangle.</param>
          <summary>Converts a System.Drawing rectangle into a SkiaSharp rectangle.</summary>
        </Docs>
        <Link Type="SkiaSharp.Views.Mac.Extensions" Member="M:SkiaSharp.Views.Mac.Extensions.ToSKRect(System.Drawing.Rectangle)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.Drawing.RectangleF" />
      </Targets>
      <Member MemberName="ToSKRect">
        <MemberSignature Language="C#" Value="public static SkiaSharp.SKRect ToSKRect (this System.Drawing.RectangleF rect);" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype SkiaSharp.SKRect ToSKRect(valuetype System.Drawing.RectangleF rect) cil managed" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberSignature Language="DocId" Value="M:SkiaSharp.Views.Mac.Extensions.ToSKRect(System.Drawing.RectangleF)" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType FrameworkAlternate="skiasharp-views-1.60">SkiaSharp.SKRect</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="rect" Type="System.Drawing.RectangleF" Index="0" FrameworkAlternate="skiasharp-views-1.60" RefType="this" />
        </Parameters>
        <Docs>
          <param name="rect">The System.Drawing rectangle.</param>
          <summary>Converts a System.Drawing rectangle into a SkiaSharp rectangle.</summary>
        </Docs>
        <Link Type="SkiaSharp.Views.Mac.Extensions" Member="M:SkiaSharp.Views.Mac.Extensions.ToSKRect(System.Drawing.RectangleF)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.Drawing.Size" />
      </Targets>
      <Member MemberName="ToSKSize">
        <MemberSignature Language="C#" Value="public static SkiaSharp.SKSizeI ToSKSize (this System.Drawing.Size size);" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype SkiaSharp.SKSizeI ToSKSize(valuetype System.Drawing.Size size) cil managed" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberSignature Language="DocId" Value="M:SkiaSharp.Views.Mac.Extensions.ToSKSize(System.Drawing.Size)" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType FrameworkAlternate="skiasharp-views-1.60">SkiaSharp.SKSizeI</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="size" Type="System.Drawing.Size" Index="0" FrameworkAlternate="skiasharp-views-1.60" RefType="this" />
        </Parameters>
        <Docs>
          <param name="size">The System.Drawing size.</param>
          <summary>Converts a System.Drawing size into a SkiaSharp size.</summary>
        </Docs>
        <Link Type="SkiaSharp.Views.Mac.Extensions" Member="M:SkiaSharp.Views.Mac.Extensions.ToSKSize(System.Drawing.Size)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.Drawing.SizeF" />
      </Targets>
      <Member MemberName="ToSKSize">
        <MemberSignature Language="C#" Value="public static SkiaSharp.SKSize ToSKSize (this System.Drawing.SizeF size);" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype SkiaSharp.SKSize ToSKSize(valuetype System.Drawing.SizeF size) cil managed" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberSignature Language="DocId" Value="M:SkiaSharp.Views.Mac.Extensions.ToSKSize(System.Drawing.SizeF)" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType FrameworkAlternate="skiasharp-views-1.60">SkiaSharp.SKSize</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="size" Type="System.Drawing.SizeF" Index="0" FrameworkAlternate="skiasharp-views-1.60" RefType="this" />
        </Parameters>
        <Docs>
          <param name="size">The System.Drawing size.</param>
          <summary>Converts a System.Drawing size into a SkiaSharp size.</summary>
        </Docs>
        <Link Type="SkiaSharp.Views.Mac.Extensions" Member="M:SkiaSharp.Views.Mac.Extensions.ToSKSize(System.Drawing.SizeF)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:SkiaSharp.SKColor" />
      </Targets>
      <Member MemberName="ToNSColor">
        <MemberSignature Language="C#" Value="public static AppKit.NSColor ToNSColor (this SkiaSharp.SKColor color);" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class AppKit.NSColor ToNSColor(valuetype SkiaSharp.SKColor color) cil managed" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberSignature Language="DocId" Value="M:SkiaSharp.Views.Mac.MacExtensions.ToNSColor(SkiaSharp.SKColor)" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType FrameworkAlternate="skiasharp-views-1.60">AppKit.NSColor</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="color" Type="SkiaSharp.SKColor" Index="0" FrameworkAlternate="skiasharp-views-1.60" RefType="this" />
        </Parameters>
        <Docs>
          <param name="color">The SkiaSharp color.</param>
          <summary>Converts a SkiaSharp color into an AppKit color.</summary>
        </Docs>
        <Link Type="SkiaSharp.Views.Mac.MacExtensions" Member="M:SkiaSharp.Views.Mac.MacExtensions.ToNSColor(SkiaSharp.SKColor)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:SkiaSharp.SKColorF" />
      </Targets>
      <Member MemberName="ToNSColor">
        <MemberSignature Language="C#" Value="public static AppKit.NSColor ToNSColor (this SkiaSharp.SKColorF color);" FrameworkAlternate="skiasharp-views-2.80" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class AppKit.NSColor ToNSColor(valuetype SkiaSharp.SKColorF color) cil managed" FrameworkAlternate="skiasharp-views-2.80" />
        <MemberSignature Language="DocId" Value="M:SkiaSharp.Views.Mac.MacExtensions.ToNSColor(SkiaSharp.SKColorF)" FrameworkAlternate="skiasharp-views-2.80" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType FrameworkAlternate="skiasharp-views-2.80">AppKit.NSColor</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="color" Type="SkiaSharp.SKColorF" RefType="this" Index="0" FrameworkAlternate="skiasharp-views-2.80;skiasharp-views-2.88" />
        </Parameters>
        <Docs>
          <param name="color">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="SkiaSharp.Views.Mac.MacExtensions" Member="M:SkiaSharp.Views.Mac.MacExtensions.ToNSColor(SkiaSharp.SKColorF)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:SkiaSharp.SKBitmap" />
      </Targets>
      <Member MemberName="ToNSImage">
        <MemberSignature Language="C#" Value="public static AppKit.NSImage ToNSImage (this SkiaSharp.SKBitmap skiaBitmap);" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class AppKit.NSImage ToNSImage(class SkiaSharp.SKBitmap skiaBitmap) cil managed" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberSignature Language="DocId" Value="M:SkiaSharp.Views.Mac.MacExtensions.ToNSImage(SkiaSharp.SKBitmap)" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType FrameworkAlternate="skiasharp-views-1.60">AppKit.NSImage</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="skiaBitmap" Type="SkiaSharp.SKBitmap" Index="0" FrameworkAlternate="skiasharp-views-1.60" RefType="this" />
        </Parameters>
        <Docs>
          <param name="skiaBitmap">The SkiaSharp bitmap.</param>
          <summary>Converts a SkiaSharp bitmap into a AppKit image.</summary>
        </Docs>
        <Link Type="SkiaSharp.Views.Mac.MacExtensions" Member="M:SkiaSharp.Views.Mac.MacExtensions.ToNSImage(SkiaSharp.SKBitmap)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:SkiaSharp.SKImage" />
      </Targets>
      <Member MemberName="ToNSImage">
        <MemberSignature Language="C#" Value="public static AppKit.NSImage ToNSImage (this SkiaSharp.SKImage skiaImage);" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class AppKit.NSImage ToNSImage(class SkiaSharp.SKImage skiaImage) cil managed" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberSignature Language="DocId" Value="M:SkiaSharp.Views.Mac.MacExtensions.ToNSImage(SkiaSharp.SKImage)" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType FrameworkAlternate="skiasharp-views-1.60">AppKit.NSImage</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="skiaImage" Type="SkiaSharp.SKImage" Index="0" FrameworkAlternate="skiasharp-views-1.60" RefType="this" />
        </Parameters>
        <Docs>
          <param name="skiaImage">The SkiaSharp image.</param>
          <summary>Converts a SkiaSharp image into a AppKit image.</summary>
        </Docs>
        <Link Type="SkiaSharp.Views.Mac.MacExtensions" Member="M:SkiaSharp.Views.Mac.MacExtensions.ToNSImage(SkiaSharp.SKImage)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:SkiaSharp.SKPicture" />
      </Targets>
      <Member MemberName="ToNSImage">
        <MemberSignature Language="C#" Value="public static AppKit.NSImage ToNSImage (this SkiaSharp.SKPicture skiaPicture, SkiaSharp.SKSizeI dimensions);" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class AppKit.NSImage ToNSImage(class SkiaSharp.SKPicture skiaPicture, valuetype SkiaSharp.SKSizeI dimensions) cil managed" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberSignature Language="DocId" Value="M:SkiaSharp.Views.Mac.MacExtensions.ToNSImage(SkiaSharp.SKPicture,SkiaSharp.SKSizeI)" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType FrameworkAlternate="skiasharp-views-1.60">AppKit.NSImage</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="skiaPicture" Type="SkiaSharp.SKPicture" Index="0" FrameworkAlternate="skiasharp-views-1.60" RefType="this" />
          <Parameter Name="dimensions" Type="SkiaSharp.SKSizeI" Index="1" FrameworkAlternate="skiasharp-views-1.60" />
        </Parameters>
        <Docs>
          <param name="skiaPicture">The SkiaSharp picture.</param>
          <param name="dimensions">The dimensions of the picture.</param>
          <summary>Converts a SkiaSharp picture into a AppKit image.</summary>
        </Docs>
        <Link Type="SkiaSharp.Views.Mac.MacExtensions" Member="M:SkiaSharp.Views.Mac.MacExtensions.ToNSImage(SkiaSharp.SKPicture,SkiaSharp.SKSizeI)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:SkiaSharp.SKPixmap" />
      </Targets>
      <Member MemberName="ToNSImage">
        <MemberSignature Language="C#" Value="public static AppKit.NSImage ToNSImage (this SkiaSharp.SKPixmap skiaPixmap);" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class AppKit.NSImage ToNSImage(class SkiaSharp.SKPixmap skiaPixmap) cil managed" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberSignature Language="DocId" Value="M:SkiaSharp.Views.Mac.MacExtensions.ToNSImage(SkiaSharp.SKPixmap)" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType FrameworkAlternate="skiasharp-views-1.60">AppKit.NSImage</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="skiaPixmap" Type="SkiaSharp.SKPixmap" Index="0" FrameworkAlternate="skiasharp-views-1.60" RefType="this" />
        </Parameters>
        <Docs>
          <param name="skiaPixmap">The SkiaSharp pixmap.</param>
          <summary>Converts a SkiaSharp pixmap into a AppKit image.</summary>
        </Docs>
        <Link Type="SkiaSharp.Views.Mac.MacExtensions" Member="M:SkiaSharp.Views.Mac.MacExtensions.ToNSImage(SkiaSharp.SKPixmap)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:AppKit.NSImage" />
      </Targets>
      <Member MemberName="ToSKBitmap">
        <MemberSignature Language="C#" Value="public static SkiaSharp.SKBitmap ToSKBitmap (this AppKit.NSImage nsImage);" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class SkiaSharp.SKBitmap ToSKBitmap(class AppKit.NSImage nsImage) cil managed" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberSignature Language="DocId" Value="M:SkiaSharp.Views.Mac.MacExtensions.ToSKBitmap(AppKit.NSImage)" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType FrameworkAlternate="skiasharp-views-1.60">SkiaSharp.SKBitmap</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="nsImage" Type="AppKit.NSImage" Index="0" FrameworkAlternate="skiasharp-views-1.60" RefType="this" />
        </Parameters>
        <Docs>
          <param name="nsImage">The AppKit image.</param>
          <summary>Converts a AppKit image into a SkiaSharp bitmap.</summary>
        </Docs>
        <Link Type="SkiaSharp.Views.Mac.MacExtensions" Member="M:SkiaSharp.Views.Mac.MacExtensions.ToSKBitmap(AppKit.NSImage)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:AppKit.NSColor" />
      </Targets>
      <Member MemberName="ToSKColor">
        <MemberSignature Language="C#" Value="public static SkiaSharp.SKColor ToSKColor (this AppKit.NSColor color);" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype SkiaSharp.SKColor ToSKColor(class AppKit.NSColor color) cil managed" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberSignature Language="DocId" Value="M:SkiaSharp.Views.Mac.MacExtensions.ToSKColor(AppKit.NSColor)" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType FrameworkAlternate="skiasharp-views-1.60">SkiaSharp.SKColor</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="color" Type="AppKit.NSColor" Index="0" FrameworkAlternate="skiasharp-views-1.60" RefType="this" />
        </Parameters>
        <Docs>
          <param name="color">The AppKit color.</param>
          <summary>Converts a AppKit color into an SkiaSharp color.</summary>
        </Docs>
        <Link Type="SkiaSharp.Views.Mac.MacExtensions" Member="M:SkiaSharp.Views.Mac.MacExtensions.ToSKColor(AppKit.NSColor)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:AppKit.NSColor" />
      </Targets>
      <Member MemberName="ToSKColorF">
        <MemberSignature Language="C#" Value="public static SkiaSharp.SKColorF ToSKColorF (this AppKit.NSColor color);" FrameworkAlternate="skiasharp-views-2.80" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype SkiaSharp.SKColorF ToSKColorF(class AppKit.NSColor color) cil managed" FrameworkAlternate="skiasharp-views-2.80" />
        <MemberSignature Language="DocId" Value="M:SkiaSharp.Views.Mac.MacExtensions.ToSKColorF(AppKit.NSColor)" FrameworkAlternate="skiasharp-views-2.80" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType FrameworkAlternate="skiasharp-views-2.80">SkiaSharp.SKColorF</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="color" Type="AppKit.NSColor" RefType="this" Index="0" FrameworkAlternate="skiasharp-views-2.80;skiasharp-views-2.88" />
        </Parameters>
        <Docs>
          <param name="color">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="SkiaSharp.Views.Mac.MacExtensions" Member="M:SkiaSharp.Views.Mac.MacExtensions.ToSKColorF(AppKit.NSColor)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:AppKit.NSImage" />
      </Targets>
      <Member MemberName="ToSKImage">
        <MemberSignature Language="C#" Value="public static SkiaSharp.SKImage ToSKImage (this AppKit.NSImage nsImage);" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class SkiaSharp.SKImage ToSKImage(class AppKit.NSImage nsImage) cil managed" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberSignature Language="DocId" Value="M:SkiaSharp.Views.Mac.MacExtensions.ToSKImage(AppKit.NSImage)" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType FrameworkAlternate="skiasharp-views-1.60">SkiaSharp.SKImage</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="nsImage" Type="AppKit.NSImage" Index="0" FrameworkAlternate="skiasharp-views-1.60" RefType="this" />
        </Parameters>
        <Docs>
          <param name="nsImage">The AppKit image.</param>
          <summary>Converts a AppKit image into a SkiaSharp image.</summary>
        </Docs>
        <Link Type="SkiaSharp.Views.Mac.MacExtensions" Member="M:SkiaSharp.Views.Mac.MacExtensions.ToSKImage(AppKit.NSImage)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:AppKit.NSImage" />
      </Targets>
      <Member MemberName="ToSKPixmap">
        <MemberSignature Language="C#" Value="public static bool ToSKPixmap (this AppKit.NSImage nsImage, SkiaSharp.SKPixmap pixmap);" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool ToSKPixmap(class AppKit.NSImage nsImage, class SkiaSharp.SKPixmap pixmap) cil managed" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberSignature Language="DocId" Value="M:SkiaSharp.Views.Mac.MacExtensions.ToSKPixmap(AppKit.NSImage,SkiaSharp.SKPixmap)" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType FrameworkAlternate="skiasharp-views-1.60">System.Boolean</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="nsImage" Type="AppKit.NSImage" Index="0" FrameworkAlternate="skiasharp-views-1.60" RefType="this" />
          <Parameter Name="pixmap" Type="SkiaSharp.SKPixmap" Index="1" FrameworkAlternate="skiasharp-views-1.60" />
        </Parameters>
        <Docs>
          <param name="nsImage">The AppKit image.</param>
          <param name="pixmap">The SkiaSharp pixmap to hold the copy of the image data.</param>
          <summary>Converts a SkiaSharp pixmap into a AppKit image.</summary>
        </Docs>
        <Link Type="SkiaSharp.Views.Mac.MacExtensions" Member="M:SkiaSharp.Views.Mac.MacExtensions.ToSKPixmap(AppKit.NSImage,SkiaSharp.SKPixmap)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Maui.Hosting.MauiAppBuilder" />
      </Targets>
      <Member MemberName="UseSkiaSharpHandlers">
        <MemberSignature Language="C#" Value="public static Microsoft.Maui.Hosting.MauiAppBuilder UseSkiaSharpHandlers (this Microsoft.Maui.Hosting.MauiAppBuilder builder);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Maui.Hosting.MauiAppBuilder UseSkiaSharpHandlers(class Microsoft.Maui.Hosting.MauiAppBuilder builder) cil managed" />
        <MemberSignature Language="DocId" Value="M:SkiaSharp.Views.Maui.Controls.AppHostBuilderExtensions.UseSkiaSharpHandlers(Microsoft.Maui.Hosting.MauiAppBuilder)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>Microsoft.Maui.Hosting.MauiAppBuilder</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="builder" Type="Microsoft.Maui.Hosting.MauiAppBuilder" RefType="this" />
        </Parameters>
        <Docs>
          <param name="builder">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="SkiaSharp.Views.Maui.Controls.AppHostBuilderExtensions" Member="M:SkiaSharp.Views.Maui.Controls.AppHostBuilderExtensions.UseSkiaSharpHandlers(Microsoft.Maui.Hosting.MauiAppBuilder)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Maui.Hosting.MauiAppBuilder" />
      </Targets>
      <Member MemberName="UseSkiaSharpCompatibilityRenderers">
        <MemberSignature Language="C#" Value="public static Microsoft.Maui.Hosting.MauiAppBuilder UseSkiaSharpCompatibilityRenderers (this Microsoft.Maui.Hosting.MauiAppBuilder builder);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Maui.Hosting.MauiAppBuilder UseSkiaSharpCompatibilityRenderers(class Microsoft.Maui.Hosting.MauiAppBuilder builder) cil managed" />
        <MemberSignature Language="DocId" Value="M:SkiaSharp.Views.Maui.Controls.Compatibility.AppHostBuilderExtensions.UseSkiaSharpCompatibilityRenderers(Microsoft.Maui.Hosting.MauiAppBuilder)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>Microsoft.Maui.Hosting.MauiAppBuilder</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="builder" Type="Microsoft.Maui.Hosting.MauiAppBuilder" RefType="this" />
        </Parameters>
        <Docs>
          <param name="builder">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="SkiaSharp.Views.Maui.Controls.Compatibility.AppHostBuilderExtensions" Member="M:SkiaSharp.Views.Maui.Controls.Compatibility.AppHostBuilderExtensions.UseSkiaSharpCompatibilityRenderers(Microsoft.Maui.Hosting.MauiAppBuilder)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Maui.Hosting.MauiAppBuilder" />
      </Targets>
      <Member MemberName="UseSkiaSharp">
        <MemberSignature Language="C#" Value="public static Microsoft.Maui.Hosting.MauiAppBuilder UseSkiaSharp (this Microsoft.Maui.Hosting.MauiAppBuilder builder);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Maui.Hosting.MauiAppBuilder UseSkiaSharp(class Microsoft.Maui.Hosting.MauiAppBuilder builder) cil managed" />
        <MemberSignature Language="DocId" Value="M:SkiaSharp.Views.Maui.Controls.Hosting.AppHostBuilderExtensions.UseSkiaSharp(Microsoft.Maui.Hosting.MauiAppBuilder)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue />
        <Parameters>
          <Parameter Name="builder" Type="Microsoft.Maui.Hosting.MauiAppBuilder" RefType="this" />
        </Parameters>
        <Docs>
          <param name="builder">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="SkiaSharp.Views.Maui.Controls.Hosting.AppHostBuilderExtensions" Member="M:SkiaSharp.Views.Maui.Controls.Hosting.AppHostBuilderExtensions.UseSkiaSharp(Microsoft.Maui.Hosting.MauiAppBuilder)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Maui.Hosting.MauiAppBuilder" />
      </Targets>
      <Member MemberName="UseSkiaSharp">
        <MemberSignature Language="C#" Value="public static Microsoft.Maui.Hosting.MauiAppBuilder UseSkiaSharp (this Microsoft.Maui.Hosting.MauiAppBuilder builder, bool registerRenderers, bool replaceHandlers = false);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Maui.Hosting.MauiAppBuilder UseSkiaSharp(class Microsoft.Maui.Hosting.MauiAppBuilder builder, bool registerRenderers, bool replaceHandlers) cil managed" />
        <MemberSignature Language="DocId" Value="M:SkiaSharp.Views.Maui.Controls.Hosting.AppHostBuilderExtensions.UseSkiaSharp(Microsoft.Maui.Hosting.MauiAppBuilder,System.Boolean,System.Boolean)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>Microsoft.Maui.Hosting.MauiAppBuilder</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="builder" Type="Microsoft.Maui.Hosting.MauiAppBuilder" RefType="this" />
          <Parameter Name="registerRenderers" Type="System.Boolean" />
          <Parameter Name="replaceHandlers" Type="System.Boolean" />
        </Parameters>
        <Docs>
          <param name="builder">To be added.</param>
          <param name="registerRenderers">To be added.</param>
          <param name="replaceHandlers">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="SkiaSharp.Views.Maui.Controls.Hosting.AppHostBuilderExtensions" Member="M:SkiaSharp.Views.Maui.Controls.Hosting.AppHostBuilderExtensions.UseSkiaSharp(Microsoft.Maui.Hosting.MauiAppBuilder,System.Boolean,System.Boolean)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:SkiaSharp.SKColor" />
      </Targets>
      <Member MemberName="ToMauiColor">
        <MemberSignature Language="C#" Value="public static Microsoft.Maui.Graphics.Color ToMauiColor (this SkiaSharp.SKColor color);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Maui.Graphics.Color ToMauiColor(valuetype SkiaSharp.SKColor color) cil managed" />
        <MemberSignature Language="DocId" Value="M:SkiaSharp.Views.Maui.Extensions.ToMauiColor(SkiaSharp.SKColor)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>Microsoft.Maui.Graphics.Color</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="color" Type="SkiaSharp.SKColor" RefType="this" />
        </Parameters>
        <Docs>
          <param name="color">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="SkiaSharp.Views.Maui.Extensions" Member="M:SkiaSharp.Views.Maui.Extensions.ToMauiColor(SkiaSharp.SKColor)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:SkiaSharp.SKColorF" />
      </Targets>
      <Member MemberName="ToMauiColor">
        <MemberSignature Language="C#" Value="public static Microsoft.Maui.Graphics.Color ToMauiColor (this SkiaSharp.SKColorF color);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Maui.Graphics.Color ToMauiColor(valuetype SkiaSharp.SKColorF color) cil managed" />
        <MemberSignature Language="DocId" Value="M:SkiaSharp.Views.Maui.Extensions.ToMauiColor(SkiaSharp.SKColorF)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>Microsoft.Maui.Graphics.Color</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="color" Type="SkiaSharp.SKColorF" RefType="this" />
        </Parameters>
        <Docs>
          <param name="color">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="SkiaSharp.Views.Maui.Extensions" Member="M:SkiaSharp.Views.Maui.Extensions.ToMauiColor(SkiaSharp.SKColorF)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:SkiaSharp.SKPoint" />
      </Targets>
      <Member MemberName="ToMauiPoint">
        <MemberSignature Language="C#" Value="public static Microsoft.Maui.Graphics.Point ToMauiPoint (this SkiaSharp.SKPoint point);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype Microsoft.Maui.Graphics.Point ToMauiPoint(valuetype SkiaSharp.SKPoint point) cil managed" />
        <MemberSignature Language="DocId" Value="M:SkiaSharp.Views.Maui.Extensions.ToMauiPoint(SkiaSharp.SKPoint)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>Microsoft.Maui.Graphics.Point</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="point" Type="SkiaSharp.SKPoint" RefType="this" />
        </Parameters>
        <Docs>
          <param name="point">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="SkiaSharp.Views.Maui.Extensions" Member="M:SkiaSharp.Views.Maui.Extensions.ToMauiPoint(SkiaSharp.SKPoint)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:SkiaSharp.SKPointI" />
      </Targets>
      <Member MemberName="ToMauiPoint">
        <MemberSignature Language="C#" Value="public static Microsoft.Maui.Graphics.Point ToMauiPoint (this SkiaSharp.SKPointI point);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype Microsoft.Maui.Graphics.Point ToMauiPoint(valuetype SkiaSharp.SKPointI point) cil managed" />
        <MemberSignature Language="DocId" Value="M:SkiaSharp.Views.Maui.Extensions.ToMauiPoint(SkiaSharp.SKPointI)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>Microsoft.Maui.Graphics.Point</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="point" Type="SkiaSharp.SKPointI" RefType="this" />
        </Parameters>
        <Docs>
          <param name="point">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="SkiaSharp.Views.Maui.Extensions" Member="M:SkiaSharp.Views.Maui.Extensions.ToMauiPoint(SkiaSharp.SKPointI)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:SkiaSharp.SKPoint" />
      </Targets>
      <Member MemberName="ToMauiPointF">
        <MemberSignature Language="C#" Value="public static Microsoft.Maui.Graphics.PointF ToMauiPointF (this SkiaSharp.SKPoint point);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype Microsoft.Maui.Graphics.PointF ToMauiPointF(valuetype SkiaSharp.SKPoint point) cil managed" />
        <MemberSignature Language="DocId" Value="M:SkiaSharp.Views.Maui.Extensions.ToMauiPointF(SkiaSharp.SKPoint)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>Microsoft.Maui.Graphics.PointF</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="point" Type="SkiaSharp.SKPoint" RefType="this" />
        </Parameters>
        <Docs>
          <param name="point">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="SkiaSharp.Views.Maui.Extensions" Member="M:SkiaSharp.Views.Maui.Extensions.ToMauiPointF(SkiaSharp.SKPoint)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:SkiaSharp.SKPointI" />
      </Targets>
      <Member MemberName="ToMauiPointF">
        <MemberSignature Language="C#" Value="public static Microsoft.Maui.Graphics.PointF ToMauiPointF (this SkiaSharp.SKPointI point);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype Microsoft.Maui.Graphics.PointF ToMauiPointF(valuetype SkiaSharp.SKPointI point) cil managed" />
        <MemberSignature Language="DocId" Value="M:SkiaSharp.Views.Maui.Extensions.ToMauiPointF(SkiaSharp.SKPointI)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>Microsoft.Maui.Graphics.PointF</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="point" Type="SkiaSharp.SKPointI" RefType="this" />
        </Parameters>
        <Docs>
          <param name="point">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="SkiaSharp.Views.Maui.Extensions" Member="M:SkiaSharp.Views.Maui.Extensions.ToMauiPointF(SkiaSharp.SKPointI)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:SkiaSharp.SKRect" />
      </Targets>
      <Member MemberName="ToMauiRectangle">
        <MemberSignature Language="C#" Value="public static Microsoft.Maui.Graphics.Rect ToMauiRectangle (this SkiaSharp.SKRect rect);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype Microsoft.Maui.Graphics.Rect ToMauiRectangle(valuetype SkiaSharp.SKRect rect) cil managed" />
        <MemberSignature Language="DocId" Value="M:SkiaSharp.Views.Maui.Extensions.ToMauiRectangle(SkiaSharp.SKRect)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>Microsoft.Maui.Graphics.Rect</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="rect" Type="SkiaSharp.SKRect" RefType="this" />
        </Parameters>
        <Docs>
          <param name="rect">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="SkiaSharp.Views.Maui.Extensions" Member="M:SkiaSharp.Views.Maui.Extensions.ToMauiRectangle(SkiaSharp.SKRect)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:SkiaSharp.SKRectI" />
      </Targets>
      <Member MemberName="ToMauiRectangle">
        <MemberSignature Language="C#" Value="public static Microsoft.Maui.Graphics.Rect ToMauiRectangle (this SkiaSharp.SKRectI rect);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype Microsoft.Maui.Graphics.Rect ToMauiRectangle(valuetype SkiaSharp.SKRectI rect) cil managed" />
        <MemberSignature Language="DocId" Value="M:SkiaSharp.Views.Maui.Extensions.ToMauiRectangle(SkiaSharp.SKRectI)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>Microsoft.Maui.Graphics.Rect</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="rect" Type="SkiaSharp.SKRectI" RefType="this" />
        </Parameters>
        <Docs>
          <param name="rect">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="SkiaSharp.Views.Maui.Extensions" Member="M:SkiaSharp.Views.Maui.Extensions.ToMauiRectangle(SkiaSharp.SKRectI)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:SkiaSharp.SKRect" />
      </Targets>
      <Member MemberName="ToMauiRectangleF">
        <MemberSignature Language="C#" Value="public static Microsoft.Maui.Graphics.RectF ToMauiRectangleF (this SkiaSharp.SKRect rect);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype Microsoft.Maui.Graphics.RectF ToMauiRectangleF(valuetype SkiaSharp.SKRect rect) cil managed" />
        <MemberSignature Language="DocId" Value="M:SkiaSharp.Views.Maui.Extensions.ToMauiRectangleF(SkiaSharp.SKRect)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>Microsoft.Maui.Graphics.RectF</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="rect" Type="SkiaSharp.SKRect" RefType="this" />
        </Parameters>
        <Docs>
          <param name="rect">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="SkiaSharp.Views.Maui.Extensions" Member="M:SkiaSharp.Views.Maui.Extensions.ToMauiRectangleF(SkiaSharp.SKRect)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:SkiaSharp.SKRectI" />
      </Targets>
      <Member MemberName="ToMauiRectangleF">
        <MemberSignature Language="C#" Value="public static Microsoft.Maui.Graphics.RectF ToMauiRectangleF (this SkiaSharp.SKRectI rect);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype Microsoft.Maui.Graphics.RectF ToMauiRectangleF(valuetype SkiaSharp.SKRectI rect) cil managed" />
        <MemberSignature Language="DocId" Value="M:SkiaSharp.Views.Maui.Extensions.ToMauiRectangleF(SkiaSharp.SKRectI)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>Microsoft.Maui.Graphics.RectF</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="rect" Type="SkiaSharp.SKRectI" RefType="this" />
        </Parameters>
        <Docs>
          <param name="rect">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="SkiaSharp.Views.Maui.Extensions" Member="M:SkiaSharp.Views.Maui.Extensions.ToMauiRectangleF(SkiaSharp.SKRectI)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:SkiaSharp.SKSize" />
      </Targets>
      <Member MemberName="ToMauiSize">
        <MemberSignature Language="C#" Value="public static Microsoft.Maui.Graphics.Size ToMauiSize (this SkiaSharp.SKSize size);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype Microsoft.Maui.Graphics.Size ToMauiSize(valuetype SkiaSharp.SKSize size) cil managed" />
        <MemberSignature Language="DocId" Value="M:SkiaSharp.Views.Maui.Extensions.ToMauiSize(SkiaSharp.SKSize)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>Microsoft.Maui.Graphics.Size</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="size" Type="SkiaSharp.SKSize" RefType="this" />
        </Parameters>
        <Docs>
          <param name="size">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="SkiaSharp.Views.Maui.Extensions" Member="M:SkiaSharp.Views.Maui.Extensions.ToMauiSize(SkiaSharp.SKSize)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:SkiaSharp.SKSizeI" />
      </Targets>
      <Member MemberName="ToMauiSize">
        <MemberSignature Language="C#" Value="public static Microsoft.Maui.Graphics.Size ToMauiSize (this SkiaSharp.SKSizeI size);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype Microsoft.Maui.Graphics.Size ToMauiSize(valuetype SkiaSharp.SKSizeI size) cil managed" />
        <MemberSignature Language="DocId" Value="M:SkiaSharp.Views.Maui.Extensions.ToMauiSize(SkiaSharp.SKSizeI)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>Microsoft.Maui.Graphics.Size</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="size" Type="SkiaSharp.SKSizeI" RefType="this" />
        </Parameters>
        <Docs>
          <param name="size">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="SkiaSharp.Views.Maui.Extensions" Member="M:SkiaSharp.Views.Maui.Extensions.ToMauiSize(SkiaSharp.SKSizeI)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:SkiaSharp.SKSize" />
      </Targets>
      <Member MemberName="ToMauiSizeF">
        <MemberSignature Language="C#" Value="public static Microsoft.Maui.Graphics.SizeF ToMauiSizeF (this SkiaSharp.SKSize size);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype Microsoft.Maui.Graphics.SizeF ToMauiSizeF(valuetype SkiaSharp.SKSize size) cil managed" />
        <MemberSignature Language="DocId" Value="M:SkiaSharp.Views.Maui.Extensions.ToMauiSizeF(SkiaSharp.SKSize)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>Microsoft.Maui.Graphics.SizeF</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="size" Type="SkiaSharp.SKSize" RefType="this" />
        </Parameters>
        <Docs>
          <param name="size">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="SkiaSharp.Views.Maui.Extensions" Member="M:SkiaSharp.Views.Maui.Extensions.ToMauiSizeF(SkiaSharp.SKSize)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:SkiaSharp.SKSizeI" />
      </Targets>
      <Member MemberName="ToMauiSizeF">
        <MemberSignature Language="C#" Value="public static Microsoft.Maui.Graphics.SizeF ToMauiSizeF (this SkiaSharp.SKSizeI size);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype Microsoft.Maui.Graphics.SizeF ToMauiSizeF(valuetype SkiaSharp.SKSizeI size) cil managed" />
        <MemberSignature Language="DocId" Value="M:SkiaSharp.Views.Maui.Extensions.ToMauiSizeF(SkiaSharp.SKSizeI)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>Microsoft.Maui.Graphics.SizeF</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="size" Type="SkiaSharp.SKSizeI" RefType="this" />
        </Parameters>
        <Docs>
          <param name="size">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="SkiaSharp.Views.Maui.Extensions" Member="M:SkiaSharp.Views.Maui.Extensions.ToMauiSizeF(SkiaSharp.SKSizeI)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Maui.Graphics.Color" />
      </Targets>
      <Member MemberName="ToSKColor">
        <MemberSignature Language="C#" Value="public static SkiaSharp.SKColor ToSKColor (this Microsoft.Maui.Graphics.Color color);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype SkiaSharp.SKColor ToSKColor(class Microsoft.Maui.Graphics.Color color) cil managed" />
        <MemberSignature Language="DocId" Value="M:SkiaSharp.Views.Maui.Extensions.ToSKColor(Microsoft.Maui.Graphics.Color)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>SkiaSharp.SKColor</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="color" Type="Microsoft.Maui.Graphics.Color" RefType="this" />
        </Parameters>
        <Docs>
          <param name="color">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="SkiaSharp.Views.Maui.Extensions" Member="M:SkiaSharp.Views.Maui.Extensions.ToSKColor(Microsoft.Maui.Graphics.Color)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Maui.Graphics.Color" />
      </Targets>
      <Member MemberName="ToSKColorF">
        <MemberSignature Language="C#" Value="public static SkiaSharp.SKColorF ToSKColorF (this Microsoft.Maui.Graphics.Color color);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype SkiaSharp.SKColorF ToSKColorF(class Microsoft.Maui.Graphics.Color color) cil managed" />
        <MemberSignature Language="DocId" Value="M:SkiaSharp.Views.Maui.Extensions.ToSKColorF(Microsoft.Maui.Graphics.Color)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>SkiaSharp.SKColorF</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="color" Type="Microsoft.Maui.Graphics.Color" RefType="this" />
        </Parameters>
        <Docs>
          <param name="color">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="SkiaSharp.Views.Maui.Extensions" Member="M:SkiaSharp.Views.Maui.Extensions.ToSKColorF(Microsoft.Maui.Graphics.Color)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Maui.Graphics.Point" />
      </Targets>
      <Member MemberName="ToSKPoint">
        <MemberSignature Language="C#" Value="public static SkiaSharp.SKPoint ToSKPoint (this Microsoft.Maui.Graphics.Point point);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype SkiaSharp.SKPoint ToSKPoint(valuetype Microsoft.Maui.Graphics.Point point) cil managed" />
        <MemberSignature Language="DocId" Value="M:SkiaSharp.Views.Maui.Extensions.ToSKPoint(Microsoft.Maui.Graphics.Point)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>SkiaSharp.SKPoint</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="point" Type="Microsoft.Maui.Graphics.Point" RefType="this" />
        </Parameters>
        <Docs>
          <param name="point">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="SkiaSharp.Views.Maui.Extensions" Member="M:SkiaSharp.Views.Maui.Extensions.ToSKPoint(Microsoft.Maui.Graphics.Point)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Maui.Graphics.PointF" />
      </Targets>
      <Member MemberName="ToSKPoint">
        <MemberSignature Language="C#" Value="public static SkiaSharp.SKPoint ToSKPoint (this Microsoft.Maui.Graphics.PointF point);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype SkiaSharp.SKPoint ToSKPoint(valuetype Microsoft.Maui.Graphics.PointF point) cil managed" />
        <MemberSignature Language="DocId" Value="M:SkiaSharp.Views.Maui.Extensions.ToSKPoint(Microsoft.Maui.Graphics.PointF)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>SkiaSharp.SKPoint</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="point" Type="Microsoft.Maui.Graphics.PointF" RefType="this" />
        </Parameters>
        <Docs>
          <param name="point">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="SkiaSharp.Views.Maui.Extensions" Member="M:SkiaSharp.Views.Maui.Extensions.ToSKPoint(Microsoft.Maui.Graphics.PointF)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Maui.Graphics.Rect" />
      </Targets>
      <Member MemberName="ToSKRect">
        <MemberSignature Language="C#" Value="public static SkiaSharp.SKRect ToSKRect (this Microsoft.Maui.Graphics.Rect rect);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype SkiaSharp.SKRect ToSKRect(valuetype Microsoft.Maui.Graphics.Rect rect) cil managed" />
        <MemberSignature Language="DocId" Value="M:SkiaSharp.Views.Maui.Extensions.ToSKRect(Microsoft.Maui.Graphics.Rect)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>SkiaSharp.SKRect</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="rect" Type="Microsoft.Maui.Graphics.Rect" RefType="this" />
        </Parameters>
        <Docs>
          <param name="rect">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="SkiaSharp.Views.Maui.Extensions" Member="M:SkiaSharp.Views.Maui.Extensions.ToSKRect(Microsoft.Maui.Graphics.Rect)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Maui.Graphics.RectF" />
      </Targets>
      <Member MemberName="ToSKRect">
        <MemberSignature Language="C#" Value="public static SkiaSharp.SKRect ToSKRect (this Microsoft.Maui.Graphics.RectF rect);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype SkiaSharp.SKRect ToSKRect(valuetype Microsoft.Maui.Graphics.RectF rect) cil managed" />
        <MemberSignature Language="DocId" Value="M:SkiaSharp.Views.Maui.Extensions.ToSKRect(Microsoft.Maui.Graphics.RectF)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>SkiaSharp.SKRect</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="rect" Type="Microsoft.Maui.Graphics.RectF" RefType="this" />
        </Parameters>
        <Docs>
          <param name="rect">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="SkiaSharp.Views.Maui.Extensions" Member="M:SkiaSharp.Views.Maui.Extensions.ToSKRect(Microsoft.Maui.Graphics.RectF)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Maui.Graphics.Size" />
      </Targets>
      <Member MemberName="ToSKSize">
        <MemberSignature Language="C#" Value="public static SkiaSharp.SKSize ToSKSize (this Microsoft.Maui.Graphics.Size size);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype SkiaSharp.SKSize ToSKSize(valuetype Microsoft.Maui.Graphics.Size size) cil managed" />
        <MemberSignature Language="DocId" Value="M:SkiaSharp.Views.Maui.Extensions.ToSKSize(Microsoft.Maui.Graphics.Size)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>SkiaSharp.SKSize</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="size" Type="Microsoft.Maui.Graphics.Size" RefType="this" />
        </Parameters>
        <Docs>
          <param name="size">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="SkiaSharp.Views.Maui.Extensions" Member="M:SkiaSharp.Views.Maui.Extensions.ToSKSize(Microsoft.Maui.Graphics.Size)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Maui.Graphics.SizeF" />
      </Targets>
      <Member MemberName="ToSKSize">
        <MemberSignature Language="C#" Value="public static SkiaSharp.SKSize ToSKSize (this Microsoft.Maui.Graphics.SizeF size);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype SkiaSharp.SKSize ToSKSize(valuetype Microsoft.Maui.Graphics.SizeF size) cil managed" />
        <MemberSignature Language="DocId" Value="M:SkiaSharp.Views.Maui.Extensions.ToSKSize(Microsoft.Maui.Graphics.SizeF)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>SkiaSharp.SKSize</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="size" Type="Microsoft.Maui.Graphics.SizeF" RefType="this" />
        </Parameters>
        <Docs>
          <param name="size">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="SkiaSharp.Views.Maui.Extensions" Member="M:SkiaSharp.Views.Maui.Extensions.ToSKSize(Microsoft.Maui.Graphics.SizeF)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:SkiaSharp.SKColor" />
      </Targets>
      <Member MemberName="ToColor">
        <MemberSignature Language="C#" Value="public static ElmSharp.Color ToColor (this SkiaSharp.SKColor color);" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype ElmSharp.Color ToColor(valuetype SkiaSharp.SKColor color) cil managed" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberSignature Language="DocId" Value="M:SkiaSharp.Views.Tizen.TizenExtensions.ToColor(SkiaSharp.SKColor)" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType FrameworkAlternate="skiasharp-views-1.60">ElmSharp.Color</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="color" Type="SkiaSharp.SKColor" Index="0" FrameworkAlternate="skiasharp-views-1.60" RefType="this" />
        </Parameters>
        <Docs>
          <param name="color">The SkiaSharp color.</param>
          <summary>Converts a SkiaSharp color into a Tizen color.</summary>
        </Docs>
        <Link Type="SkiaSharp.Views.Tizen.TizenExtensions" Member="M:SkiaSharp.Views.Tizen.TizenExtensions.ToColor(SkiaSharp.SKColor)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:SkiaSharp.SKPoint" />
      </Targets>
      <Member MemberName="ToPoint">
        <MemberSignature Language="C#" Value="public static ElmSharp.Point ToPoint (this SkiaSharp.SKPoint point);" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype ElmSharp.Point ToPoint(valuetype SkiaSharp.SKPoint point) cil managed" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberSignature Language="DocId" Value="M:SkiaSharp.Views.Tizen.TizenExtensions.ToPoint(SkiaSharp.SKPoint)" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType FrameworkAlternate="skiasharp-views-1.60">ElmSharp.Point</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="point" Type="SkiaSharp.SKPoint" Index="0" FrameworkAlternate="skiasharp-views-1.60" RefType="this" />
        </Parameters>
        <Docs>
          <param name="point">The SkiaSharp point.</param>
          <summary>Converts a SkiaSharp point into a Tizen point.</summary>
        </Docs>
        <Link Type="SkiaSharp.Views.Tizen.TizenExtensions" Member="M:SkiaSharp.Views.Tizen.TizenExtensions.ToPoint(SkiaSharp.SKPoint)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:SkiaSharp.SKPointI" />
      </Targets>
      <Member MemberName="ToPoint">
        <MemberSignature Language="C#" Value="public static ElmSharp.Point ToPoint (this SkiaSharp.SKPointI point);" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype ElmSharp.Point ToPoint(valuetype SkiaSharp.SKPointI point) cil managed" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberSignature Language="DocId" Value="M:SkiaSharp.Views.Tizen.TizenExtensions.ToPoint(SkiaSharp.SKPointI)" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType FrameworkAlternate="skiasharp-views-1.60">ElmSharp.Point</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="point" Type="SkiaSharp.SKPointI" Index="0" FrameworkAlternate="skiasharp-views-1.60" RefType="this" />
        </Parameters>
        <Docs>
          <param name="point">The SkiaSharp point.</param>
          <summary>Converts a SkiaSharp point into a Tizen point.</summary>
        </Docs>
        <Link Type="SkiaSharp.Views.Tizen.TizenExtensions" Member="M:SkiaSharp.Views.Tizen.TizenExtensions.ToPoint(SkiaSharp.SKPointI)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:SkiaSharp.SKRect" />
      </Targets>
      <Member MemberName="ToRect">
        <MemberSignature Language="C#" Value="public static ElmSharp.Rect ToRect (this SkiaSharp.SKRect rect);" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype ElmSharp.Rect ToRect(valuetype SkiaSharp.SKRect rect) cil managed" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberSignature Language="DocId" Value="M:SkiaSharp.Views.Tizen.TizenExtensions.ToRect(SkiaSharp.SKRect)" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType FrameworkAlternate="skiasharp-views-1.60">ElmSharp.Rect</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="rect" Type="SkiaSharp.SKRect" Index="0" FrameworkAlternate="skiasharp-views-1.60" RefType="this" />
        </Parameters>
        <Docs>
          <param name="rect">The SkiaSharp rectangle.</param>
          <summary>Converts a SkiaSharp rectangle into a Tizen rectangle.</summary>
        </Docs>
        <Link Type="SkiaSharp.Views.Tizen.TizenExtensions" Member="M:SkiaSharp.Views.Tizen.TizenExtensions.ToRect(SkiaSharp.SKRect)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:SkiaSharp.SKRectI" />
      </Targets>
      <Member MemberName="ToRect">
        <MemberSignature Language="C#" Value="public static ElmSharp.Rect ToRect (this SkiaSharp.SKRectI rect);" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype ElmSharp.Rect ToRect(valuetype SkiaSharp.SKRectI rect) cil managed" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberSignature Language="DocId" Value="M:SkiaSharp.Views.Tizen.TizenExtensions.ToRect(SkiaSharp.SKRectI)" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType FrameworkAlternate="skiasharp-views-1.60">ElmSharp.Rect</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="rect" Type="SkiaSharp.SKRectI" Index="0" FrameworkAlternate="skiasharp-views-1.60" RefType="this" />
        </Parameters>
        <Docs>
          <param name="rect">The SkiaSharp rectangle.</param>
          <summary>Converts a SkiaSharp rectangle into a Tizen rectangle.</summary>
        </Docs>
        <Link Type="SkiaSharp.Views.Tizen.TizenExtensions" Member="M:SkiaSharp.Views.Tizen.TizenExtensions.ToRect(SkiaSharp.SKRectI)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:SkiaSharp.SKSize" />
      </Targets>
      <Member MemberName="ToSize">
        <MemberSignature Language="C#" Value="public static ElmSharp.Size ToSize (this SkiaSharp.SKSize size);" FrameworkAlternate="skiasharp-views-1.68" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype ElmSharp.Size ToSize(valuetype SkiaSharp.SKSize size) cil managed" FrameworkAlternate="skiasharp-views-1.68" />
        <MemberSignature Language="DocId" Value="M:SkiaSharp.Views.Tizen.TizenExtensions.ToSize(SkiaSharp.SKSize)" FrameworkAlternate="skiasharp-views-1.68" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType FrameworkAlternate="skiasharp-views-1.68">ElmSharp.Size</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="size" Type="SkiaSharp.SKSize" RefType="this" Index="0" FrameworkAlternate="skiasharp-views-1.68;skiasharp-views-2.80;skiasharp-views-2.88" />
        </Parameters>
        <Docs>
          <param name="size">The SkiaSharp size.</param>
          <summary>Converts a SkiaSharp size into a Tizen size.</summary>
        </Docs>
        <Link Type="SkiaSharp.Views.Tizen.TizenExtensions" Member="M:SkiaSharp.Views.Tizen.TizenExtensions.ToSize(SkiaSharp.SKSize)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:SkiaSharp.SKSizeI" />
      </Targets>
      <Member MemberName="ToSize">
        <MemberSignature Language="C#" Value="public static ElmSharp.Size ToSize (this SkiaSharp.SKSizeI size);" FrameworkAlternate="skiasharp-views-1.68" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype ElmSharp.Size ToSize(valuetype SkiaSharp.SKSizeI size) cil managed" FrameworkAlternate="skiasharp-views-1.68" />
        <MemberSignature Language="DocId" Value="M:SkiaSharp.Views.Tizen.TizenExtensions.ToSize(SkiaSharp.SKSizeI)" FrameworkAlternate="skiasharp-views-1.68" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType FrameworkAlternate="skiasharp-views-1.68">ElmSharp.Size</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="size" Type="SkiaSharp.SKSizeI" RefType="this" Index="0" FrameworkAlternate="skiasharp-views-1.68;skiasharp-views-2.80;skiasharp-views-2.88" />
        </Parameters>
        <Docs>
          <param name="size">The SkiaSharp size.</param>
          <summary>Converts a SkiaSharp size into a Tizen size.</summary>
        </Docs>
        <Link Type="SkiaSharp.Views.Tizen.TizenExtensions" Member="M:SkiaSharp.Views.Tizen.TizenExtensions.ToSize(SkiaSharp.SKSizeI)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:ElmSharp.Color" />
      </Targets>
      <Member MemberName="ToSKColor">
        <MemberSignature Language="C#" Value="public static SkiaSharp.SKColor ToSKColor (this ElmSharp.Color color);" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype SkiaSharp.SKColor ToSKColor(valuetype ElmSharp.Color color) cil managed" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberSignature Language="DocId" Value="M:SkiaSharp.Views.Tizen.TizenExtensions.ToSKColor(ElmSharp.Color)" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType FrameworkAlternate="skiasharp-views-1.60">SkiaSharp.SKColor</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="color" Type="ElmSharp.Color" Index="0" FrameworkAlternate="skiasharp-views-1.60" RefType="this" />
        </Parameters>
        <Docs>
          <param name="color">The Tizen color.</param>
          <summary>Converts a Tizen color into a SkiaSharp color.</summary>
        </Docs>
        <Link Type="SkiaSharp.Views.Tizen.TizenExtensions" Member="M:SkiaSharp.Views.Tizen.TizenExtensions.ToSKColor(ElmSharp.Color)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:ElmSharp.Point" />
      </Targets>
      <Member MemberName="ToSKPoint">
        <MemberSignature Language="C#" Value="public static SkiaSharp.SKPoint ToSKPoint (this ElmSharp.Point point);" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype SkiaSharp.SKPoint ToSKPoint(valuetype ElmSharp.Point point) cil managed" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberSignature Language="DocId" Value="M:SkiaSharp.Views.Tizen.TizenExtensions.ToSKPoint(ElmSharp.Point)" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType FrameworkAlternate="skiasharp-views-1.60">SkiaSharp.SKPoint</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="point" Type="ElmSharp.Point" Index="0" FrameworkAlternate="skiasharp-views-1.60" RefType="this" />
        </Parameters>
        <Docs>
          <param name="point">The Tizen point.</param>
          <summary>Converts a Tizen point into a SkiaSharp point.</summary>
        </Docs>
        <Link Type="SkiaSharp.Views.Tizen.TizenExtensions" Member="M:SkiaSharp.Views.Tizen.TizenExtensions.ToSKPoint(ElmSharp.Point)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:ElmSharp.Point" />
      </Targets>
      <Member MemberName="ToSKPointI">
        <MemberSignature Language="C#" Value="public static SkiaSharp.SKPointI ToSKPointI (this ElmSharp.Point point);" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype SkiaSharp.SKPointI ToSKPointI(valuetype ElmSharp.Point point) cil managed" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberSignature Language="DocId" Value="M:SkiaSharp.Views.Tizen.TizenExtensions.ToSKPointI(ElmSharp.Point)" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType FrameworkAlternate="skiasharp-views-1.60">SkiaSharp.SKPointI</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="point" Type="ElmSharp.Point" Index="0" FrameworkAlternate="skiasharp-views-1.60" RefType="this" />
        </Parameters>
        <Docs>
          <param name="point">The Tizen point.</param>
          <summary>Converts a Tizen point into a SkiaSharp point.</summary>
        </Docs>
        <Link Type="SkiaSharp.Views.Tizen.TizenExtensions" Member="M:SkiaSharp.Views.Tizen.TizenExtensions.ToSKPointI(ElmSharp.Point)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:ElmSharp.Rect" />
      </Targets>
      <Member MemberName="ToSKRect">
        <MemberSignature Language="C#" Value="public static SkiaSharp.SKRect ToSKRect (this ElmSharp.Rect rect);" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype SkiaSharp.SKRect ToSKRect(valuetype ElmSharp.Rect rect) cil managed" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberSignature Language="DocId" Value="M:SkiaSharp.Views.Tizen.TizenExtensions.ToSKRect(ElmSharp.Rect)" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType FrameworkAlternate="skiasharp-views-1.60">SkiaSharp.SKRect</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="rect" Type="ElmSharp.Rect" Index="0" FrameworkAlternate="skiasharp-views-1.60" RefType="this" />
        </Parameters>
        <Docs>
          <param name="rect">The Tizen rectangle.</param>
          <summary>Converts a Tizen rectangle into a SkiaSharp rectangle.</summary>
        </Docs>
        <Link Type="SkiaSharp.Views.Tizen.TizenExtensions" Member="M:SkiaSharp.Views.Tizen.TizenExtensions.ToSKRect(ElmSharp.Rect)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:ElmSharp.Rect" />
      </Targets>
      <Member MemberName="ToSKRectI">
        <MemberSignature Language="C#" Value="public static SkiaSharp.SKRectI ToSKRectI (this ElmSharp.Rect rect);" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype SkiaSharp.SKRectI ToSKRectI(valuetype ElmSharp.Rect rect) cil managed" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberSignature Language="DocId" Value="M:SkiaSharp.Views.Tizen.TizenExtensions.ToSKRectI(ElmSharp.Rect)" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType FrameworkAlternate="skiasharp-views-1.60">SkiaSharp.SKRectI</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="rect" Type="ElmSharp.Rect" Index="0" FrameworkAlternate="skiasharp-views-1.60" RefType="this" />
        </Parameters>
        <Docs>
          <param name="rect">The Tizen rectangle.</param>
          <summary>Converts a Tizen rectangle into a SkiaSharp rectangle.</summary>
        </Docs>
        <Link Type="SkiaSharp.Views.Tizen.TizenExtensions" Member="M:SkiaSharp.Views.Tizen.TizenExtensions.ToSKRectI(ElmSharp.Rect)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:ElmSharp.Size" />
      </Targets>
      <Member MemberName="ToSKSize">
        <MemberSignature Language="C#" Value="public static SkiaSharp.SKSize ToSKSize (this ElmSharp.Size size);" FrameworkAlternate="skiasharp-views-1.68" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype SkiaSharp.SKSize ToSKSize(valuetype ElmSharp.Size size) cil managed" FrameworkAlternate="skiasharp-views-1.68" />
        <MemberSignature Language="DocId" Value="M:SkiaSharp.Views.Tizen.TizenExtensions.ToSKSize(ElmSharp.Size)" FrameworkAlternate="skiasharp-views-1.68" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType FrameworkAlternate="skiasharp-views-1.68">SkiaSharp.SKSize</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="size" Type="ElmSharp.Size" RefType="this" Index="0" FrameworkAlternate="skiasharp-views-1.68;skiasharp-views-2.80;skiasharp-views-2.88" />
        </Parameters>
        <Docs>
          <param name="size">The Tizen size.</param>
          <summary>Converts a Tizen size into a SkiaSharp size.</summary>
        </Docs>
        <Link Type="SkiaSharp.Views.Tizen.TizenExtensions" Member="M:SkiaSharp.Views.Tizen.TizenExtensions.ToSKSize(ElmSharp.Size)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:ElmSharp.Size" />
      </Targets>
      <Member MemberName="ToSKSizeI">
        <MemberSignature Language="C#" Value="public static SkiaSharp.SKSizeI ToSKSizeI (this ElmSharp.Size size);" FrameworkAlternate="skiasharp-views-1.68" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype SkiaSharp.SKSizeI ToSKSizeI(valuetype ElmSharp.Size size) cil managed" FrameworkAlternate="skiasharp-views-1.68" />
        <MemberSignature Language="DocId" Value="M:SkiaSharp.Views.Tizen.TizenExtensions.ToSKSizeI(ElmSharp.Size)" FrameworkAlternate="skiasharp-views-1.68" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType FrameworkAlternate="skiasharp-views-1.68">SkiaSharp.SKSizeI</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="size" Type="ElmSharp.Size" RefType="this" Index="0" FrameworkAlternate="skiasharp-views-1.68;skiasharp-views-2.80;skiasharp-views-2.88" />
        </Parameters>
        <Docs>
          <param name="size">The Tizen size.</param>
          <summary>Converts a Tizen size into a SkiaSharp size.</summary>
        </Docs>
        <Link Type="SkiaSharp.Views.Tizen.TizenExtensions" Member="M:SkiaSharp.Views.Tizen.TizenExtensions.ToSKSizeI(ElmSharp.Size)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:SkiaSharp.SKColor" />
      </Targets>
      <Member MemberName="ToCGColor">
        <MemberSignature Language="C#" Value="public static CoreGraphics.CGColor ToCGColor (this SkiaSharp.SKColor color);" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class CoreGraphics.CGColor ToCGColor(valuetype SkiaSharp.SKColor color) cil managed" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberSignature Language="DocId" Value="M:SkiaSharp.Views.tvOS.AppleExtensions.ToCGColor(SkiaSharp.SKColor)" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType FrameworkAlternate="skiasharp-views-1.60">CoreGraphics.CGColor</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="color" Type="SkiaSharp.SKColor" Index="0" FrameworkAlternate="skiasharp-views-1.60" RefType="this" />
        </Parameters>
        <Docs>
          <param name="color">The SkiaSharp color.</param>
          <summary>Converts a SkiaSharp color into a CoreGraphics color.</summary>
        </Docs>
        <Link Type="SkiaSharp.Views.tvOS.AppleExtensions" Member="M:SkiaSharp.Views.tvOS.AppleExtensions.ToCGColor(SkiaSharp.SKColor)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:SkiaSharp.SKColorF" />
      </Targets>
      <Member MemberName="ToCGColor">
        <MemberSignature Language="C#" Value="public static CoreGraphics.CGColor ToCGColor (this SkiaSharp.SKColorF color);" FrameworkAlternate="skiasharp-views-2.80" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class CoreGraphics.CGColor ToCGColor(valuetype SkiaSharp.SKColorF color) cil managed" FrameworkAlternate="skiasharp-views-2.80" />
        <MemberSignature Language="DocId" Value="M:SkiaSharp.Views.tvOS.AppleExtensions.ToCGColor(SkiaSharp.SKColorF)" FrameworkAlternate="skiasharp-views-2.80" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType FrameworkAlternate="skiasharp-views-2.80">CoreGraphics.CGColor</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="color" Type="SkiaSharp.SKColorF" RefType="this" Index="0" FrameworkAlternate="skiasharp-views-2.80;skiasharp-views-2.88" />
        </Parameters>
        <Docs>
          <param name="color">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="SkiaSharp.Views.tvOS.AppleExtensions" Member="M:SkiaSharp.Views.tvOS.AppleExtensions.ToCGColor(SkiaSharp.SKColorF)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:SkiaSharp.SKBitmap" />
      </Targets>
      <Member MemberName="ToCGImage">
        <MemberSignature Language="C#" Value="public static CoreGraphics.CGImage ToCGImage (this SkiaSharp.SKBitmap skiaBitmap);" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class CoreGraphics.CGImage ToCGImage(class SkiaSharp.SKBitmap skiaBitmap) cil managed" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberSignature Language="DocId" Value="M:SkiaSharp.Views.tvOS.AppleExtensions.ToCGImage(SkiaSharp.SKBitmap)" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType FrameworkAlternate="skiasharp-views-1.60">CoreGraphics.CGImage</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="skiaBitmap" Type="SkiaSharp.SKBitmap" Index="0" FrameworkAlternate="skiasharp-views-1.60" RefType="this" />
        </Parameters>
        <Docs>
          <param name="skiaBitmap">The SkiaSharp bitmap.</param>
          <summary>Converts a SkiaSharp bitmap into a CoreGraphics image.</summary>
        </Docs>
        <Link Type="SkiaSharp.Views.tvOS.AppleExtensions" Member="M:SkiaSharp.Views.tvOS.AppleExtensions.ToCGImage(SkiaSharp.SKBitmap)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:SkiaSharp.SKImage" />
      </Targets>
      <Member MemberName="ToCGImage">
        <MemberSignature Language="C#" Value="public static CoreGraphics.CGImage ToCGImage (this SkiaSharp.SKImage skiaImage);" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class CoreGraphics.CGImage ToCGImage(class SkiaSharp.SKImage skiaImage) cil managed" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberSignature Language="DocId" Value="M:SkiaSharp.Views.tvOS.AppleExtensions.ToCGImage(SkiaSharp.SKImage)" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType FrameworkAlternate="skiasharp-views-1.60">CoreGraphics.CGImage</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="skiaImage" Type="SkiaSharp.SKImage" Index="0" FrameworkAlternate="skiasharp-views-1.60" RefType="this" />
        </Parameters>
        <Docs>
          <param name="skiaImage">The SkiaSharp image.</param>
          <summary>Converts a SkiaSharp image into a CoreGraphics image.</summary>
        </Docs>
        <Link Type="SkiaSharp.Views.tvOS.AppleExtensions" Member="M:SkiaSharp.Views.tvOS.AppleExtensions.ToCGImage(SkiaSharp.SKImage)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:SkiaSharp.SKPicture" />
      </Targets>
      <Member MemberName="ToCGImage">
        <MemberSignature Language="C#" Value="public static CoreGraphics.CGImage ToCGImage (this SkiaSharp.SKPicture skiaPicture, SkiaSharp.SKSizeI dimensions);" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class CoreGraphics.CGImage ToCGImage(class SkiaSharp.SKPicture skiaPicture, valuetype SkiaSharp.SKSizeI dimensions) cil managed" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberSignature Language="DocId" Value="M:SkiaSharp.Views.tvOS.AppleExtensions.ToCGImage(SkiaSharp.SKPicture,SkiaSharp.SKSizeI)" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType FrameworkAlternate="skiasharp-views-1.60">CoreGraphics.CGImage</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="skiaPicture" Type="SkiaSharp.SKPicture" Index="0" FrameworkAlternate="skiasharp-views-1.60" RefType="this" />
          <Parameter Name="dimensions" Type="SkiaSharp.SKSizeI" Index="1" FrameworkAlternate="skiasharp-views-1.60" />
        </Parameters>
        <Docs>
          <param name="skiaPicture">The SkiaSharp picture.</param>
          <param name="dimensions">The dimensions of the picture.</param>
          <summary>Converts a SkiaSharp picture into a CoreGraphics image.</summary>
        </Docs>
        <Link Type="SkiaSharp.Views.tvOS.AppleExtensions" Member="M:SkiaSharp.Views.tvOS.AppleExtensions.ToCGImage(SkiaSharp.SKPicture,SkiaSharp.SKSizeI)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:SkiaSharp.SKPixmap" />
      </Targets>
      <Member MemberName="ToCGImage">
        <MemberSignature Language="C#" Value="public static CoreGraphics.CGImage ToCGImage (this SkiaSharp.SKPixmap skiaPixmap);" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class CoreGraphics.CGImage ToCGImage(class SkiaSharp.SKPixmap skiaPixmap) cil managed" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberSignature Language="DocId" Value="M:SkiaSharp.Views.tvOS.AppleExtensions.ToCGImage(SkiaSharp.SKPixmap)" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType FrameworkAlternate="skiasharp-views-1.60">CoreGraphics.CGImage</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="skiaPixmap" Type="SkiaSharp.SKPixmap" Index="0" FrameworkAlternate="skiasharp-views-1.60" RefType="this" />
        </Parameters>
        <Docs>
          <param name="skiaPixmap">The SkiaSharp pixmap.</param>
          <summary>Converts a SkiaSharp pixmap into a CoreGraphics image.</summary>
        </Docs>
        <Link Type="SkiaSharp.Views.tvOS.AppleExtensions" Member="M:SkiaSharp.Views.tvOS.AppleExtensions.ToCGImage(SkiaSharp.SKPixmap)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:SkiaSharp.SKColor" />
      </Targets>
      <Member MemberName="ToCIColor">
        <MemberSignature Language="C#" Value="public static CoreImage.CIColor ToCIColor (this SkiaSharp.SKColor color);" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class CoreImage.CIColor ToCIColor(valuetype SkiaSharp.SKColor color) cil managed" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberSignature Language="DocId" Value="M:SkiaSharp.Views.tvOS.AppleExtensions.ToCIColor(SkiaSharp.SKColor)" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType FrameworkAlternate="skiasharp-views-1.60">CoreImage.CIColor</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="color" Type="SkiaSharp.SKColor" Index="0" FrameworkAlternate="skiasharp-views-1.60" RefType="this" />
        </Parameters>
        <Docs>
          <param name="color">The SkiaSharp color.</param>
          <summary>Converts a SkiaSharp color into a CoreImage color.</summary>
        </Docs>
        <Link Type="SkiaSharp.Views.tvOS.AppleExtensions" Member="M:SkiaSharp.Views.tvOS.AppleExtensions.ToCIColor(SkiaSharp.SKColor)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:SkiaSharp.SKColorF" />
      </Targets>
      <Member MemberName="ToCIColor">
        <MemberSignature Language="C#" Value="public static CoreImage.CIColor ToCIColor (this SkiaSharp.SKColorF color);" FrameworkAlternate="skiasharp-views-2.80" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class CoreImage.CIColor ToCIColor(valuetype SkiaSharp.SKColorF color) cil managed" FrameworkAlternate="skiasharp-views-2.80" />
        <MemberSignature Language="DocId" Value="M:SkiaSharp.Views.tvOS.AppleExtensions.ToCIColor(SkiaSharp.SKColorF)" FrameworkAlternate="skiasharp-views-2.80" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType FrameworkAlternate="skiasharp-views-2.80">CoreImage.CIColor</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="color" Type="SkiaSharp.SKColorF" RefType="this" Index="0" FrameworkAlternate="skiasharp-views-2.80;skiasharp-views-2.88" />
        </Parameters>
        <Docs>
          <param name="color">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="SkiaSharp.Views.tvOS.AppleExtensions" Member="M:SkiaSharp.Views.tvOS.AppleExtensions.ToCIColor(SkiaSharp.SKColorF)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:SkiaSharp.SKBitmap" />
      </Targets>
      <Member MemberName="ToCIImage">
        <MemberSignature Language="C#" Value="public static CoreImage.CIImage ToCIImage (this SkiaSharp.SKBitmap skiaBitmap);" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class CoreImage.CIImage ToCIImage(class SkiaSharp.SKBitmap skiaBitmap) cil managed" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberSignature Language="DocId" Value="M:SkiaSharp.Views.tvOS.AppleExtensions.ToCIImage(SkiaSharp.SKBitmap)" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType FrameworkAlternate="skiasharp-views-1.60">CoreImage.CIImage</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="skiaBitmap" Type="SkiaSharp.SKBitmap" Index="0" FrameworkAlternate="skiasharp-views-1.60" RefType="this" />
        </Parameters>
        <Docs>
          <param name="skiaBitmap">The SkiaSharp bitmap.</param>
          <summary>Converts a SkiaSharp bitmap into a CoreImage image.</summary>
        </Docs>
        <Link Type="SkiaSharp.Views.tvOS.AppleExtensions" Member="M:SkiaSharp.Views.tvOS.AppleExtensions.ToCIImage(SkiaSharp.SKBitmap)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:SkiaSharp.SKImage" />
      </Targets>
      <Member MemberName="ToCIImage">
        <MemberSignature Language="C#" Value="public static CoreImage.CIImage ToCIImage (this SkiaSharp.SKImage skiaImage);" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class CoreImage.CIImage ToCIImage(class SkiaSharp.SKImage skiaImage) cil managed" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberSignature Language="DocId" Value="M:SkiaSharp.Views.tvOS.AppleExtensions.ToCIImage(SkiaSharp.SKImage)" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType FrameworkAlternate="skiasharp-views-1.60">CoreImage.CIImage</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="skiaImage" Type="SkiaSharp.SKImage" Index="0" FrameworkAlternate="skiasharp-views-1.60" RefType="this" />
        </Parameters>
        <Docs>
          <param name="skiaImage">The SkiaSharp image.</param>
          <summary>Converts a SkiaSharp image into a CoreImage image.</summary>
        </Docs>
        <Link Type="SkiaSharp.Views.tvOS.AppleExtensions" Member="M:SkiaSharp.Views.tvOS.AppleExtensions.ToCIImage(SkiaSharp.SKImage)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:SkiaSharp.SKPicture" />
      </Targets>
      <Member MemberName="ToCIImage">
        <MemberSignature Language="C#" Value="public static CoreImage.CIImage ToCIImage (this SkiaSharp.SKPicture skiaPicture, SkiaSharp.SKSizeI dimensions);" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class CoreImage.CIImage ToCIImage(class SkiaSharp.SKPicture skiaPicture, valuetype SkiaSharp.SKSizeI dimensions) cil managed" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberSignature Language="DocId" Value="M:SkiaSharp.Views.tvOS.AppleExtensions.ToCIImage(SkiaSharp.SKPicture,SkiaSharp.SKSizeI)" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType FrameworkAlternate="skiasharp-views-1.60">CoreImage.CIImage</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="skiaPicture" Type="SkiaSharp.SKPicture" Index="0" FrameworkAlternate="skiasharp-views-1.60" RefType="this" />
          <Parameter Name="dimensions" Type="SkiaSharp.SKSizeI" Index="1" FrameworkAlternate="skiasharp-views-1.60" />
        </Parameters>
        <Docs>
          <param name="skiaPicture">The SkiaSharp picture.</param>
          <param name="dimensions">The dimensions of the picture.</param>
          <summary>Converts a SkiaSharp picture into a CoreImage image.</summary>
        </Docs>
        <Link Type="SkiaSharp.Views.tvOS.AppleExtensions" Member="M:SkiaSharp.Views.tvOS.AppleExtensions.ToCIImage(SkiaSharp.SKPicture,SkiaSharp.SKSizeI)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:SkiaSharp.SKPixmap" />
      </Targets>
      <Member MemberName="ToCIImage">
        <MemberSignature Language="C#" Value="public static CoreImage.CIImage ToCIImage (this SkiaSharp.SKPixmap skiaPixmap);" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class CoreImage.CIImage ToCIImage(class SkiaSharp.SKPixmap skiaPixmap) cil managed" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberSignature Language="DocId" Value="M:SkiaSharp.Views.tvOS.AppleExtensions.ToCIImage(SkiaSharp.SKPixmap)" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType FrameworkAlternate="skiasharp-views-1.60">CoreImage.CIImage</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="skiaPixmap" Type="SkiaSharp.SKPixmap" Index="0" FrameworkAlternate="skiasharp-views-1.60" RefType="this" />
        </Parameters>
        <Docs>
          <param name="skiaPixmap">The SkiaSharp pixmap.</param>
          <summary>Converts a SkiaSharp pixmap into a CoreImage image.</summary>
        </Docs>
        <Link Type="SkiaSharp.Views.tvOS.AppleExtensions" Member="M:SkiaSharp.Views.tvOS.AppleExtensions.ToCIImage(SkiaSharp.SKPixmap)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:SkiaSharp.SKData" />
      </Targets>
      <Member MemberName="ToNSData">
        <MemberSignature Language="C#" Value="public static Foundation.NSData ToNSData (this SkiaSharp.SKData skiaData);" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Foundation.NSData ToNSData(class SkiaSharp.SKData skiaData) cil managed" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberSignature Language="DocId" Value="M:SkiaSharp.Views.tvOS.AppleExtensions.ToNSData(SkiaSharp.SKData)" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType FrameworkAlternate="skiasharp-views-1.60">Foundation.NSData</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="skiaData" Type="SkiaSharp.SKData" Index="0" FrameworkAlternate="skiasharp-views-1.60" RefType="this" />
        </Parameters>
        <Docs>
          <param name="skiaData">The SkiaSharp data object.</param>
          <summary>Converts a SkiaSharp data object into a NSData.</summary>
        </Docs>
        <Link Type="SkiaSharp.Views.tvOS.AppleExtensions" Member="M:SkiaSharp.Views.tvOS.AppleExtensions.ToNSData(SkiaSharp.SKData)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:SkiaSharp.SKPoint" />
      </Targets>
      <Member MemberName="ToPoint">
        <MemberSignature Language="C#" Value="public static CoreGraphics.CGPoint ToPoint (this SkiaSharp.SKPoint point);" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype CoreGraphics.CGPoint ToPoint(valuetype SkiaSharp.SKPoint point) cil managed" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberSignature Language="DocId" Value="M:SkiaSharp.Views.tvOS.AppleExtensions.ToPoint(SkiaSharp.SKPoint)" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType FrameworkAlternate="skiasharp-views-1.60">CoreGraphics.CGPoint</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="point" Type="SkiaSharp.SKPoint" Index="0" FrameworkAlternate="skiasharp-views-1.60" RefType="this" />
        </Parameters>
        <Docs>
          <param name="point">The SkiaSharp point.</param>
          <summary>Converts a SkiaSharp point into a CoreGraphics point.</summary>
        </Docs>
        <Link Type="SkiaSharp.Views.tvOS.AppleExtensions" Member="M:SkiaSharp.Views.tvOS.AppleExtensions.ToPoint(SkiaSharp.SKPoint)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:SkiaSharp.SKRect" />
      </Targets>
      <Member MemberName="ToRect">
        <MemberSignature Language="C#" Value="public static CoreGraphics.CGRect ToRect (this SkiaSharp.SKRect rect);" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype CoreGraphics.CGRect ToRect(valuetype SkiaSharp.SKRect rect) cil managed" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberSignature Language="DocId" Value="M:SkiaSharp.Views.tvOS.AppleExtensions.ToRect(SkiaSharp.SKRect)" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType FrameworkAlternate="skiasharp-views-1.60">CoreGraphics.CGRect</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="rect" Type="SkiaSharp.SKRect" Index="0" FrameworkAlternate="skiasharp-views-1.60" RefType="this" />
        </Parameters>
        <Docs>
          <param name="rect">The SkiaSharp rectangle.</param>
          <summary>Converts a SkiaSharp rectangle into a CoreGraphics rectangle.</summary>
        </Docs>
        <Link Type="SkiaSharp.Views.tvOS.AppleExtensions" Member="M:SkiaSharp.Views.tvOS.AppleExtensions.ToRect(SkiaSharp.SKRect)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:SkiaSharp.SKSize" />
      </Targets>
      <Member MemberName="ToSize">
        <MemberSignature Language="C#" Value="public static CoreGraphics.CGSize ToSize (this SkiaSharp.SKSize size);" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype CoreGraphics.CGSize ToSize(valuetype SkiaSharp.SKSize size) cil managed" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberSignature Language="DocId" Value="M:SkiaSharp.Views.tvOS.AppleExtensions.ToSize(SkiaSharp.SKSize)" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType FrameworkAlternate="skiasharp-views-1.60">CoreGraphics.CGSize</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="size" Type="SkiaSharp.SKSize" Index="0" FrameworkAlternate="skiasharp-views-1.60" RefType="this" />
        </Parameters>
        <Docs>
          <param name="size">The SkiaSharp size.</param>
          <summary>Converts a SkiaSharp size into a CoreGraphics size.</summary>
        </Docs>
        <Link Type="SkiaSharp.Views.tvOS.AppleExtensions" Member="M:SkiaSharp.Views.tvOS.AppleExtensions.ToSize(SkiaSharp.SKSize)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:CoreGraphics.CGImage" />
      </Targets>
      <Member MemberName="ToSKBitmap">
        <MemberSignature Language="C#" Value="public static SkiaSharp.SKBitmap ToSKBitmap (this CoreGraphics.CGImage cgImage);" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class SkiaSharp.SKBitmap ToSKBitmap(class CoreGraphics.CGImage cgImage) cil managed" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberSignature Language="DocId" Value="M:SkiaSharp.Views.tvOS.AppleExtensions.ToSKBitmap(CoreGraphics.CGImage)" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType FrameworkAlternate="skiasharp-views-1.60">SkiaSharp.SKBitmap</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="cgImage" Type="CoreGraphics.CGImage" Index="0" FrameworkAlternate="skiasharp-views-1.60" RefType="this" />
        </Parameters>
        <Docs>
          <param name="cgImage">The CoreGraphics image.</param>
          <summary>Converts a CoreGraphics image into a SkiaSharp bitmap.</summary>
        </Docs>
        <Link Type="SkiaSharp.Views.tvOS.AppleExtensions" Member="M:SkiaSharp.Views.tvOS.AppleExtensions.ToSKBitmap(CoreGraphics.CGImage)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:CoreImage.CIImage" />
      </Targets>
      <Member MemberName="ToSKBitmap">
        <MemberSignature Language="C#" Value="public static SkiaSharp.SKBitmap ToSKBitmap (this CoreImage.CIImage ciImage);" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class SkiaSharp.SKBitmap ToSKBitmap(class CoreImage.CIImage ciImage) cil managed" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberSignature Language="DocId" Value="M:SkiaSharp.Views.tvOS.AppleExtensions.ToSKBitmap(CoreImage.CIImage)" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType FrameworkAlternate="skiasharp-views-1.60">SkiaSharp.SKBitmap</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="ciImage" Type="CoreImage.CIImage" Index="0" FrameworkAlternate="skiasharp-views-1.60" RefType="this" />
        </Parameters>
        <Docs>
          <param name="ciImage">The CoreImage image.</param>
          <summary>Converts a CoreImage image into a SkiaSharp bitmap.</summary>
        </Docs>
        <Link Type="SkiaSharp.Views.tvOS.AppleExtensions" Member="M:SkiaSharp.Views.tvOS.AppleExtensions.ToSKBitmap(CoreImage.CIImage)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:CoreGraphics.CGColor" />
      </Targets>
      <Member MemberName="ToSKColor">
        <MemberSignature Language="C#" Value="public static SkiaSharp.SKColor ToSKColor (this CoreGraphics.CGColor color);" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype SkiaSharp.SKColor ToSKColor(class CoreGraphics.CGColor color) cil managed" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberSignature Language="DocId" Value="M:SkiaSharp.Views.tvOS.AppleExtensions.ToSKColor(CoreGraphics.CGColor)" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType FrameworkAlternate="skiasharp-views-1.60">SkiaSharp.SKColor</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="color" Type="CoreGraphics.CGColor" Index="0" FrameworkAlternate="skiasharp-views-1.60" RefType="this" />
        </Parameters>
        <Docs>
          <param name="color">The CoreGraphics color.</param>
          <summary>Converts a CoreGraphics color into a SkiaSharp color.</summary>
        </Docs>
        <Link Type="SkiaSharp.Views.tvOS.AppleExtensions" Member="M:SkiaSharp.Views.tvOS.AppleExtensions.ToSKColor(CoreGraphics.CGColor)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:CoreImage.CIColor" />
      </Targets>
      <Member MemberName="ToSKColor">
        <MemberSignature Language="C#" Value="public static SkiaSharp.SKColor ToSKColor (this CoreImage.CIColor color);" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype SkiaSharp.SKColor ToSKColor(class CoreImage.CIColor color) cil managed" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberSignature Language="DocId" Value="M:SkiaSharp.Views.tvOS.AppleExtensions.ToSKColor(CoreImage.CIColor)" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType FrameworkAlternate="skiasharp-views-1.60">SkiaSharp.SKColor</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="color" Type="CoreImage.CIColor" Index="0" FrameworkAlternate="skiasharp-views-1.60" RefType="this" />
        </Parameters>
        <Docs>
          <param name="color">The CoreImage color.</param>
          <summary>Converts a CoreImage color into a SkiaSharp color.</summary>
        </Docs>
        <Link Type="SkiaSharp.Views.tvOS.AppleExtensions" Member="M:SkiaSharp.Views.tvOS.AppleExtensions.ToSKColor(CoreImage.CIColor)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:CoreGraphics.CGColor" />
      </Targets>
      <Member MemberName="ToSKColorF">
        <MemberSignature Language="C#" Value="public static SkiaSharp.SKColorF ToSKColorF (this CoreGraphics.CGColor color);" FrameworkAlternate="skiasharp-views-2.80" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype SkiaSharp.SKColorF ToSKColorF(class CoreGraphics.CGColor color) cil managed" FrameworkAlternate="skiasharp-views-2.80" />
        <MemberSignature Language="DocId" Value="M:SkiaSharp.Views.tvOS.AppleExtensions.ToSKColorF(CoreGraphics.CGColor)" FrameworkAlternate="skiasharp-views-2.80" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType FrameworkAlternate="skiasharp-views-2.80">SkiaSharp.SKColorF</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="color" Type="CoreGraphics.CGColor" RefType="this" Index="0" FrameworkAlternate="skiasharp-views-2.80;skiasharp-views-2.88" />
        </Parameters>
        <Docs>
          <param name="color">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="SkiaSharp.Views.tvOS.AppleExtensions" Member="M:SkiaSharp.Views.tvOS.AppleExtensions.ToSKColorF(CoreGraphics.CGColor)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:CoreImage.CIColor" />
      </Targets>
      <Member MemberName="ToSKColorF">
        <MemberSignature Language="C#" Value="public static SkiaSharp.SKColorF ToSKColorF (this CoreImage.CIColor color);" FrameworkAlternate="skiasharp-views-2.80" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype SkiaSharp.SKColorF ToSKColorF(class CoreImage.CIColor color) cil managed" FrameworkAlternate="skiasharp-views-2.80" />
        <MemberSignature Language="DocId" Value="M:SkiaSharp.Views.tvOS.AppleExtensions.ToSKColorF(CoreImage.CIColor)" FrameworkAlternate="skiasharp-views-2.80" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType FrameworkAlternate="skiasharp-views-2.80">SkiaSharp.SKColorF</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="color" Type="CoreImage.CIColor" RefType="this" Index="0" FrameworkAlternate="skiasharp-views-2.80;skiasharp-views-2.88" />
        </Parameters>
        <Docs>
          <param name="color">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="SkiaSharp.Views.tvOS.AppleExtensions" Member="M:SkiaSharp.Views.tvOS.AppleExtensions.ToSKColorF(CoreImage.CIColor)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Foundation.NSData" />
      </Targets>
      <Member MemberName="ToSKData">
        <MemberSignature Language="C#" Value="public static SkiaSharp.SKData ToSKData (this Foundation.NSData nsData);" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class SkiaSharp.SKData ToSKData(class Foundation.NSData nsData) cil managed" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberSignature Language="DocId" Value="M:SkiaSharp.Views.tvOS.AppleExtensions.ToSKData(Foundation.NSData)" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType FrameworkAlternate="skiasharp-views-1.60">SkiaSharp.SKData</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="nsData" Type="Foundation.NSData" Index="0" FrameworkAlternate="skiasharp-views-1.60" RefType="this" />
        </Parameters>
        <Docs>
          <param name="nsData">The NSData.</param>
          <summary>Converts a NSData into a SkiaSharp data object.</summary>
        </Docs>
        <Link Type="SkiaSharp.Views.tvOS.AppleExtensions" Member="M:SkiaSharp.Views.tvOS.AppleExtensions.ToSKData(Foundation.NSData)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:CoreGraphics.CGImage" />
      </Targets>
      <Member MemberName="ToSKImage">
        <MemberSignature Language="C#" Value="public static SkiaSharp.SKImage ToSKImage (this CoreGraphics.CGImage cgImage);" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class SkiaSharp.SKImage ToSKImage(class CoreGraphics.CGImage cgImage) cil managed" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberSignature Language="DocId" Value="M:SkiaSharp.Views.tvOS.AppleExtensions.ToSKImage(CoreGraphics.CGImage)" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType FrameworkAlternate="skiasharp-views-1.60">SkiaSharp.SKImage</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="cgImage" Type="CoreGraphics.CGImage" Index="0" FrameworkAlternate="skiasharp-views-1.60" RefType="this" />
        </Parameters>
        <Docs>
          <param name="cgImage">The CoreGraphics image.</param>
          <summary>Converts a CoreGraphics image into a SkiaSharp image.</summary>
        </Docs>
        <Link Type="SkiaSharp.Views.tvOS.AppleExtensions" Member="M:SkiaSharp.Views.tvOS.AppleExtensions.ToSKImage(CoreGraphics.CGImage)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:CoreImage.CIImage" />
      </Targets>
      <Member MemberName="ToSKImage">
        <MemberSignature Language="C#" Value="public static SkiaSharp.SKImage ToSKImage (this CoreImage.CIImage ciImage);" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class SkiaSharp.SKImage ToSKImage(class CoreImage.CIImage ciImage) cil managed" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberSignature Language="DocId" Value="M:SkiaSharp.Views.tvOS.AppleExtensions.ToSKImage(CoreImage.CIImage)" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType FrameworkAlternate="skiasharp-views-1.60">SkiaSharp.SKImage</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="ciImage" Type="CoreImage.CIImage" Index="0" FrameworkAlternate="skiasharp-views-1.60" RefType="this" />
        </Parameters>
        <Docs>
          <param name="ciImage">The CoreImage image.</param>
          <summary>Converts a CoreImage image into a SkiaSharp image.</summary>
        </Docs>
        <Link Type="SkiaSharp.Views.tvOS.AppleExtensions" Member="M:SkiaSharp.Views.tvOS.AppleExtensions.ToSKImage(CoreImage.CIImage)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:CoreGraphics.CGImage" />
      </Targets>
      <Member MemberName="ToSKPixmap">
        <MemberSignature Language="C#" Value="public static void ToSKPixmap (this CoreGraphics.CGImage cgImage, SkiaSharp.SKPixmap pixmap);" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ToSKPixmap(class CoreGraphics.CGImage cgImage, class SkiaSharp.SKPixmap pixmap) cil managed" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberSignature Language="DocId" Value="M:SkiaSharp.Views.tvOS.AppleExtensions.ToSKPixmap(CoreGraphics.CGImage,SkiaSharp.SKPixmap)" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType FrameworkAlternate="skiasharp-views-1.60">System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="cgImage" Type="CoreGraphics.CGImage" Index="0" FrameworkAlternate="skiasharp-views-1.60" RefType="this" />
          <Parameter Name="pixmap" Type="SkiaSharp.SKPixmap" Index="1" FrameworkAlternate="skiasharp-views-1.60" />
        </Parameters>
        <Docs>
          <param name="cgImage">The CoreGraphics image.</param>
          <param name="pixmap">The SkiaSharp pixmap to hold the copy of the image data.</param>
          <summary>Converts a CoreGraphics image into a SkiaSharp pixmap.</summary>
        </Docs>
        <Link Type="SkiaSharp.Views.tvOS.AppleExtensions" Member="M:SkiaSharp.Views.tvOS.AppleExtensions.ToSKPixmap(CoreGraphics.CGImage,SkiaSharp.SKPixmap)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:CoreImage.CIImage" />
      </Targets>
      <Member MemberName="ToSKPixmap">
        <MemberSignature Language="C#" Value="public static void ToSKPixmap (this CoreImage.CIImage ciImage, SkiaSharp.SKPixmap pixmap);" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ToSKPixmap(class CoreImage.CIImage ciImage, class SkiaSharp.SKPixmap pixmap) cil managed" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberSignature Language="DocId" Value="M:SkiaSharp.Views.tvOS.AppleExtensions.ToSKPixmap(CoreImage.CIImage,SkiaSharp.SKPixmap)" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType FrameworkAlternate="skiasharp-views-1.60">System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="ciImage" Type="CoreImage.CIImage" Index="0" FrameworkAlternate="skiasharp-views-1.60" RefType="this" />
          <Parameter Name="pixmap" Type="SkiaSharp.SKPixmap" Index="1" FrameworkAlternate="skiasharp-views-1.60" />
        </Parameters>
        <Docs>
          <param name="ciImage">The CoreImage image.</param>
          <param name="pixmap">The SkiaSharp pixmap to hold the copy of the image data.</param>
          <summary>Converts a CoreImage image into a SkiaSharp pixmap.</summary>
        </Docs>
        <Link Type="SkiaSharp.Views.tvOS.AppleExtensions" Member="M:SkiaSharp.Views.tvOS.AppleExtensions.ToSKPixmap(CoreImage.CIImage,SkiaSharp.SKPixmap)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:CoreGraphics.CGPoint" />
      </Targets>
      <Member MemberName="ToSKPoint">
        <MemberSignature Language="C#" Value="public static SkiaSharp.SKPoint ToSKPoint (this CoreGraphics.CGPoint point);" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype SkiaSharp.SKPoint ToSKPoint(valuetype CoreGraphics.CGPoint point) cil managed" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberSignature Language="DocId" Value="M:SkiaSharp.Views.tvOS.AppleExtensions.ToSKPoint(CoreGraphics.CGPoint)" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType FrameworkAlternate="skiasharp-views-1.60">SkiaSharp.SKPoint</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="point" Type="CoreGraphics.CGPoint" Index="0" FrameworkAlternate="skiasharp-views-1.60" RefType="this" />
        </Parameters>
        <Docs>
          <param name="point">The CoreGraphics point.</param>
          <summary>Converts a CoreGraphics point into a SkiaSharp point.</summary>
        </Docs>
        <Link Type="SkiaSharp.Views.tvOS.AppleExtensions" Member="M:SkiaSharp.Views.tvOS.AppleExtensions.ToSKPoint(CoreGraphics.CGPoint)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:CoreGraphics.CGRect" />
      </Targets>
      <Member MemberName="ToSKRect">
        <MemberSignature Language="C#" Value="public static SkiaSharp.SKRect ToSKRect (this CoreGraphics.CGRect rect);" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype SkiaSharp.SKRect ToSKRect(valuetype CoreGraphics.CGRect rect) cil managed" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberSignature Language="DocId" Value="M:SkiaSharp.Views.tvOS.AppleExtensions.ToSKRect(CoreGraphics.CGRect)" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType FrameworkAlternate="skiasharp-views-1.60">SkiaSharp.SKRect</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="rect" Type="CoreGraphics.CGRect" Index="0" FrameworkAlternate="skiasharp-views-1.60" RefType="this" />
        </Parameters>
        <Docs>
          <param name="rect">The CoreGraphics rectangle.</param>
          <summary>Converts a CoreGraphics rectangle into a SkiaSharp rectangle.</summary>
        </Docs>
        <Link Type="SkiaSharp.Views.tvOS.AppleExtensions" Member="M:SkiaSharp.Views.tvOS.AppleExtensions.ToSKRect(CoreGraphics.CGRect)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:CoreGraphics.CGSize" />
      </Targets>
      <Member MemberName="ToSKSize">
        <MemberSignature Language="C#" Value="public static SkiaSharp.SKSize ToSKSize (this CoreGraphics.CGSize size);" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype SkiaSharp.SKSize ToSKSize(valuetype CoreGraphics.CGSize size) cil managed" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberSignature Language="DocId" Value="M:SkiaSharp.Views.tvOS.AppleExtensions.ToSKSize(CoreGraphics.CGSize)" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType FrameworkAlternate="skiasharp-views-1.60">SkiaSharp.SKSize</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="size" Type="CoreGraphics.CGSize" Index="0" FrameworkAlternate="skiasharp-views-1.60" RefType="this" />
        </Parameters>
        <Docs>
          <param name="size">The CoreGraphics size.</param>
          <summary>Converts a CoreGraphics size into a SkiaSharp size.</summary>
        </Docs>
        <Link Type="SkiaSharp.Views.tvOS.AppleExtensions" Member="M:SkiaSharp.Views.tvOS.AppleExtensions.ToSKSize(CoreGraphics.CGSize)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:SkiaSharp.SKPoint" />
      </Targets>
      <Member MemberName="ToDrawingPoint">
        <MemberSignature Language="C#" Value="public static System.Drawing.PointF ToDrawingPoint (this SkiaSharp.SKPoint point);" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Drawing.PointF ToDrawingPoint(valuetype SkiaSharp.SKPoint point) cil managed" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberSignature Language="DocId" Value="M:SkiaSharp.Views.tvOS.Extensions.ToDrawingPoint(SkiaSharp.SKPoint)" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType FrameworkAlternate="skiasharp-views-1.60">System.Drawing.PointF</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="point" Type="SkiaSharp.SKPoint" Index="0" FrameworkAlternate="skiasharp-views-1.60" RefType="this" />
        </Parameters>
        <Docs>
          <param name="point">The SkiaSharp point.</param>
          <summary>Converts a SkiaSharp point into a System.Drawing point.</summary>
        </Docs>
        <Link Type="SkiaSharp.Views.tvOS.Extensions" Member="M:SkiaSharp.Views.tvOS.Extensions.ToDrawingPoint(SkiaSharp.SKPoint)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:SkiaSharp.SKPointI" />
      </Targets>
      <Member MemberName="ToDrawingPoint">
        <MemberSignature Language="C#" Value="public static System.Drawing.Point ToDrawingPoint (this SkiaSharp.SKPointI point);" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Drawing.Point ToDrawingPoint(valuetype SkiaSharp.SKPointI point) cil managed" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberSignature Language="DocId" Value="M:SkiaSharp.Views.tvOS.Extensions.ToDrawingPoint(SkiaSharp.SKPointI)" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType FrameworkAlternate="skiasharp-views-1.60">System.Drawing.Point</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="point" Type="SkiaSharp.SKPointI" Index="0" FrameworkAlternate="skiasharp-views-1.60" RefType="this" />
        </Parameters>
        <Docs>
          <param name="point">The SkiaSharp point.</param>
          <summary>Converts a SkiaSharp point into a System.Drawing point.</summary>
        </Docs>
        <Link Type="SkiaSharp.Views.tvOS.Extensions" Member="M:SkiaSharp.Views.tvOS.Extensions.ToDrawingPoint(SkiaSharp.SKPointI)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:SkiaSharp.SKRect" />
      </Targets>
      <Member MemberName="ToDrawingRect">
        <MemberSignature Language="C#" Value="public static System.Drawing.RectangleF ToDrawingRect (this SkiaSharp.SKRect rect);" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Drawing.RectangleF ToDrawingRect(valuetype SkiaSharp.SKRect rect) cil managed" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberSignature Language="DocId" Value="M:SkiaSharp.Views.tvOS.Extensions.ToDrawingRect(SkiaSharp.SKRect)" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType FrameworkAlternate="skiasharp-views-1.60">System.Drawing.RectangleF</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="rect" Type="SkiaSharp.SKRect" Index="0" FrameworkAlternate="skiasharp-views-1.60" RefType="this" />
        </Parameters>
        <Docs>
          <param name="rect">The SkiaSharp rectangle.</param>
          <summary>Converts a SkiaSharp rectangle into a System.Drawing rectangle.</summary>
        </Docs>
        <Link Type="SkiaSharp.Views.tvOS.Extensions" Member="M:SkiaSharp.Views.tvOS.Extensions.ToDrawingRect(SkiaSharp.SKRect)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:SkiaSharp.SKRectI" />
      </Targets>
      <Member MemberName="ToDrawingRect">
        <MemberSignature Language="C#" Value="public static System.Drawing.Rectangle ToDrawingRect (this SkiaSharp.SKRectI rect);" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Drawing.Rectangle ToDrawingRect(valuetype SkiaSharp.SKRectI rect) cil managed" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberSignature Language="DocId" Value="M:SkiaSharp.Views.tvOS.Extensions.ToDrawingRect(SkiaSharp.SKRectI)" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType FrameworkAlternate="skiasharp-views-1.60">System.Drawing.Rectangle</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="rect" Type="SkiaSharp.SKRectI" Index="0" FrameworkAlternate="skiasharp-views-1.60" RefType="this" />
        </Parameters>
        <Docs>
          <param name="rect">The SkiaSharp rectangle.</param>
          <summary>Converts a SkiaSharp rectangle into a System.Drawing rectangle.</summary>
        </Docs>
        <Link Type="SkiaSharp.Views.tvOS.Extensions" Member="M:SkiaSharp.Views.tvOS.Extensions.ToDrawingRect(SkiaSharp.SKRectI)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:SkiaSharp.SKSize" />
      </Targets>
      <Member MemberName="ToDrawingSize">
        <MemberSignature Language="C#" Value="public static System.Drawing.SizeF ToDrawingSize (this SkiaSharp.SKSize size);" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Drawing.SizeF ToDrawingSize(valuetype SkiaSharp.SKSize size) cil managed" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberSignature Language="DocId" Value="M:SkiaSharp.Views.tvOS.Extensions.ToDrawingSize(SkiaSharp.SKSize)" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType FrameworkAlternate="skiasharp-views-1.60">System.Drawing.SizeF</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="size" Type="SkiaSharp.SKSize" Index="0" FrameworkAlternate="skiasharp-views-1.60" RefType="this" />
        </Parameters>
        <Docs>
          <param name="size">The SkiaSharp size.</param>
          <summary>Converts a SkiaSharp size into a System.Drawing size.</summary>
        </Docs>
        <Link Type="SkiaSharp.Views.tvOS.Extensions" Member="M:SkiaSharp.Views.tvOS.Extensions.ToDrawingSize(SkiaSharp.SKSize)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:SkiaSharp.SKSizeI" />
      </Targets>
      <Member MemberName="ToDrawingSize">
        <MemberSignature Language="C#" Value="public static System.Drawing.Size ToDrawingSize (this SkiaSharp.SKSizeI size);" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Drawing.Size ToDrawingSize(valuetype SkiaSharp.SKSizeI size) cil managed" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberSignature Language="DocId" Value="M:SkiaSharp.Views.tvOS.Extensions.ToDrawingSize(SkiaSharp.SKSizeI)" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType FrameworkAlternate="skiasharp-views-1.60">System.Drawing.Size</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="size" Type="SkiaSharp.SKSizeI" Index="0" FrameworkAlternate="skiasharp-views-1.60" RefType="this" />
        </Parameters>
        <Docs>
          <param name="size">The SkiaSharp size.</param>
          <summary>Converts a SkiaSharp size into a System.Drawing size.</summary>
        </Docs>
        <Link Type="SkiaSharp.Views.tvOS.Extensions" Member="M:SkiaSharp.Views.tvOS.Extensions.ToDrawingSize(SkiaSharp.SKSizeI)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.Drawing.Point" />
      </Targets>
      <Member MemberName="ToSKPoint">
        <MemberSignature Language="C#" Value="public static SkiaSharp.SKPointI ToSKPoint (this System.Drawing.Point point);" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype SkiaSharp.SKPointI ToSKPoint(valuetype System.Drawing.Point point) cil managed" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberSignature Language="DocId" Value="M:SkiaSharp.Views.tvOS.Extensions.ToSKPoint(System.Drawing.Point)" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType FrameworkAlternate="skiasharp-views-1.60">SkiaSharp.SKPointI</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="point" Type="System.Drawing.Point" Index="0" FrameworkAlternate="skiasharp-views-1.60" RefType="this" />
        </Parameters>
        <Docs>
          <param name="point">The System.Drawing point.</param>
          <summary>Converts a System.Drawing point into a SkiaSharp point.</summary>
        </Docs>
        <Link Type="SkiaSharp.Views.tvOS.Extensions" Member="M:SkiaSharp.Views.tvOS.Extensions.ToSKPoint(System.Drawing.Point)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.Drawing.PointF" />
      </Targets>
      <Member MemberName="ToSKPoint">
        <MemberSignature Language="C#" Value="public static SkiaSharp.SKPoint ToSKPoint (this System.Drawing.PointF point);" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype SkiaSharp.SKPoint ToSKPoint(valuetype System.Drawing.PointF point) cil managed" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberSignature Language="DocId" Value="M:SkiaSharp.Views.tvOS.Extensions.ToSKPoint(System.Drawing.PointF)" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType FrameworkAlternate="skiasharp-views-1.60">SkiaSharp.SKPoint</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="point" Type="System.Drawing.PointF" Index="0" FrameworkAlternate="skiasharp-views-1.60" RefType="this" />
        </Parameters>
        <Docs>
          <param name="point">The System.Drawing point.</param>
          <summary>Converts a System.Drawing point into a SkiaSharp point.</summary>
        </Docs>
        <Link Type="SkiaSharp.Views.tvOS.Extensions" Member="M:SkiaSharp.Views.tvOS.Extensions.ToSKPoint(System.Drawing.PointF)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.Drawing.Rectangle" />
      </Targets>
      <Member MemberName="ToSKRect">
        <MemberSignature Language="C#" Value="public static SkiaSharp.SKRectI ToSKRect (this System.Drawing.Rectangle rect);" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype SkiaSharp.SKRectI ToSKRect(valuetype System.Drawing.Rectangle rect) cil managed" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberSignature Language="DocId" Value="M:SkiaSharp.Views.tvOS.Extensions.ToSKRect(System.Drawing.Rectangle)" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType FrameworkAlternate="skiasharp-views-1.60">SkiaSharp.SKRectI</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="rect" Type="System.Drawing.Rectangle" Index="0" FrameworkAlternate="skiasharp-views-1.60" RefType="this" />
        </Parameters>
        <Docs>
          <param name="rect">The System.Drawing rectangle.</param>
          <summary>Converts a System.Drawing rectangle into a SkiaSharp rectangle.</summary>
        </Docs>
        <Link Type="SkiaSharp.Views.tvOS.Extensions" Member="M:SkiaSharp.Views.tvOS.Extensions.ToSKRect(System.Drawing.Rectangle)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.Drawing.RectangleF" />
      </Targets>
      <Member MemberName="ToSKRect">
        <MemberSignature Language="C#" Value="public static SkiaSharp.SKRect ToSKRect (this System.Drawing.RectangleF rect);" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype SkiaSharp.SKRect ToSKRect(valuetype System.Drawing.RectangleF rect) cil managed" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberSignature Language="DocId" Value="M:SkiaSharp.Views.tvOS.Extensions.ToSKRect(System.Drawing.RectangleF)" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType FrameworkAlternate="skiasharp-views-1.60">SkiaSharp.SKRect</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="rect" Type="System.Drawing.RectangleF" Index="0" FrameworkAlternate="skiasharp-views-1.60" RefType="this" />
        </Parameters>
        <Docs>
          <param name="rect">The System.Drawing rectangle.</param>
          <summary>Converts a System.Drawing rectangle into a SkiaSharp rectangle.</summary>
        </Docs>
        <Link Type="SkiaSharp.Views.tvOS.Extensions" Member="M:SkiaSharp.Views.tvOS.Extensions.ToSKRect(System.Drawing.RectangleF)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.Drawing.Size" />
      </Targets>
      <Member MemberName="ToSKSize">
        <MemberSignature Language="C#" Value="public static SkiaSharp.SKSizeI ToSKSize (this System.Drawing.Size size);" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype SkiaSharp.SKSizeI ToSKSize(valuetype System.Drawing.Size size) cil managed" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberSignature Language="DocId" Value="M:SkiaSharp.Views.tvOS.Extensions.ToSKSize(System.Drawing.Size)" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType FrameworkAlternate="skiasharp-views-1.60">SkiaSharp.SKSizeI</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="size" Type="System.Drawing.Size" Index="0" FrameworkAlternate="skiasharp-views-1.60" RefType="this" />
        </Parameters>
        <Docs>
          <param name="size">The System.Drawing size.</param>
          <summary>Converts a System.Drawing size into a SkiaSharp size.</summary>
        </Docs>
        <Link Type="SkiaSharp.Views.tvOS.Extensions" Member="M:SkiaSharp.Views.tvOS.Extensions.ToSKSize(System.Drawing.Size)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.Drawing.SizeF" />
      </Targets>
      <Member MemberName="ToSKSize">
        <MemberSignature Language="C#" Value="public static SkiaSharp.SKSize ToSKSize (this System.Drawing.SizeF size);" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype SkiaSharp.SKSize ToSKSize(valuetype System.Drawing.SizeF size) cil managed" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberSignature Language="DocId" Value="M:SkiaSharp.Views.tvOS.Extensions.ToSKSize(System.Drawing.SizeF)" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType FrameworkAlternate="skiasharp-views-1.60">SkiaSharp.SKSize</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="size" Type="System.Drawing.SizeF" Index="0" FrameworkAlternate="skiasharp-views-1.60" RefType="this" />
        </Parameters>
        <Docs>
          <param name="size">The System.Drawing size.</param>
          <summary>Converts a System.Drawing size into a SkiaSharp size.</summary>
        </Docs>
        <Link Type="SkiaSharp.Views.tvOS.Extensions" Member="M:SkiaSharp.Views.tvOS.Extensions.ToSKSize(System.Drawing.SizeF)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:UIKit.UIImage" />
      </Targets>
      <Member MemberName="ToSKBitmap">
        <MemberSignature Language="C#" Value="public static SkiaSharp.SKBitmap ToSKBitmap (this UIKit.UIImage uiImage);" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class SkiaSharp.SKBitmap ToSKBitmap(class UIKit.UIImage uiImage) cil managed" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberSignature Language="DocId" Value="M:SkiaSharp.Views.tvOS.iOSExtensions.ToSKBitmap(UIKit.UIImage)" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType FrameworkAlternate="skiasharp-views-1.60">SkiaSharp.SKBitmap</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="uiImage" Type="UIKit.UIImage" Index="0" FrameworkAlternate="skiasharp-views-1.60" RefType="this" />
        </Parameters>
        <Docs>
          <param name="uiImage">The UIKit image.</param>
          <summary>Converts a UIKit image into a SkiaSharp bitmap.</summary>
        </Docs>
        <Link Type="SkiaSharp.Views.tvOS.iOSExtensions" Member="M:SkiaSharp.Views.tvOS.iOSExtensions.ToSKBitmap(UIKit.UIImage)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:UIKit.UIColor" />
      </Targets>
      <Member MemberName="ToSKColor">
        <MemberSignature Language="C#" Value="public static SkiaSharp.SKColor ToSKColor (this UIKit.UIColor color);" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype SkiaSharp.SKColor ToSKColor(class UIKit.UIColor color) cil managed" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberSignature Language="DocId" Value="M:SkiaSharp.Views.tvOS.iOSExtensions.ToSKColor(UIKit.UIColor)" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType FrameworkAlternate="skiasharp-views-1.60">SkiaSharp.SKColor</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="color" Type="UIKit.UIColor" Index="0" FrameworkAlternate="skiasharp-views-1.60" RefType="this" />
        </Parameters>
        <Docs>
          <param name="color">The UIKit color</param>
          <summary>Converts a UIKit color into a SkiaSharp color.</summary>
        </Docs>
        <Link Type="SkiaSharp.Views.tvOS.iOSExtensions" Member="M:SkiaSharp.Views.tvOS.iOSExtensions.ToSKColor(UIKit.UIColor)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:UIKit.UIColor" />
      </Targets>
      <Member MemberName="ToSKColorF">
        <MemberSignature Language="C#" Value="public static SkiaSharp.SKColorF ToSKColorF (this UIKit.UIColor color);" FrameworkAlternate="skiasharp-views-2.80" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype SkiaSharp.SKColorF ToSKColorF(class UIKit.UIColor color) cil managed" FrameworkAlternate="skiasharp-views-2.80" />
        <MemberSignature Language="DocId" Value="M:SkiaSharp.Views.tvOS.iOSExtensions.ToSKColorF(UIKit.UIColor)" FrameworkAlternate="skiasharp-views-2.80" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType FrameworkAlternate="skiasharp-views-2.80">SkiaSharp.SKColorF</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="color" Type="UIKit.UIColor" RefType="this" Index="0" FrameworkAlternate="skiasharp-views-2.80;skiasharp-views-2.88" />
        </Parameters>
        <Docs>
          <param name="color">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="SkiaSharp.Views.tvOS.iOSExtensions" Member="M:SkiaSharp.Views.tvOS.iOSExtensions.ToSKColorF(UIKit.UIColor)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:UIKit.UIImage" />
      </Targets>
      <Member MemberName="ToSKImage">
        <MemberSignature Language="C#" Value="public static SkiaSharp.SKImage ToSKImage (this UIKit.UIImage uiImage);" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class SkiaSharp.SKImage ToSKImage(class UIKit.UIImage uiImage) cil managed" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberSignature Language="DocId" Value="M:SkiaSharp.Views.tvOS.iOSExtensions.ToSKImage(UIKit.UIImage)" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType FrameworkAlternate="skiasharp-views-1.60">SkiaSharp.SKImage</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="uiImage" Type="UIKit.UIImage" Index="0" FrameworkAlternate="skiasharp-views-1.60" RefType="this" />
        </Parameters>
        <Docs>
          <param name="uiImage">The UIKit image.</param>
          <summary>Converts a UIKit image into a SkiaSharp image.</summary>
        </Docs>
        <Link Type="SkiaSharp.Views.tvOS.iOSExtensions" Member="M:SkiaSharp.Views.tvOS.iOSExtensions.ToSKImage(UIKit.UIImage)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:UIKit.UIImage" />
      </Targets>
      <Member MemberName="ToSKPixmap">
        <MemberSignature Language="C#" Value="public static bool ToSKPixmap (this UIKit.UIImage uiImage, SkiaSharp.SKPixmap pixmap);" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool ToSKPixmap(class UIKit.UIImage uiImage, class SkiaSharp.SKPixmap pixmap) cil managed" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberSignature Language="DocId" Value="M:SkiaSharp.Views.tvOS.iOSExtensions.ToSKPixmap(UIKit.UIImage,SkiaSharp.SKPixmap)" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType FrameworkAlternate="skiasharp-views-1.60">System.Boolean</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="uiImage" Type="UIKit.UIImage" Index="0" FrameworkAlternate="skiasharp-views-1.60" RefType="this" />
          <Parameter Name="pixmap" Type="SkiaSharp.SKPixmap" Index="1" FrameworkAlternate="skiasharp-views-1.60" />
        </Parameters>
        <Docs>
          <param name="uiImage">The UIKit image.</param>
          <param name="pixmap">The SkiaSharp pixmap to hold the copy of the image data.</param>
          <summary>Converts a SkiaSharp pixmap into a UIKit image.</summary>
        </Docs>
        <Link Type="SkiaSharp.Views.tvOS.iOSExtensions" Member="M:SkiaSharp.Views.tvOS.iOSExtensions.ToSKPixmap(UIKit.UIImage,SkiaSharp.SKPixmap)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:SkiaSharp.SKColor" />
      </Targets>
      <Member MemberName="ToUIColor">
        <MemberSignature Language="C#" Value="public static UIKit.UIColor ToUIColor (this SkiaSharp.SKColor color);" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class UIKit.UIColor ToUIColor(valuetype SkiaSharp.SKColor color) cil managed" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberSignature Language="DocId" Value="M:SkiaSharp.Views.tvOS.iOSExtensions.ToUIColor(SkiaSharp.SKColor)" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType FrameworkAlternate="skiasharp-views-1.60">UIKit.UIColor</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="color" Type="SkiaSharp.SKColor" Index="0" FrameworkAlternate="skiasharp-views-1.60" RefType="this" />
        </Parameters>
        <Docs>
          <param name="color">The SkiaSharp color</param>
          <summary>Converts a SkiaSharp color into a UIKit color.</summary>
        </Docs>
        <Link Type="SkiaSharp.Views.tvOS.iOSExtensions" Member="M:SkiaSharp.Views.tvOS.iOSExtensions.ToUIColor(SkiaSharp.SKColor)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:SkiaSharp.SKColorF" />
      </Targets>
      <Member MemberName="ToUIColor">
        <MemberSignature Language="C#" Value="public static UIKit.UIColor ToUIColor (this SkiaSharp.SKColorF color);" FrameworkAlternate="skiasharp-views-2.80" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class UIKit.UIColor ToUIColor(valuetype SkiaSharp.SKColorF color) cil managed" FrameworkAlternate="skiasharp-views-2.80" />
        <MemberSignature Language="DocId" Value="M:SkiaSharp.Views.tvOS.iOSExtensions.ToUIColor(SkiaSharp.SKColorF)" FrameworkAlternate="skiasharp-views-2.80" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType FrameworkAlternate="skiasharp-views-2.80">UIKit.UIColor</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="color" Type="SkiaSharp.SKColorF" RefType="this" Index="0" FrameworkAlternate="skiasharp-views-2.80;skiasharp-views-2.88" />
        </Parameters>
        <Docs>
          <param name="color">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="SkiaSharp.Views.tvOS.iOSExtensions" Member="M:SkiaSharp.Views.tvOS.iOSExtensions.ToUIColor(SkiaSharp.SKColorF)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:SkiaSharp.SKBitmap" />
      </Targets>
      <Member MemberName="ToUIImage">
        <MemberSignature Language="C#" Value="public static UIKit.UIImage ToUIImage (this SkiaSharp.SKBitmap skiaBitmap);" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class UIKit.UIImage ToUIImage(class SkiaSharp.SKBitmap skiaBitmap) cil managed" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberSignature Language="DocId" Value="M:SkiaSharp.Views.tvOS.iOSExtensions.ToUIImage(SkiaSharp.SKBitmap)" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType FrameworkAlternate="skiasharp-views-1.60">UIKit.UIImage</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="skiaBitmap" Type="SkiaSharp.SKBitmap" Index="0" FrameworkAlternate="skiasharp-views-1.60" RefType="this" />
        </Parameters>
        <Docs>
          <param name="skiaBitmap">The SkiaSharp bitmap.</param>
          <summary>Converts a SkiaSharp bitmap into a UIKit image.</summary>
        </Docs>
        <Link Type="SkiaSharp.Views.tvOS.iOSExtensions" Member="M:SkiaSharp.Views.tvOS.iOSExtensions.ToUIImage(SkiaSharp.SKBitmap)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:SkiaSharp.SKBitmap" />
      </Targets>
      <Member MemberName="ToUIImage">
        <MemberSignature Language="C#" Value="public static UIKit.UIImage ToUIImage (this SkiaSharp.SKBitmap skiaBitmap, nfloat scale, UIKit.UIImageOrientation orientation);" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class UIKit.UIImage ToUIImage(class SkiaSharp.SKBitmap skiaBitmap, valuetype System.nfloat scale, valuetype UIKit.UIImageOrientation orientation) cil managed" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberSignature Language="DocId" Value="M:SkiaSharp.Views.tvOS.iOSExtensions.ToUIImage(SkiaSharp.SKBitmap,System.nfloat,UIKit.UIImageOrientation)" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType FrameworkAlternate="skiasharp-views-1.60">UIKit.UIImage</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="skiaBitmap" Type="SkiaSharp.SKBitmap" Index="0" FrameworkAlternate="skiasharp-views-1.60" RefType="this" />
          <Parameter Name="scale" Type="System.nfloat" Index="1" FrameworkAlternate="skiasharp-views-1.60" />
          <Parameter Name="orientation" Type="UIKit.UIImageOrientation" Index="2" FrameworkAlternate="skiasharp-views-1.60" />
        </Parameters>
        <Docs>
          <param name="skiaBitmap">The SkiaSharp bitmap.</param>
          <param name="scale">The scale factor for the image. A factor of 1.0 is the original size of the image.</param>
          <param name="orientation">The rotation that is to be applied to the image.</param>
          <summary>Converts a SkiaSharp bitmap into a UIKit image.</summary>
        </Docs>
        <Link Type="SkiaSharp.Views.tvOS.iOSExtensions" Member="M:SkiaSharp.Views.tvOS.iOSExtensions.ToUIImage(SkiaSharp.SKBitmap,System.nfloat,UIKit.UIImageOrientation)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:SkiaSharp.SKImage" />
      </Targets>
      <Member MemberName="ToUIImage">
        <MemberSignature Language="C#" Value="public static UIKit.UIImage ToUIImage (this SkiaSharp.SKImage skiaImage);" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class UIKit.UIImage ToUIImage(class SkiaSharp.SKImage skiaImage) cil managed" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberSignature Language="DocId" Value="M:SkiaSharp.Views.tvOS.iOSExtensions.ToUIImage(SkiaSharp.SKImage)" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType FrameworkAlternate="skiasharp-views-1.60">UIKit.UIImage</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="skiaImage" Type="SkiaSharp.SKImage" Index="0" FrameworkAlternate="skiasharp-views-1.60" RefType="this" />
        </Parameters>
        <Docs>
          <param name="skiaImage">The SkiaSharp image.</param>
          <summary>Converts a SkiaSharp image into a UIKit image.</summary>
        </Docs>
        <Link Type="SkiaSharp.Views.tvOS.iOSExtensions" Member="M:SkiaSharp.Views.tvOS.iOSExtensions.ToUIImage(SkiaSharp.SKImage)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:SkiaSharp.SKPicture" />
      </Targets>
      <Member MemberName="ToUIImage">
        <MemberSignature Language="C#" Value="public static UIKit.UIImage ToUIImage (this SkiaSharp.SKPicture skiaPicture, SkiaSharp.SKSizeI dimensions);" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class UIKit.UIImage ToUIImage(class SkiaSharp.SKPicture skiaPicture, valuetype SkiaSharp.SKSizeI dimensions) cil managed" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberSignature Language="DocId" Value="M:SkiaSharp.Views.tvOS.iOSExtensions.ToUIImage(SkiaSharp.SKPicture,SkiaSharp.SKSizeI)" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType FrameworkAlternate="skiasharp-views-1.60">UIKit.UIImage</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="skiaPicture" Type="SkiaSharp.SKPicture" Index="0" FrameworkAlternate="skiasharp-views-1.60" RefType="this" />
          <Parameter Name="dimensions" Type="SkiaSharp.SKSizeI" Index="1" FrameworkAlternate="skiasharp-views-1.60" />
        </Parameters>
        <Docs>
          <param name="skiaPicture">The SkiaSharp picture.</param>
          <param name="dimensions">The dimensions of the picture.</param>
          <summary>Converts a SkiaSharp picture into a UIKit image.</summary>
        </Docs>
        <Link Type="SkiaSharp.Views.tvOS.iOSExtensions" Member="M:SkiaSharp.Views.tvOS.iOSExtensions.ToUIImage(SkiaSharp.SKPicture,SkiaSharp.SKSizeI)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:SkiaSharp.SKPicture" />
      </Targets>
      <Member MemberName="ToUIImage">
        <MemberSignature Language="C#" Value="public static UIKit.UIImage ToUIImage (this SkiaSharp.SKPicture skiaPicture, SkiaSharp.SKSizeI dimensions, nfloat scale, UIKit.UIImageOrientation orientation);" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class UIKit.UIImage ToUIImage(class SkiaSharp.SKPicture skiaPicture, valuetype SkiaSharp.SKSizeI dimensions, valuetype System.nfloat scale, valuetype UIKit.UIImageOrientation orientation) cil managed" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberSignature Language="DocId" Value="M:SkiaSharp.Views.tvOS.iOSExtensions.ToUIImage(SkiaSharp.SKPicture,SkiaSharp.SKSizeI,System.nfloat,UIKit.UIImageOrientation)" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType FrameworkAlternate="skiasharp-views-1.60">UIKit.UIImage</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="skiaPicture" Type="SkiaSharp.SKPicture" Index="0" FrameworkAlternate="skiasharp-views-1.60" RefType="this" />
          <Parameter Name="dimensions" Type="SkiaSharp.SKSizeI" Index="1" FrameworkAlternate="skiasharp-views-1.60" />
          <Parameter Name="scale" Type="System.nfloat" Index="2" FrameworkAlternate="skiasharp-views-1.60" />
          <Parameter Name="orientation" Type="UIKit.UIImageOrientation" Index="3" FrameworkAlternate="skiasharp-views-1.60" />
        </Parameters>
        <Docs>
          <param name="skiaPicture">The SkiaSharp picture.</param>
          <param name="dimensions">The dimensions of the picture.</param>
          <param name="scale">The scale factor for the image. A factor of 1.0 is the original size of the image.</param>
          <param name="orientation">The rotation that is to be applied to the image.</param>
          <summary>Converts a SkiaSharp picture into a UIKit image.</summary>
        </Docs>
        <Link Type="SkiaSharp.Views.tvOS.iOSExtensions" Member="M:SkiaSharp.Views.tvOS.iOSExtensions.ToUIImage(SkiaSharp.SKPicture,SkiaSharp.SKSizeI,System.nfloat,UIKit.UIImageOrientation)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:SkiaSharp.SKPixmap" />
      </Targets>
      <Member MemberName="ToUIImage">
        <MemberSignature Language="C#" Value="public static UIKit.UIImage ToUIImage (this SkiaSharp.SKPixmap skiaPixmap);" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class UIKit.UIImage ToUIImage(class SkiaSharp.SKPixmap skiaPixmap) cil managed" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberSignature Language="DocId" Value="M:SkiaSharp.Views.tvOS.iOSExtensions.ToUIImage(SkiaSharp.SKPixmap)" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType FrameworkAlternate="skiasharp-views-1.60">UIKit.UIImage</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="skiaPixmap" Type="SkiaSharp.SKPixmap" Index="0" FrameworkAlternate="skiasharp-views-1.60" RefType="this" />
        </Parameters>
        <Docs>
          <param name="skiaPixmap">The SkiaSharp pixmap.</param>
          <summary>Converts a SkiaSharp pixmap into a UIKit image.</summary>
        </Docs>
        <Link Type="SkiaSharp.Views.tvOS.iOSExtensions" Member="M:SkiaSharp.Views.tvOS.iOSExtensions.ToUIImage(SkiaSharp.SKPixmap)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:SkiaSharp.SKPixmap" />
      </Targets>
      <Member MemberName="ToUIImage">
        <MemberSignature Language="C#" Value="public static UIKit.UIImage ToUIImage (this SkiaSharp.SKPixmap skiaPixmap, nfloat scale, UIKit.UIImageOrientation orientation);" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class UIKit.UIImage ToUIImage(class SkiaSharp.SKPixmap skiaPixmap, valuetype System.nfloat scale, valuetype UIKit.UIImageOrientation orientation) cil managed" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberSignature Language="DocId" Value="M:SkiaSharp.Views.tvOS.iOSExtensions.ToUIImage(SkiaSharp.SKPixmap,System.nfloat,UIKit.UIImageOrientation)" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType FrameworkAlternate="skiasharp-views-1.60">UIKit.UIImage</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="skiaPixmap" Type="SkiaSharp.SKPixmap" Index="0" FrameworkAlternate="skiasharp-views-1.60" RefType="this" />
          <Parameter Name="scale" Type="System.nfloat" Index="1" FrameworkAlternate="skiasharp-views-1.60" />
          <Parameter Name="orientation" Type="UIKit.UIImageOrientation" Index="2" FrameworkAlternate="skiasharp-views-1.60" />
        </Parameters>
        <Docs>
          <param name="skiaPixmap">The SkiaSharp pixmap.</param>
          <param name="scale">The scale factor for the image. A factor of 1.0 is the original size of the image.</param>
          <param name="orientation">The rotation that is to be applied to the image.</param>
          <summary>Converts a SkiaSharp pixmap into a UIKit image.</summary>
        </Docs>
        <Link Type="SkiaSharp.Views.tvOS.iOSExtensions" Member="M:SkiaSharp.Views.tvOS.iOSExtensions.ToUIImage(SkiaSharp.SKPixmap,System.nfloat,UIKit.UIImageOrientation)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:SkiaSharp.SKColor" />
      </Targets>
      <Member MemberName="ToColor">
        <MemberSignature Language="C#" Value="public static Windows.UI.Color ToColor (this SkiaSharp.SKColor color);" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype Windows.UI.Color ToColor(valuetype SkiaSharp.SKColor color) cil managed" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberSignature Language="DocId" Value="M:SkiaSharp.Views.UWP.UWPExtensions.ToColor(SkiaSharp.SKColor)" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType FrameworkAlternate="skiasharp-views-1.60">Windows.UI.Color</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="color" Type="SkiaSharp.SKColor" Index="0" FrameworkAlternate="skiasharp-views-1.60" RefType="this" />
        </Parameters>
        <Docs>
          <param name="color">The SkiaSharp color.</param>
          <summary>Converts a SkiaSharp color into a Windows color.</summary>
        </Docs>
        <Link Type="SkiaSharp.Views.UWP.UWPExtensions" Member="M:SkiaSharp.Views.UWP.UWPExtensions.ToColor(SkiaSharp.SKColor)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:SkiaSharp.SKPoint" />
      </Targets>
      <Member MemberName="ToPoint">
        <MemberSignature Language="C#" Value="public static Windows.Foundation.Point ToPoint (this SkiaSharp.SKPoint point);" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype Windows.Foundation.Point ToPoint(valuetype SkiaSharp.SKPoint point) cil managed" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberSignature Language="DocId" Value="M:SkiaSharp.Views.UWP.UWPExtensions.ToPoint(SkiaSharp.SKPoint)" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType FrameworkAlternate="skiasharp-views-1.60">Windows.Foundation.Point</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="point" Type="SkiaSharp.SKPoint" Index="0" FrameworkAlternate="skiasharp-views-1.60" RefType="this" />
        </Parameters>
        <Docs>
          <param name="point">The SkiaSharp point.</param>
          <summary>Converts a SkiaSharp point into a Windows point.</summary>
        </Docs>
        <Link Type="SkiaSharp.Views.UWP.UWPExtensions" Member="M:SkiaSharp.Views.UWP.UWPExtensions.ToPoint(SkiaSharp.SKPoint)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:SkiaSharp.SKRect" />
      </Targets>
      <Member MemberName="ToRect">
        <MemberSignature Language="C#" Value="public static Windows.Foundation.Rect ToRect (this SkiaSharp.SKRect rect);" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype Windows.Foundation.Rect ToRect(valuetype SkiaSharp.SKRect rect) cil managed" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberSignature Language="DocId" Value="M:SkiaSharp.Views.UWP.UWPExtensions.ToRect(SkiaSharp.SKRect)" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType FrameworkAlternate="skiasharp-views-1.60">Windows.Foundation.Rect</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="rect" Type="SkiaSharp.SKRect" Index="0" FrameworkAlternate="skiasharp-views-1.60" RefType="this" />
        </Parameters>
        <Docs>
          <param name="rect">The SkiaSharp rectangle.</param>
          <summary>Converts a SkiaSharp rectangle into a Windows rectangle.</summary>
        </Docs>
        <Link Type="SkiaSharp.Views.UWP.UWPExtensions" Member="M:SkiaSharp.Views.UWP.UWPExtensions.ToRect(SkiaSharp.SKRect)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:SkiaSharp.SKSize" />
      </Targets>
      <Member MemberName="ToSize">
        <MemberSignature Language="C#" Value="public static Windows.Foundation.Size ToSize (this SkiaSharp.SKSize size);" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype Windows.Foundation.Size ToSize(valuetype SkiaSharp.SKSize size) cil managed" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberSignature Language="DocId" Value="M:SkiaSharp.Views.UWP.UWPExtensions.ToSize(SkiaSharp.SKSize)" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType FrameworkAlternate="skiasharp-views-1.60">Windows.Foundation.Size</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="size" Type="SkiaSharp.SKSize" Index="0" FrameworkAlternate="skiasharp-views-1.60" RefType="this" />
        </Parameters>
        <Docs>
          <param name="size">The SkiaSharp size.</param>
          <summary>Converts a SkiaSharp size into a Windows size.</summary>
        </Docs>
        <Link Type="SkiaSharp.Views.UWP.UWPExtensions" Member="M:SkiaSharp.Views.UWP.UWPExtensions.ToSize(SkiaSharp.SKSize)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Windows.UI.Xaml.Media.Imaging.WriteableBitmap" />
      </Targets>
      <Member MemberName="ToSKBitmap">
        <MemberSignature Language="C#" Value="public static SkiaSharp.SKBitmap ToSKBitmap (this Windows.UI.Xaml.Media.Imaging.WriteableBitmap bitmap);" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class SkiaSharp.SKBitmap ToSKBitmap(class Windows.UI.Xaml.Media.Imaging.WriteableBitmap bitmap) cil managed" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberSignature Language="DocId" Value="M:SkiaSharp.Views.UWP.UWPExtensions.ToSKBitmap(Windows.UI.Xaml.Media.Imaging.WriteableBitmap)" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType FrameworkAlternate="skiasharp-views-1.60">SkiaSharp.SKBitmap</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="bitmap" Type="Windows.UI.Xaml.Media.Imaging.WriteableBitmap" Index="0" FrameworkAlternate="skiasharp-views-1.60" RefType="this" />
        </Parameters>
        <Docs>
          <param name="bitmap">The Windows WriteableBitmap.</param>
          <summary>Converts a Windows WriteableBitmap into a SkiaSharp bitmap.</summary>
        </Docs>
        <Link Type="SkiaSharp.Views.UWP.UWPExtensions" Member="M:SkiaSharp.Views.UWP.UWPExtensions.ToSKBitmap(Windows.UI.Xaml.Media.Imaging.WriteableBitmap)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Windows.UI.Color" />
      </Targets>
      <Member MemberName="ToSKColor">
        <MemberSignature Language="C#" Value="public static SkiaSharp.SKColor ToSKColor (this Windows.UI.Color color);" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype SkiaSharp.SKColor ToSKColor(valuetype Windows.UI.Color color) cil managed" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberSignature Language="DocId" Value="M:SkiaSharp.Views.UWP.UWPExtensions.ToSKColor(Windows.UI.Color)" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType FrameworkAlternate="skiasharp-views-1.60">SkiaSharp.SKColor</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="color" Type="Windows.UI.Color" Index="0" FrameworkAlternate="skiasharp-views-1.60" RefType="this" />
        </Parameters>
        <Docs>
          <param name="color">The Windows color.</param>
          <summary>Converts a Windows color into a SkiaSharp color.</summary>
        </Docs>
        <Link Type="SkiaSharp.Views.UWP.UWPExtensions" Member="M:SkiaSharp.Views.UWP.UWPExtensions.ToSKColor(Windows.UI.Color)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Windows.UI.Xaml.Media.Imaging.WriteableBitmap" />
      </Targets>
      <Member MemberName="ToSKImage">
        <MemberSignature Language="C#" Value="public static SkiaSharp.SKImage ToSKImage (this Windows.UI.Xaml.Media.Imaging.WriteableBitmap bitmap);" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class SkiaSharp.SKImage ToSKImage(class Windows.UI.Xaml.Media.Imaging.WriteableBitmap bitmap) cil managed" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberSignature Language="DocId" Value="M:SkiaSharp.Views.UWP.UWPExtensions.ToSKImage(Windows.UI.Xaml.Media.Imaging.WriteableBitmap)" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType FrameworkAlternate="skiasharp-views-1.60">SkiaSharp.SKImage</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="bitmap" Type="Windows.UI.Xaml.Media.Imaging.WriteableBitmap" Index="0" FrameworkAlternate="skiasharp-views-1.60" RefType="this" />
        </Parameters>
        <Docs>
          <param name="bitmap">The Windows WriteableBitmap.</param>
          <summary>Converts a Windows WriteableBitmap into a SkiaSharp image.</summary>
        </Docs>
        <Link Type="SkiaSharp.Views.UWP.UWPExtensions" Member="M:SkiaSharp.Views.UWP.UWPExtensions.ToSKImage(Windows.UI.Xaml.Media.Imaging.WriteableBitmap)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Windows.UI.Xaml.Media.Imaging.WriteableBitmap" />
      </Targets>
      <Member MemberName="ToSKPixmap">
        <MemberSignature Language="C#" Value="public static bool ToSKPixmap (this Windows.UI.Xaml.Media.Imaging.WriteableBitmap bitmap, SkiaSharp.SKPixmap pixmap);" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool ToSKPixmap(class Windows.UI.Xaml.Media.Imaging.WriteableBitmap bitmap, class SkiaSharp.SKPixmap pixmap) cil managed" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberSignature Language="DocId" Value="M:SkiaSharp.Views.UWP.UWPExtensions.ToSKPixmap(Windows.UI.Xaml.Media.Imaging.WriteableBitmap,SkiaSharp.SKPixmap)" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType FrameworkAlternate="skiasharp-views-1.60">System.Boolean</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="bitmap" Type="Windows.UI.Xaml.Media.Imaging.WriteableBitmap" Index="0" FrameworkAlternate="skiasharp-views-1.60" RefType="this" />
          <Parameter Name="pixmap" Type="SkiaSharp.SKPixmap" Index="1" FrameworkAlternate="skiasharp-views-1.60" />
        </Parameters>
        <Docs>
          <param name="bitmap">The Windows WriteableBitmap to convert.</param>
          <param name="pixmap">The SkiaSharp pixmap to hold the copy of the bitmap data.</param>
          <summary>Converts a Windows WriteableBitmap into a SkiaSharp pixmap.</summary>
        </Docs>
        <Link Type="SkiaSharp.Views.UWP.UWPExtensions" Member="M:SkiaSharp.Views.UWP.UWPExtensions.ToSKPixmap(Windows.UI.Xaml.Media.Imaging.WriteableBitmap,SkiaSharp.SKPixmap)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Windows.Foundation.Point" />
      </Targets>
      <Member MemberName="ToSKPoint">
        <MemberSignature Language="C#" Value="public static SkiaSharp.SKPoint ToSKPoint (this Windows.Foundation.Point point);" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype SkiaSharp.SKPoint ToSKPoint(valuetype Windows.Foundation.Point point) cil managed" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberSignature Language="DocId" Value="M:SkiaSharp.Views.UWP.UWPExtensions.ToSKPoint(Windows.Foundation.Point)" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType FrameworkAlternate="skiasharp-views-1.60">SkiaSharp.SKPoint</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="point" Type="Windows.Foundation.Point" Index="0" FrameworkAlternate="skiasharp-views-1.60" RefType="this" />
        </Parameters>
        <Docs>
          <param name="point">The Windows point.</param>
          <summary>Converts a Windows point into a SkiaSharp point.</summary>
        </Docs>
        <Link Type="SkiaSharp.Views.UWP.UWPExtensions" Member="M:SkiaSharp.Views.UWP.UWPExtensions.ToSKPoint(Windows.Foundation.Point)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Windows.Foundation.Rect" />
      </Targets>
      <Member MemberName="ToSKRect">
        <MemberSignature Language="C#" Value="public static SkiaSharp.SKRect ToSKRect (this Windows.Foundation.Rect rect);" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype SkiaSharp.SKRect ToSKRect(valuetype Windows.Foundation.Rect rect) cil managed" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberSignature Language="DocId" Value="M:SkiaSharp.Views.UWP.UWPExtensions.ToSKRect(Windows.Foundation.Rect)" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType FrameworkAlternate="skiasharp-views-1.60">SkiaSharp.SKRect</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="rect" Type="Windows.Foundation.Rect" Index="0" FrameworkAlternate="skiasharp-views-1.60" RefType="this" />
        </Parameters>
        <Docs>
          <param name="rect">The Windows rectangle</param>
          <summary>Converts a Windows rectangle into a SkiaSharp rectangle.</summary>
        </Docs>
        <Link Type="SkiaSharp.Views.UWP.UWPExtensions" Member="M:SkiaSharp.Views.UWP.UWPExtensions.ToSKRect(Windows.Foundation.Rect)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Windows.Foundation.Size" />
      </Targets>
      <Member MemberName="ToSKSize">
        <MemberSignature Language="C#" Value="public static SkiaSharp.SKSize ToSKSize (this Windows.Foundation.Size size);" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype SkiaSharp.SKSize ToSKSize(valuetype Windows.Foundation.Size size) cil managed" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberSignature Language="DocId" Value="M:SkiaSharp.Views.UWP.UWPExtensions.ToSKSize(Windows.Foundation.Size)" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType FrameworkAlternate="skiasharp-views-1.60">SkiaSharp.SKSize</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="size" Type="Windows.Foundation.Size" Index="0" FrameworkAlternate="skiasharp-views-1.60" RefType="this" />
        </Parameters>
        <Docs>
          <param name="size">The Windows size.</param>
          <summary>Converts a Windows size into a SkiaSharp size.</summary>
        </Docs>
        <Link Type="SkiaSharp.Views.UWP.UWPExtensions" Member="M:SkiaSharp.Views.UWP.UWPExtensions.ToSKSize(Windows.Foundation.Size)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:SkiaSharp.SKBitmap" />
      </Targets>
      <Member MemberName="ToWriteableBitmap">
        <MemberSignature Language="C#" Value="public static Windows.UI.Xaml.Media.Imaging.WriteableBitmap ToWriteableBitmap (this SkiaSharp.SKBitmap skiaBitmap);" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Windows.UI.Xaml.Media.Imaging.WriteableBitmap ToWriteableBitmap(class SkiaSharp.SKBitmap skiaBitmap) cil managed" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberSignature Language="DocId" Value="M:SkiaSharp.Views.UWP.UWPExtensions.ToWriteableBitmap(SkiaSharp.SKBitmap)" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType FrameworkAlternate="skiasharp-views-1.60">Windows.UI.Xaml.Media.Imaging.WriteableBitmap</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="skiaBitmap" Type="SkiaSharp.SKBitmap" Index="0" FrameworkAlternate="skiasharp-views-1.60" RefType="this" />
        </Parameters>
        <Docs>
          <param name="skiaBitmap">The SkiaSharp bitmap.</param>
          <summary>Converts a SkiaSharp bitmap into a Windows WriteableBitmap.</summary>
        </Docs>
        <Link Type="SkiaSharp.Views.UWP.UWPExtensions" Member="M:SkiaSharp.Views.UWP.UWPExtensions.ToWriteableBitmap(SkiaSharp.SKBitmap)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:SkiaSharp.SKImage" />
      </Targets>
      <Member MemberName="ToWriteableBitmap">
        <MemberSignature Language="C#" Value="public static Windows.UI.Xaml.Media.Imaging.WriteableBitmap ToWriteableBitmap (this SkiaSharp.SKImage skiaImage);" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Windows.UI.Xaml.Media.Imaging.WriteableBitmap ToWriteableBitmap(class SkiaSharp.SKImage skiaImage) cil managed" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberSignature Language="DocId" Value="M:SkiaSharp.Views.UWP.UWPExtensions.ToWriteableBitmap(SkiaSharp.SKImage)" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType FrameworkAlternate="skiasharp-views-1.60">Windows.UI.Xaml.Media.Imaging.WriteableBitmap</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="skiaImage" Type="SkiaSharp.SKImage" Index="0" FrameworkAlternate="skiasharp-views-1.60" RefType="this" />
        </Parameters>
        <Docs>
          <param name="skiaImage">The SkiaSharp image.</param>
          <summary>Converts a SkiaSharp image into a Windows WriteableBitmap.</summary>
        </Docs>
        <Link Type="SkiaSharp.Views.UWP.UWPExtensions" Member="M:SkiaSharp.Views.UWP.UWPExtensions.ToWriteableBitmap(SkiaSharp.SKImage)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:SkiaSharp.SKPicture" />
      </Targets>
      <Member MemberName="ToWriteableBitmap">
        <MemberSignature Language="C#" Value="public static Windows.UI.Xaml.Media.Imaging.WriteableBitmap ToWriteableBitmap (this SkiaSharp.SKPicture picture, SkiaSharp.SKSizeI dimensions);" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Windows.UI.Xaml.Media.Imaging.WriteableBitmap ToWriteableBitmap(class SkiaSharp.SKPicture picture, valuetype SkiaSharp.SKSizeI dimensions) cil managed" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberSignature Language="DocId" Value="M:SkiaSharp.Views.UWP.UWPExtensions.ToWriteableBitmap(SkiaSharp.SKPicture,SkiaSharp.SKSizeI)" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType FrameworkAlternate="skiasharp-views-1.60">Windows.UI.Xaml.Media.Imaging.WriteableBitmap</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="picture" Type="SkiaSharp.SKPicture" Index="0" FrameworkAlternate="skiasharp-views-1.60" RefType="this" />
          <Parameter Name="dimensions" Type="SkiaSharp.SKSizeI" Index="1" FrameworkAlternate="skiasharp-views-1.60" />
        </Parameters>
        <Docs>
          <param name="picture">The SkiaSharp picture.</param>
          <param name="dimensions">The dimensions of the picture.</param>
          <summary>Converts a SkiaSharp picture into a Windows WriteableBitmap.</summary>
        </Docs>
        <Link Type="SkiaSharp.Views.UWP.UWPExtensions" Member="M:SkiaSharp.Views.UWP.UWPExtensions.ToWriteableBitmap(SkiaSharp.SKPicture,SkiaSharp.SKSizeI)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:SkiaSharp.SKPixmap" />
      </Targets>
      <Member MemberName="ToWriteableBitmap">
        <MemberSignature Language="C#" Value="public static Windows.UI.Xaml.Media.Imaging.WriteableBitmap ToWriteableBitmap (this SkiaSharp.SKPixmap pixmap);" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Windows.UI.Xaml.Media.Imaging.WriteableBitmap ToWriteableBitmap(class SkiaSharp.SKPixmap pixmap) cil managed" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberSignature Language="DocId" Value="M:SkiaSharp.Views.UWP.UWPExtensions.ToWriteableBitmap(SkiaSharp.SKPixmap)" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType FrameworkAlternate="skiasharp-views-1.60">Windows.UI.Xaml.Media.Imaging.WriteableBitmap</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="pixmap" Type="SkiaSharp.SKPixmap" Index="0" FrameworkAlternate="skiasharp-views-1.60" RefType="this" />
        </Parameters>
        <Docs>
          <param name="pixmap">The SkiaSharp pixmap.</param>
          <summary>Converts a SkiaSharp pixmap into a Windows WriteableBitmap.</summary>
        </Docs>
        <Link Type="SkiaSharp.Views.UWP.UWPExtensions" Member="M:SkiaSharp.Views.UWP.UWPExtensions.ToWriteableBitmap(SkiaSharp.SKPixmap)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:SkiaSharp.SKColor" />
      </Targets>
      <Member MemberName="ToCGColor">
        <MemberSignature Language="C#" Value="public static CoreGraphics.CGColor ToCGColor (this SkiaSharp.SKColor color);" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class CoreGraphics.CGColor ToCGColor(valuetype SkiaSharp.SKColor color) cil managed" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberSignature Language="DocId" Value="M:SkiaSharp.Views.watchOS.AppleExtensions.ToCGColor(SkiaSharp.SKColor)" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType FrameworkAlternate="skiasharp-views-1.60">CoreGraphics.CGColor</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="color" Type="SkiaSharp.SKColor" Index="0" FrameworkAlternate="skiasharp-views-1.60" RefType="this" />
        </Parameters>
        <Docs>
          <param name="color">The SkiaSharp color.</param>
          <summary>Converts a SkiaSharp color into a CoreGraphics color.</summary>
        </Docs>
        <Link Type="SkiaSharp.Views.watchOS.AppleExtensions" Member="M:SkiaSharp.Views.watchOS.AppleExtensions.ToCGColor(SkiaSharp.SKColor)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:SkiaSharp.SKColorF" />
      </Targets>
      <Member MemberName="ToCGColor">
        <MemberSignature Language="C#" Value="public static CoreGraphics.CGColor ToCGColor (this SkiaSharp.SKColorF color);" FrameworkAlternate="skiasharp-views-2.80" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class CoreGraphics.CGColor ToCGColor(valuetype SkiaSharp.SKColorF color) cil managed" FrameworkAlternate="skiasharp-views-2.80" />
        <MemberSignature Language="DocId" Value="M:SkiaSharp.Views.watchOS.AppleExtensions.ToCGColor(SkiaSharp.SKColorF)" FrameworkAlternate="skiasharp-views-2.80" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType FrameworkAlternate="skiasharp-views-2.80">CoreGraphics.CGColor</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="color" Type="SkiaSharp.SKColorF" RefType="this" Index="0" FrameworkAlternate="skiasharp-views-2.80;skiasharp-views-2.88" />
        </Parameters>
        <Docs>
          <param name="color">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="SkiaSharp.Views.watchOS.AppleExtensions" Member="M:SkiaSharp.Views.watchOS.AppleExtensions.ToCGColor(SkiaSharp.SKColorF)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:SkiaSharp.SKBitmap" />
      </Targets>
      <Member MemberName="ToCGImage">
        <MemberSignature Language="C#" Value="public static CoreGraphics.CGImage ToCGImage (this SkiaSharp.SKBitmap skiaBitmap);" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class CoreGraphics.CGImage ToCGImage(class SkiaSharp.SKBitmap skiaBitmap) cil managed" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberSignature Language="DocId" Value="M:SkiaSharp.Views.watchOS.AppleExtensions.ToCGImage(SkiaSharp.SKBitmap)" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType FrameworkAlternate="skiasharp-views-1.60">CoreGraphics.CGImage</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="skiaBitmap" Type="SkiaSharp.SKBitmap" Index="0" FrameworkAlternate="skiasharp-views-1.60" RefType="this" />
        </Parameters>
        <Docs>
          <param name="skiaBitmap">The SkiaSharp bitmap.</param>
          <summary>Converts a SkiaSharp bitmap into a CoreGraphics image.</summary>
        </Docs>
        <Link Type="SkiaSharp.Views.watchOS.AppleExtensions" Member="M:SkiaSharp.Views.watchOS.AppleExtensions.ToCGImage(SkiaSharp.SKBitmap)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:SkiaSharp.SKImage" />
      </Targets>
      <Member MemberName="ToCGImage">
        <MemberSignature Language="C#" Value="public static CoreGraphics.CGImage ToCGImage (this SkiaSharp.SKImage skiaImage);" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class CoreGraphics.CGImage ToCGImage(class SkiaSharp.SKImage skiaImage) cil managed" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberSignature Language="DocId" Value="M:SkiaSharp.Views.watchOS.AppleExtensions.ToCGImage(SkiaSharp.SKImage)" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType FrameworkAlternate="skiasharp-views-1.60">CoreGraphics.CGImage</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="skiaImage" Type="SkiaSharp.SKImage" Index="0" FrameworkAlternate="skiasharp-views-1.60" RefType="this" />
        </Parameters>
        <Docs>
          <param name="skiaImage">The SkiaSharp image.</param>
          <summary>Converts a SkiaSharp image into a CoreGraphics image.</summary>
        </Docs>
        <Link Type="SkiaSharp.Views.watchOS.AppleExtensions" Member="M:SkiaSharp.Views.watchOS.AppleExtensions.ToCGImage(SkiaSharp.SKImage)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:SkiaSharp.SKPicture" />
      </Targets>
      <Member MemberName="ToCGImage">
        <MemberSignature Language="C#" Value="public static CoreGraphics.CGImage ToCGImage (this SkiaSharp.SKPicture skiaPicture, SkiaSharp.SKSizeI dimensions);" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class CoreGraphics.CGImage ToCGImage(class SkiaSharp.SKPicture skiaPicture, valuetype SkiaSharp.SKSizeI dimensions) cil managed" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberSignature Language="DocId" Value="M:SkiaSharp.Views.watchOS.AppleExtensions.ToCGImage(SkiaSharp.SKPicture,SkiaSharp.SKSizeI)" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType FrameworkAlternate="skiasharp-views-1.60">CoreGraphics.CGImage</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="skiaPicture" Type="SkiaSharp.SKPicture" Index="0" FrameworkAlternate="skiasharp-views-1.60" RefType="this" />
          <Parameter Name="dimensions" Type="SkiaSharp.SKSizeI" Index="1" FrameworkAlternate="skiasharp-views-1.60" />
        </Parameters>
        <Docs>
          <param name="skiaPicture">The SkiaSharp picture.</param>
          <param name="dimensions">The dimensions of the picture.</param>
          <summary>Converts a SkiaSharp picture into a CoreGraphics image.</summary>
        </Docs>
        <Link Type="SkiaSharp.Views.watchOS.AppleExtensions" Member="M:SkiaSharp.Views.watchOS.AppleExtensions.ToCGImage(SkiaSharp.SKPicture,SkiaSharp.SKSizeI)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:SkiaSharp.SKPixmap" />
      </Targets>
      <Member MemberName="ToCGImage">
        <MemberSignature Language="C#" Value="public static CoreGraphics.CGImage ToCGImage (this SkiaSharp.SKPixmap skiaPixmap);" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class CoreGraphics.CGImage ToCGImage(class SkiaSharp.SKPixmap skiaPixmap) cil managed" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberSignature Language="DocId" Value="M:SkiaSharp.Views.watchOS.AppleExtensions.ToCGImage(SkiaSharp.SKPixmap)" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType FrameworkAlternate="skiasharp-views-1.60">CoreGraphics.CGImage</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="skiaPixmap" Type="SkiaSharp.SKPixmap" Index="0" FrameworkAlternate="skiasharp-views-1.60" RefType="this" />
        </Parameters>
        <Docs>
          <param name="skiaPixmap">The SkiaSharp pixmap.</param>
          <summary>Converts a SkiaSharp pixmap into a CoreGraphics image.</summary>
        </Docs>
        <Link Type="SkiaSharp.Views.watchOS.AppleExtensions" Member="M:SkiaSharp.Views.watchOS.AppleExtensions.ToCGImage(SkiaSharp.SKPixmap)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:SkiaSharp.SKData" />
      </Targets>
      <Member MemberName="ToNSData">
        <MemberSignature Language="C#" Value="public static Foundation.NSData ToNSData (this SkiaSharp.SKData skiaData);" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Foundation.NSData ToNSData(class SkiaSharp.SKData skiaData) cil managed" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberSignature Language="DocId" Value="M:SkiaSharp.Views.watchOS.AppleExtensions.ToNSData(SkiaSharp.SKData)" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType FrameworkAlternate="skiasharp-views-1.60">Foundation.NSData</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="skiaData" Type="SkiaSharp.SKData" Index="0" FrameworkAlternate="skiasharp-views-1.60" RefType="this" />
        </Parameters>
        <Docs>
          <param name="skiaData">The SkiaSharp data object.</param>
          <summary>Converts a SkiaSharp data object into a NSData.</summary>
        </Docs>
        <Link Type="SkiaSharp.Views.watchOS.AppleExtensions" Member="M:SkiaSharp.Views.watchOS.AppleExtensions.ToNSData(SkiaSharp.SKData)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:SkiaSharp.SKPoint" />
      </Targets>
      <Member MemberName="ToPoint">
        <MemberSignature Language="C#" Value="public static CoreGraphics.CGPoint ToPoint (this SkiaSharp.SKPoint point);" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype CoreGraphics.CGPoint ToPoint(valuetype SkiaSharp.SKPoint point) cil managed" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberSignature Language="DocId" Value="M:SkiaSharp.Views.watchOS.AppleExtensions.ToPoint(SkiaSharp.SKPoint)" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType FrameworkAlternate="skiasharp-views-1.60">CoreGraphics.CGPoint</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="point" Type="SkiaSharp.SKPoint" Index="0" FrameworkAlternate="skiasharp-views-1.60" RefType="this" />
        </Parameters>
        <Docs>
          <param name="point">The SkiaSharp point.</param>
          <summary>Converts a SkiaSharp point into a CoreGraphics point.</summary>
        </Docs>
        <Link Type="SkiaSharp.Views.watchOS.AppleExtensions" Member="M:SkiaSharp.Views.watchOS.AppleExtensions.ToPoint(SkiaSharp.SKPoint)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:SkiaSharp.SKRect" />
      </Targets>
      <Member MemberName="ToRect">
        <MemberSignature Language="C#" Value="public static CoreGraphics.CGRect ToRect (this SkiaSharp.SKRect rect);" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype CoreGraphics.CGRect ToRect(valuetype SkiaSharp.SKRect rect) cil managed" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberSignature Language="DocId" Value="M:SkiaSharp.Views.watchOS.AppleExtensions.ToRect(SkiaSharp.SKRect)" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType FrameworkAlternate="skiasharp-views-1.60">CoreGraphics.CGRect</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="rect" Type="SkiaSharp.SKRect" Index="0" FrameworkAlternate="skiasharp-views-1.60" RefType="this" />
        </Parameters>
        <Docs>
          <param name="rect">The SkiaSharp rectangle.</param>
          <summary>Converts a SkiaSharp rectangle into a CoreGraphics rectangle.</summary>
        </Docs>
        <Link Type="SkiaSharp.Views.watchOS.AppleExtensions" Member="M:SkiaSharp.Views.watchOS.AppleExtensions.ToRect(SkiaSharp.SKRect)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:SkiaSharp.SKSize" />
      </Targets>
      <Member MemberName="ToSize">
        <MemberSignature Language="C#" Value="public static CoreGraphics.CGSize ToSize (this SkiaSharp.SKSize size);" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype CoreGraphics.CGSize ToSize(valuetype SkiaSharp.SKSize size) cil managed" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberSignature Language="DocId" Value="M:SkiaSharp.Views.watchOS.AppleExtensions.ToSize(SkiaSharp.SKSize)" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType FrameworkAlternate="skiasharp-views-1.60">CoreGraphics.CGSize</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="size" Type="SkiaSharp.SKSize" Index="0" FrameworkAlternate="skiasharp-views-1.60" RefType="this" />
        </Parameters>
        <Docs>
          <param name="size">The SkiaSharp size.</param>
          <summary>Converts a SkiaSharp size into a CoreGraphics size.</summary>
        </Docs>
        <Link Type="SkiaSharp.Views.watchOS.AppleExtensions" Member="M:SkiaSharp.Views.watchOS.AppleExtensions.ToSize(SkiaSharp.SKSize)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:CoreGraphics.CGImage" />
      </Targets>
      <Member MemberName="ToSKBitmap">
        <MemberSignature Language="C#" Value="public static SkiaSharp.SKBitmap ToSKBitmap (this CoreGraphics.CGImage cgImage);" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class SkiaSharp.SKBitmap ToSKBitmap(class CoreGraphics.CGImage cgImage) cil managed" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberSignature Language="DocId" Value="M:SkiaSharp.Views.watchOS.AppleExtensions.ToSKBitmap(CoreGraphics.CGImage)" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType FrameworkAlternate="skiasharp-views-1.60">SkiaSharp.SKBitmap</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="cgImage" Type="CoreGraphics.CGImage" Index="0" FrameworkAlternate="skiasharp-views-1.60" RefType="this" />
        </Parameters>
        <Docs>
          <param name="cgImage">The CoreGraphics image.</param>
          <summary>Converts a CoreGraphics image into a SkiaSharp bitmap.</summary>
        </Docs>
        <Link Type="SkiaSharp.Views.watchOS.AppleExtensions" Member="M:SkiaSharp.Views.watchOS.AppleExtensions.ToSKBitmap(CoreGraphics.CGImage)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:CoreGraphics.CGColor" />
      </Targets>
      <Member MemberName="ToSKColor">
        <MemberSignature Language="C#" Value="public static SkiaSharp.SKColor ToSKColor (this CoreGraphics.CGColor color);" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype SkiaSharp.SKColor ToSKColor(class CoreGraphics.CGColor color) cil managed" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberSignature Language="DocId" Value="M:SkiaSharp.Views.watchOS.AppleExtensions.ToSKColor(CoreGraphics.CGColor)" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType FrameworkAlternate="skiasharp-views-1.60">SkiaSharp.SKColor</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="color" Type="CoreGraphics.CGColor" Index="0" FrameworkAlternate="skiasharp-views-1.60" RefType="this" />
        </Parameters>
        <Docs>
          <param name="color">The CoreGraphics color.</param>
          <summary>Converts a CoreGraphics color into a SkiaSharp color.</summary>
        </Docs>
        <Link Type="SkiaSharp.Views.watchOS.AppleExtensions" Member="M:SkiaSharp.Views.watchOS.AppleExtensions.ToSKColor(CoreGraphics.CGColor)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:CoreGraphics.CGColor" />
      </Targets>
      <Member MemberName="ToSKColorF">
        <MemberSignature Language="C#" Value="public static SkiaSharp.SKColorF ToSKColorF (this CoreGraphics.CGColor color);" FrameworkAlternate="skiasharp-views-2.80" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype SkiaSharp.SKColorF ToSKColorF(class CoreGraphics.CGColor color) cil managed" FrameworkAlternate="skiasharp-views-2.80" />
        <MemberSignature Language="DocId" Value="M:SkiaSharp.Views.watchOS.AppleExtensions.ToSKColorF(CoreGraphics.CGColor)" FrameworkAlternate="skiasharp-views-2.80" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType FrameworkAlternate="skiasharp-views-2.80">SkiaSharp.SKColorF</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="color" Type="CoreGraphics.CGColor" RefType="this" Index="0" FrameworkAlternate="skiasharp-views-2.80;skiasharp-views-2.88" />
        </Parameters>
        <Docs>
          <param name="color">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="SkiaSharp.Views.watchOS.AppleExtensions" Member="M:SkiaSharp.Views.watchOS.AppleExtensions.ToSKColorF(CoreGraphics.CGColor)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Foundation.NSData" />
      </Targets>
      <Member MemberName="ToSKData">
        <MemberSignature Language="C#" Value="public static SkiaSharp.SKData ToSKData (this Foundation.NSData nsData);" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class SkiaSharp.SKData ToSKData(class Foundation.NSData nsData) cil managed" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberSignature Language="DocId" Value="M:SkiaSharp.Views.watchOS.AppleExtensions.ToSKData(Foundation.NSData)" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType FrameworkAlternate="skiasharp-views-1.60">SkiaSharp.SKData</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="nsData" Type="Foundation.NSData" Index="0" FrameworkAlternate="skiasharp-views-1.60" RefType="this" />
        </Parameters>
        <Docs>
          <param name="nsData">The NSData.</param>
          <summary>Converts a NSData into a SkiaSharp data object.</summary>
        </Docs>
        <Link Type="SkiaSharp.Views.watchOS.AppleExtensions" Member="M:SkiaSharp.Views.watchOS.AppleExtensions.ToSKData(Foundation.NSData)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:CoreGraphics.CGImage" />
      </Targets>
      <Member MemberName="ToSKImage">
        <MemberSignature Language="C#" Value="public static SkiaSharp.SKImage ToSKImage (this CoreGraphics.CGImage cgImage);" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class SkiaSharp.SKImage ToSKImage(class CoreGraphics.CGImage cgImage) cil managed" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberSignature Language="DocId" Value="M:SkiaSharp.Views.watchOS.AppleExtensions.ToSKImage(CoreGraphics.CGImage)" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType FrameworkAlternate="skiasharp-views-1.60">SkiaSharp.SKImage</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="cgImage" Type="CoreGraphics.CGImage" Index="0" FrameworkAlternate="skiasharp-views-1.60" RefType="this" />
        </Parameters>
        <Docs>
          <param name="cgImage">The CoreGraphics image.</param>
          <summary>Converts a CoreGraphics image into a SkiaSharp image.</summary>
        </Docs>
        <Link Type="SkiaSharp.Views.watchOS.AppleExtensions" Member="M:SkiaSharp.Views.watchOS.AppleExtensions.ToSKImage(CoreGraphics.CGImage)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:CoreGraphics.CGImage" />
      </Targets>
      <Member MemberName="ToSKPixmap">
        <MemberSignature Language="C#" Value="public static void ToSKPixmap (this CoreGraphics.CGImage cgImage, SkiaSharp.SKPixmap pixmap);" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ToSKPixmap(class CoreGraphics.CGImage cgImage, class SkiaSharp.SKPixmap pixmap) cil managed" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberSignature Language="DocId" Value="M:SkiaSharp.Views.watchOS.AppleExtensions.ToSKPixmap(CoreGraphics.CGImage,SkiaSharp.SKPixmap)" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType FrameworkAlternate="skiasharp-views-1.60">System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="cgImage" Type="CoreGraphics.CGImage" Index="0" FrameworkAlternate="skiasharp-views-1.60" RefType="this" />
          <Parameter Name="pixmap" Type="SkiaSharp.SKPixmap" Index="1" FrameworkAlternate="skiasharp-views-1.60" />
        </Parameters>
        <Docs>
          <param name="cgImage">The CoreGraphics image.</param>
          <param name="pixmap">The SkiaSharp pixmap to hold the copy of the image data.</param>
          <summary>Converts a CoreGraphics image into a SkiaSharp pixmap.</summary>
        </Docs>
        <Link Type="SkiaSharp.Views.watchOS.AppleExtensions" Member="M:SkiaSharp.Views.watchOS.AppleExtensions.ToSKPixmap(CoreGraphics.CGImage,SkiaSharp.SKPixmap)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:CoreGraphics.CGPoint" />
      </Targets>
      <Member MemberName="ToSKPoint">
        <MemberSignature Language="C#" Value="public static SkiaSharp.SKPoint ToSKPoint (this CoreGraphics.CGPoint point);" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype SkiaSharp.SKPoint ToSKPoint(valuetype CoreGraphics.CGPoint point) cil managed" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberSignature Language="DocId" Value="M:SkiaSharp.Views.watchOS.AppleExtensions.ToSKPoint(CoreGraphics.CGPoint)" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType FrameworkAlternate="skiasharp-views-1.60">SkiaSharp.SKPoint</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="point" Type="CoreGraphics.CGPoint" Index="0" FrameworkAlternate="skiasharp-views-1.60" RefType="this" />
        </Parameters>
        <Docs>
          <param name="point">The CoreGraphics point.</param>
          <summary>Converts a CoreGraphics point into a SkiaSharp point.</summary>
        </Docs>
        <Link Type="SkiaSharp.Views.watchOS.AppleExtensions" Member="M:SkiaSharp.Views.watchOS.AppleExtensions.ToSKPoint(CoreGraphics.CGPoint)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:CoreGraphics.CGRect" />
      </Targets>
      <Member MemberName="ToSKRect">
        <MemberSignature Language="C#" Value="public static SkiaSharp.SKRect ToSKRect (this CoreGraphics.CGRect rect);" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype SkiaSharp.SKRect ToSKRect(valuetype CoreGraphics.CGRect rect) cil managed" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberSignature Language="DocId" Value="M:SkiaSharp.Views.watchOS.AppleExtensions.ToSKRect(CoreGraphics.CGRect)" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType FrameworkAlternate="skiasharp-views-1.60">SkiaSharp.SKRect</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="rect" Type="CoreGraphics.CGRect" Index="0" FrameworkAlternate="skiasharp-views-1.60" RefType="this" />
        </Parameters>
        <Docs>
          <param name="rect">The CoreGraphics rectangle.</param>
          <summary>Converts a CoreGraphics rectangle into a SkiaSharp rectangle.</summary>
        </Docs>
        <Link Type="SkiaSharp.Views.watchOS.AppleExtensions" Member="M:SkiaSharp.Views.watchOS.AppleExtensions.ToSKRect(CoreGraphics.CGRect)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:CoreGraphics.CGSize" />
      </Targets>
      <Member MemberName="ToSKSize">
        <MemberSignature Language="C#" Value="public static SkiaSharp.SKSize ToSKSize (this CoreGraphics.CGSize size);" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype SkiaSharp.SKSize ToSKSize(valuetype CoreGraphics.CGSize size) cil managed" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberSignature Language="DocId" Value="M:SkiaSharp.Views.watchOS.AppleExtensions.ToSKSize(CoreGraphics.CGSize)" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType FrameworkAlternate="skiasharp-views-1.60">SkiaSharp.SKSize</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="size" Type="CoreGraphics.CGSize" Index="0" FrameworkAlternate="skiasharp-views-1.60" RefType="this" />
        </Parameters>
        <Docs>
          <param name="size">The CoreGraphics size.</param>
          <summary>Converts a CoreGraphics size into a SkiaSharp size.</summary>
        </Docs>
        <Link Type="SkiaSharp.Views.watchOS.AppleExtensions" Member="M:SkiaSharp.Views.watchOS.AppleExtensions.ToSKSize(CoreGraphics.CGSize)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:SkiaSharp.SKPoint" />
      </Targets>
      <Member MemberName="ToDrawingPoint">
        <MemberSignature Language="C#" Value="public static System.Drawing.PointF ToDrawingPoint (this SkiaSharp.SKPoint point);" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Drawing.PointF ToDrawingPoint(valuetype SkiaSharp.SKPoint point) cil managed" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberSignature Language="DocId" Value="M:SkiaSharp.Views.watchOS.Extensions.ToDrawingPoint(SkiaSharp.SKPoint)" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType FrameworkAlternate="skiasharp-views-1.60">System.Drawing.PointF</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="point" Type="SkiaSharp.SKPoint" Index="0" FrameworkAlternate="skiasharp-views-1.60" RefType="this" />
        </Parameters>
        <Docs>
          <param name="point">The SkiaSharp point.</param>
          <summary>Converts a SkiaSharp point into a System.Drawing point.</summary>
        </Docs>
        <Link Type="SkiaSharp.Views.watchOS.Extensions" Member="M:SkiaSharp.Views.watchOS.Extensions.ToDrawingPoint(SkiaSharp.SKPoint)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:SkiaSharp.SKPointI" />
      </Targets>
      <Member MemberName="ToDrawingPoint">
        <MemberSignature Language="C#" Value="public static System.Drawing.Point ToDrawingPoint (this SkiaSharp.SKPointI point);" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Drawing.Point ToDrawingPoint(valuetype SkiaSharp.SKPointI point) cil managed" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberSignature Language="DocId" Value="M:SkiaSharp.Views.watchOS.Extensions.ToDrawingPoint(SkiaSharp.SKPointI)" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType FrameworkAlternate="skiasharp-views-1.60">System.Drawing.Point</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="point" Type="SkiaSharp.SKPointI" Index="0" FrameworkAlternate="skiasharp-views-1.60" RefType="this" />
        </Parameters>
        <Docs>
          <param name="point">The SkiaSharp point.</param>
          <summary>Converts a SkiaSharp point into a System.Drawing point.</summary>
        </Docs>
        <Link Type="SkiaSharp.Views.watchOS.Extensions" Member="M:SkiaSharp.Views.watchOS.Extensions.ToDrawingPoint(SkiaSharp.SKPointI)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:SkiaSharp.SKRect" />
      </Targets>
      <Member MemberName="ToDrawingRect">
        <MemberSignature Language="C#" Value="public static System.Drawing.RectangleF ToDrawingRect (this SkiaSharp.SKRect rect);" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Drawing.RectangleF ToDrawingRect(valuetype SkiaSharp.SKRect rect) cil managed" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberSignature Language="DocId" Value="M:SkiaSharp.Views.watchOS.Extensions.ToDrawingRect(SkiaSharp.SKRect)" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType FrameworkAlternate="skiasharp-views-1.60">System.Drawing.RectangleF</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="rect" Type="SkiaSharp.SKRect" Index="0" FrameworkAlternate="skiasharp-views-1.60" RefType="this" />
        </Parameters>
        <Docs>
          <param name="rect">The SkiaSharp rectangle.</param>
          <summary>Converts a SkiaSharp rectangle into a System.Drawing rectangle.</summary>
        </Docs>
        <Link Type="SkiaSharp.Views.watchOS.Extensions" Member="M:SkiaSharp.Views.watchOS.Extensions.ToDrawingRect(SkiaSharp.SKRect)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:SkiaSharp.SKRectI" />
      </Targets>
      <Member MemberName="ToDrawingRect">
        <MemberSignature Language="C#" Value="public static System.Drawing.Rectangle ToDrawingRect (this SkiaSharp.SKRectI rect);" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Drawing.Rectangle ToDrawingRect(valuetype SkiaSharp.SKRectI rect) cil managed" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberSignature Language="DocId" Value="M:SkiaSharp.Views.watchOS.Extensions.ToDrawingRect(SkiaSharp.SKRectI)" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType FrameworkAlternate="skiasharp-views-1.60">System.Drawing.Rectangle</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="rect" Type="SkiaSharp.SKRectI" Index="0" FrameworkAlternate="skiasharp-views-1.60" RefType="this" />
        </Parameters>
        <Docs>
          <param name="rect">The SkiaSharp rectangle.</param>
          <summary>Converts a SkiaSharp rectangle into a System.Drawing rectangle.</summary>
        </Docs>
        <Link Type="SkiaSharp.Views.watchOS.Extensions" Member="M:SkiaSharp.Views.watchOS.Extensions.ToDrawingRect(SkiaSharp.SKRectI)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:SkiaSharp.SKSize" />
      </Targets>
      <Member MemberName="ToDrawingSize">
        <MemberSignature Language="C#" Value="public static System.Drawing.SizeF ToDrawingSize (this SkiaSharp.SKSize size);" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Drawing.SizeF ToDrawingSize(valuetype SkiaSharp.SKSize size) cil managed" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberSignature Language="DocId" Value="M:SkiaSharp.Views.watchOS.Extensions.ToDrawingSize(SkiaSharp.SKSize)" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType FrameworkAlternate="skiasharp-views-1.60">System.Drawing.SizeF</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="size" Type="SkiaSharp.SKSize" Index="0" FrameworkAlternate="skiasharp-views-1.60" RefType="this" />
        </Parameters>
        <Docs>
          <param name="size">The SkiaSharp size.</param>
          <summary>Converts a SkiaSharp size into a System.Drawing size.</summary>
        </Docs>
        <Link Type="SkiaSharp.Views.watchOS.Extensions" Member="M:SkiaSharp.Views.watchOS.Extensions.ToDrawingSize(SkiaSharp.SKSize)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:SkiaSharp.SKSizeI" />
      </Targets>
      <Member MemberName="ToDrawingSize">
        <MemberSignature Language="C#" Value="public static System.Drawing.Size ToDrawingSize (this SkiaSharp.SKSizeI size);" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Drawing.Size ToDrawingSize(valuetype SkiaSharp.SKSizeI size) cil managed" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberSignature Language="DocId" Value="M:SkiaSharp.Views.watchOS.Extensions.ToDrawingSize(SkiaSharp.SKSizeI)" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType FrameworkAlternate="skiasharp-views-1.60">System.Drawing.Size</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="size" Type="SkiaSharp.SKSizeI" Index="0" FrameworkAlternate="skiasharp-views-1.60" RefType="this" />
        </Parameters>
        <Docs>
          <param name="size">The SkiaSharp size.</param>
          <summary>Converts a SkiaSharp size into a System.Drawing size.</summary>
        </Docs>
        <Link Type="SkiaSharp.Views.watchOS.Extensions" Member="M:SkiaSharp.Views.watchOS.Extensions.ToDrawingSize(SkiaSharp.SKSizeI)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.Drawing.Point" />
      </Targets>
      <Member MemberName="ToSKPoint">
        <MemberSignature Language="C#" Value="public static SkiaSharp.SKPointI ToSKPoint (this System.Drawing.Point point);" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype SkiaSharp.SKPointI ToSKPoint(valuetype System.Drawing.Point point) cil managed" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberSignature Language="DocId" Value="M:SkiaSharp.Views.watchOS.Extensions.ToSKPoint(System.Drawing.Point)" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType FrameworkAlternate="skiasharp-views-1.60">SkiaSharp.SKPointI</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="point" Type="System.Drawing.Point" Index="0" FrameworkAlternate="skiasharp-views-1.60" RefType="this" />
        </Parameters>
        <Docs>
          <param name="point">The System.Drawing point.</param>
          <summary>Converts a System.Drawing point into a SkiaSharp point.</summary>
        </Docs>
        <Link Type="SkiaSharp.Views.watchOS.Extensions" Member="M:SkiaSharp.Views.watchOS.Extensions.ToSKPoint(System.Drawing.Point)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.Drawing.PointF" />
      </Targets>
      <Member MemberName="ToSKPoint">
        <MemberSignature Language="C#" Value="public static SkiaSharp.SKPoint ToSKPoint (this System.Drawing.PointF point);" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype SkiaSharp.SKPoint ToSKPoint(valuetype System.Drawing.PointF point) cil managed" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberSignature Language="DocId" Value="M:SkiaSharp.Views.watchOS.Extensions.ToSKPoint(System.Drawing.PointF)" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType FrameworkAlternate="skiasharp-views-1.60">SkiaSharp.SKPoint</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="point" Type="System.Drawing.PointF" Index="0" FrameworkAlternate="skiasharp-views-1.60" RefType="this" />
        </Parameters>
        <Docs>
          <param name="point">The System.Drawing point.</param>
          <summary>Converts a System.Drawing point into a SkiaSharp point.</summary>
        </Docs>
        <Link Type="SkiaSharp.Views.watchOS.Extensions" Member="M:SkiaSharp.Views.watchOS.Extensions.ToSKPoint(System.Drawing.PointF)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.Drawing.Rectangle" />
      </Targets>
      <Member MemberName="ToSKRect">
        <MemberSignature Language="C#" Value="public static SkiaSharp.SKRectI ToSKRect (this System.Drawing.Rectangle rect);" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype SkiaSharp.SKRectI ToSKRect(valuetype System.Drawing.Rectangle rect) cil managed" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberSignature Language="DocId" Value="M:SkiaSharp.Views.watchOS.Extensions.ToSKRect(System.Drawing.Rectangle)" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType FrameworkAlternate="skiasharp-views-1.60">SkiaSharp.SKRectI</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="rect" Type="System.Drawing.Rectangle" Index="0" FrameworkAlternate="skiasharp-views-1.60" RefType="this" />
        </Parameters>
        <Docs>
          <param name="rect">The System.Drawing rectangle.</param>
          <summary>Converts a System.Drawing rectangle into a SkiaSharp rectangle.</summary>
        </Docs>
        <Link Type="SkiaSharp.Views.watchOS.Extensions" Member="M:SkiaSharp.Views.watchOS.Extensions.ToSKRect(System.Drawing.Rectangle)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.Drawing.RectangleF" />
      </Targets>
      <Member MemberName="ToSKRect">
        <MemberSignature Language="C#" Value="public static SkiaSharp.SKRect ToSKRect (this System.Drawing.RectangleF rect);" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype SkiaSharp.SKRect ToSKRect(valuetype System.Drawing.RectangleF rect) cil managed" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberSignature Language="DocId" Value="M:SkiaSharp.Views.watchOS.Extensions.ToSKRect(System.Drawing.RectangleF)" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType FrameworkAlternate="skiasharp-views-1.60">SkiaSharp.SKRect</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="rect" Type="System.Drawing.RectangleF" Index="0" FrameworkAlternate="skiasharp-views-1.60" RefType="this" />
        </Parameters>
        <Docs>
          <param name="rect">The System.Drawing rectangle.</param>
          <summary>Converts a System.Drawing rectangle into a SkiaSharp rectangle.</summary>
        </Docs>
        <Link Type="SkiaSharp.Views.watchOS.Extensions" Member="M:SkiaSharp.Views.watchOS.Extensions.ToSKRect(System.Drawing.RectangleF)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.Drawing.Size" />
      </Targets>
      <Member MemberName="ToSKSize">
        <MemberSignature Language="C#" Value="public static SkiaSharp.SKSizeI ToSKSize (this System.Drawing.Size size);" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype SkiaSharp.SKSizeI ToSKSize(valuetype System.Drawing.Size size) cil managed" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberSignature Language="DocId" Value="M:SkiaSharp.Views.watchOS.Extensions.ToSKSize(System.Drawing.Size)" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType FrameworkAlternate="skiasharp-views-1.60">SkiaSharp.SKSizeI</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="size" Type="System.Drawing.Size" Index="0" FrameworkAlternate="skiasharp-views-1.60" RefType="this" />
        </Parameters>
        <Docs>
          <param name="size">The System.Drawing size.</param>
          <summary>Converts a System.Drawing size into a SkiaSharp size.</summary>
        </Docs>
        <Link Type="SkiaSharp.Views.watchOS.Extensions" Member="M:SkiaSharp.Views.watchOS.Extensions.ToSKSize(System.Drawing.Size)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.Drawing.SizeF" />
      </Targets>
      <Member MemberName="ToSKSize">
        <MemberSignature Language="C#" Value="public static SkiaSharp.SKSize ToSKSize (this System.Drawing.SizeF size);" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype SkiaSharp.SKSize ToSKSize(valuetype System.Drawing.SizeF size) cil managed" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberSignature Language="DocId" Value="M:SkiaSharp.Views.watchOS.Extensions.ToSKSize(System.Drawing.SizeF)" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType FrameworkAlternate="skiasharp-views-1.60">SkiaSharp.SKSize</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="size" Type="System.Drawing.SizeF" Index="0" FrameworkAlternate="skiasharp-views-1.60" RefType="this" />
        </Parameters>
        <Docs>
          <param name="size">The System.Drawing size.</param>
          <summary>Converts a System.Drawing size into a SkiaSharp size.</summary>
        </Docs>
        <Link Type="SkiaSharp.Views.watchOS.Extensions" Member="M:SkiaSharp.Views.watchOS.Extensions.ToSKSize(System.Drawing.SizeF)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:UIKit.UIImage" />
      </Targets>
      <Member MemberName="ToSKBitmap">
        <MemberSignature Language="C#" Value="public static SkiaSharp.SKBitmap ToSKBitmap (this UIKit.UIImage uiImage);" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class SkiaSharp.SKBitmap ToSKBitmap(class UIKit.UIImage uiImage) cil managed" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberSignature Language="DocId" Value="M:SkiaSharp.Views.watchOS.iOSExtensions.ToSKBitmap(UIKit.UIImage)" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType FrameworkAlternate="skiasharp-views-1.60">SkiaSharp.SKBitmap</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="uiImage" Type="UIKit.UIImage" Index="0" FrameworkAlternate="skiasharp-views-1.60" RefType="this" />
        </Parameters>
        <Docs>
          <param name="uiImage">The UIKit image.</param>
          <summary>Converts a UIKit image into a SkiaSharp bitmap.</summary>
        </Docs>
        <Link Type="SkiaSharp.Views.watchOS.iOSExtensions" Member="M:SkiaSharp.Views.watchOS.iOSExtensions.ToSKBitmap(UIKit.UIImage)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:UIKit.UIColor" />
      </Targets>
      <Member MemberName="ToSKColor">
        <MemberSignature Language="C#" Value="public static SkiaSharp.SKColor ToSKColor (this UIKit.UIColor color);" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype SkiaSharp.SKColor ToSKColor(class UIKit.UIColor color) cil managed" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberSignature Language="DocId" Value="M:SkiaSharp.Views.watchOS.iOSExtensions.ToSKColor(UIKit.UIColor)" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType FrameworkAlternate="skiasharp-views-1.60">SkiaSharp.SKColor</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="color" Type="UIKit.UIColor" Index="0" FrameworkAlternate="skiasharp-views-1.60" RefType="this" />
        </Parameters>
        <Docs>
          <param name="color">The UIKit color</param>
          <summary>Converts a UIKit color into a SkiaSharp color.</summary>
        </Docs>
        <Link Type="SkiaSharp.Views.watchOS.iOSExtensions" Member="M:SkiaSharp.Views.watchOS.iOSExtensions.ToSKColor(UIKit.UIColor)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:UIKit.UIColor" />
      </Targets>
      <Member MemberName="ToSKColorF">
        <MemberSignature Language="C#" Value="public static SkiaSharp.SKColorF ToSKColorF (this UIKit.UIColor color);" FrameworkAlternate="skiasharp-views-2.80" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype SkiaSharp.SKColorF ToSKColorF(class UIKit.UIColor color) cil managed" FrameworkAlternate="skiasharp-views-2.80" />
        <MemberSignature Language="DocId" Value="M:SkiaSharp.Views.watchOS.iOSExtensions.ToSKColorF(UIKit.UIColor)" FrameworkAlternate="skiasharp-views-2.80" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType FrameworkAlternate="skiasharp-views-2.80">SkiaSharp.SKColorF</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="color" Type="UIKit.UIColor" RefType="this" Index="0" FrameworkAlternate="skiasharp-views-2.80;skiasharp-views-2.88" />
        </Parameters>
        <Docs>
          <param name="color">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="SkiaSharp.Views.watchOS.iOSExtensions" Member="M:SkiaSharp.Views.watchOS.iOSExtensions.ToSKColorF(UIKit.UIColor)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:UIKit.UIImage" />
      </Targets>
      <Member MemberName="ToSKImage">
        <MemberSignature Language="C#" Value="public static SkiaSharp.SKImage ToSKImage (this UIKit.UIImage uiImage);" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class SkiaSharp.SKImage ToSKImage(class UIKit.UIImage uiImage) cil managed" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberSignature Language="DocId" Value="M:SkiaSharp.Views.watchOS.iOSExtensions.ToSKImage(UIKit.UIImage)" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType FrameworkAlternate="skiasharp-views-1.60">SkiaSharp.SKImage</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="uiImage" Type="UIKit.UIImage" Index="0" FrameworkAlternate="skiasharp-views-1.60" RefType="this" />
        </Parameters>
        <Docs>
          <param name="uiImage">The UIKit image.</param>
          <summary>Converts a UIKit image into a SkiaSharp image.</summary>
        </Docs>
        <Link Type="SkiaSharp.Views.watchOS.iOSExtensions" Member="M:SkiaSharp.Views.watchOS.iOSExtensions.ToSKImage(UIKit.UIImage)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:UIKit.UIImage" />
      </Targets>
      <Member MemberName="ToSKPixmap">
        <MemberSignature Language="C#" Value="public static bool ToSKPixmap (this UIKit.UIImage uiImage, SkiaSharp.SKPixmap pixmap);" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool ToSKPixmap(class UIKit.UIImage uiImage, class SkiaSharp.SKPixmap pixmap) cil managed" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberSignature Language="DocId" Value="M:SkiaSharp.Views.watchOS.iOSExtensions.ToSKPixmap(UIKit.UIImage,SkiaSharp.SKPixmap)" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType FrameworkAlternate="skiasharp-views-1.60">System.Boolean</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="uiImage" Type="UIKit.UIImage" Index="0" FrameworkAlternate="skiasharp-views-1.60" RefType="this" />
          <Parameter Name="pixmap" Type="SkiaSharp.SKPixmap" Index="1" FrameworkAlternate="skiasharp-views-1.60" />
        </Parameters>
        <Docs>
          <param name="uiImage">The UIKit image.</param>
          <param name="pixmap">The SkiaSharp pixmap to hold the copy of the image data.</param>
          <summary>Converts a SkiaSharp pixmap into a UIKit image.</summary>
        </Docs>
        <Link Type="SkiaSharp.Views.watchOS.iOSExtensions" Member="M:SkiaSharp.Views.watchOS.iOSExtensions.ToSKPixmap(UIKit.UIImage,SkiaSharp.SKPixmap)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:SkiaSharp.SKColor" />
      </Targets>
      <Member MemberName="ToUIColor">
        <MemberSignature Language="C#" Value="public static UIKit.UIColor ToUIColor (this SkiaSharp.SKColor color);" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class UIKit.UIColor ToUIColor(valuetype SkiaSharp.SKColor color) cil managed" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberSignature Language="DocId" Value="M:SkiaSharp.Views.watchOS.iOSExtensions.ToUIColor(SkiaSharp.SKColor)" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType FrameworkAlternate="skiasharp-views-1.60">UIKit.UIColor</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="color" Type="SkiaSharp.SKColor" Index="0" FrameworkAlternate="skiasharp-views-1.60" RefType="this" />
        </Parameters>
        <Docs>
          <param name="color">The SkiaSharp color</param>
          <summary>Converts a SkiaSharp color into a UIKit color.</summary>
        </Docs>
        <Link Type="SkiaSharp.Views.watchOS.iOSExtensions" Member="M:SkiaSharp.Views.watchOS.iOSExtensions.ToUIColor(SkiaSharp.SKColor)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:SkiaSharp.SKColorF" />
      </Targets>
      <Member MemberName="ToUIColor">
        <MemberSignature Language="C#" Value="public static UIKit.UIColor ToUIColor (this SkiaSharp.SKColorF color);" FrameworkAlternate="skiasharp-views-2.80" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class UIKit.UIColor ToUIColor(valuetype SkiaSharp.SKColorF color) cil managed" FrameworkAlternate="skiasharp-views-2.80" />
        <MemberSignature Language="DocId" Value="M:SkiaSharp.Views.watchOS.iOSExtensions.ToUIColor(SkiaSharp.SKColorF)" FrameworkAlternate="skiasharp-views-2.80" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType FrameworkAlternate="skiasharp-views-2.80">UIKit.UIColor</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="color" Type="SkiaSharp.SKColorF" RefType="this" Index="0" FrameworkAlternate="skiasharp-views-2.80;skiasharp-views-2.88" />
        </Parameters>
        <Docs>
          <param name="color">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="SkiaSharp.Views.watchOS.iOSExtensions" Member="M:SkiaSharp.Views.watchOS.iOSExtensions.ToUIColor(SkiaSharp.SKColorF)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:SkiaSharp.SKBitmap" />
      </Targets>
      <Member MemberName="ToUIImage">
        <MemberSignature Language="C#" Value="public static UIKit.UIImage ToUIImage (this SkiaSharp.SKBitmap skiaBitmap);" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class UIKit.UIImage ToUIImage(class SkiaSharp.SKBitmap skiaBitmap) cil managed" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberSignature Language="DocId" Value="M:SkiaSharp.Views.watchOS.iOSExtensions.ToUIImage(SkiaSharp.SKBitmap)" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType FrameworkAlternate="skiasharp-views-1.60">UIKit.UIImage</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="skiaBitmap" Type="SkiaSharp.SKBitmap" Index="0" FrameworkAlternate="skiasharp-views-1.60" RefType="this" />
        </Parameters>
        <Docs>
          <param name="skiaBitmap">The SkiaSharp bitmap.</param>
          <summary>Converts a SkiaSharp bitmap into a UIKit image.</summary>
        </Docs>
        <Link Type="SkiaSharp.Views.watchOS.iOSExtensions" Member="M:SkiaSharp.Views.watchOS.iOSExtensions.ToUIImage(SkiaSharp.SKBitmap)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:SkiaSharp.SKBitmap" />
      </Targets>
      <Member MemberName="ToUIImage">
        <MemberSignature Language="C#" Value="public static UIKit.UIImage ToUIImage (this SkiaSharp.SKBitmap skiaBitmap, nfloat scale, UIKit.UIImageOrientation orientation);" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class UIKit.UIImage ToUIImage(class SkiaSharp.SKBitmap skiaBitmap, valuetype System.nfloat scale, valuetype UIKit.UIImageOrientation orientation) cil managed" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberSignature Language="DocId" Value="M:SkiaSharp.Views.watchOS.iOSExtensions.ToUIImage(SkiaSharp.SKBitmap,System.nfloat,UIKit.UIImageOrientation)" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType FrameworkAlternate="skiasharp-views-1.60">UIKit.UIImage</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="skiaBitmap" Type="SkiaSharp.SKBitmap" Index="0" FrameworkAlternate="skiasharp-views-1.60" RefType="this" />
          <Parameter Name="scale" Type="System.nfloat" Index="1" FrameworkAlternate="skiasharp-views-1.60" />
          <Parameter Name="orientation" Type="UIKit.UIImageOrientation" Index="2" FrameworkAlternate="skiasharp-views-1.60" />
        </Parameters>
        <Docs>
          <param name="skiaBitmap">The SkiaSharp bitmap.</param>
          <param name="scale">The scale factor for the image. A factor of 1.0 is the original size of the image.</param>
          <param name="orientation">The rotation that is to be applied to the image.</param>
          <summary>Converts a SkiaSharp bitmap into a UIKit image.</summary>
        </Docs>
        <Link Type="SkiaSharp.Views.watchOS.iOSExtensions" Member="M:SkiaSharp.Views.watchOS.iOSExtensions.ToUIImage(SkiaSharp.SKBitmap,System.nfloat,UIKit.UIImageOrientation)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:SkiaSharp.SKImage" />
      </Targets>
      <Member MemberName="ToUIImage">
        <MemberSignature Language="C#" Value="public static UIKit.UIImage ToUIImage (this SkiaSharp.SKImage skiaImage);" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class UIKit.UIImage ToUIImage(class SkiaSharp.SKImage skiaImage) cil managed" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberSignature Language="DocId" Value="M:SkiaSharp.Views.watchOS.iOSExtensions.ToUIImage(SkiaSharp.SKImage)" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType FrameworkAlternate="skiasharp-views-1.60">UIKit.UIImage</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="skiaImage" Type="SkiaSharp.SKImage" Index="0" FrameworkAlternate="skiasharp-views-1.60" RefType="this" />
        </Parameters>
        <Docs>
          <param name="skiaImage">The SkiaSharp image.</param>
          <summary>Converts a SkiaSharp image into a UIKit image.</summary>
        </Docs>
        <Link Type="SkiaSharp.Views.watchOS.iOSExtensions" Member="M:SkiaSharp.Views.watchOS.iOSExtensions.ToUIImage(SkiaSharp.SKImage)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:SkiaSharp.SKPicture" />
      </Targets>
      <Member MemberName="ToUIImage">
        <MemberSignature Language="C#" Value="public static UIKit.UIImage ToUIImage (this SkiaSharp.SKPicture skiaPicture, SkiaSharp.SKSizeI dimensions);" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class UIKit.UIImage ToUIImage(class SkiaSharp.SKPicture skiaPicture, valuetype SkiaSharp.SKSizeI dimensions) cil managed" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberSignature Language="DocId" Value="M:SkiaSharp.Views.watchOS.iOSExtensions.ToUIImage(SkiaSharp.SKPicture,SkiaSharp.SKSizeI)" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType FrameworkAlternate="skiasharp-views-1.60">UIKit.UIImage</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="skiaPicture" Type="SkiaSharp.SKPicture" Index="0" FrameworkAlternate="skiasharp-views-1.60" RefType="this" />
          <Parameter Name="dimensions" Type="SkiaSharp.SKSizeI" Index="1" FrameworkAlternate="skiasharp-views-1.60" />
        </Parameters>
        <Docs>
          <param name="skiaPicture">The SkiaSharp picture.</param>
          <param name="dimensions">The dimensions of the picture.</param>
          <summary>Converts a SkiaSharp picture into a UIKit image.</summary>
        </Docs>
        <Link Type="SkiaSharp.Views.watchOS.iOSExtensions" Member="M:SkiaSharp.Views.watchOS.iOSExtensions.ToUIImage(SkiaSharp.SKPicture,SkiaSharp.SKSizeI)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:SkiaSharp.SKPicture" />
      </Targets>
      <Member MemberName="ToUIImage">
        <MemberSignature Language="C#" Value="public static UIKit.UIImage ToUIImage (this SkiaSharp.SKPicture skiaPicture, SkiaSharp.SKSizeI dimensions, nfloat scale, UIKit.UIImageOrientation orientation);" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class UIKit.UIImage ToUIImage(class SkiaSharp.SKPicture skiaPicture, valuetype SkiaSharp.SKSizeI dimensions, valuetype System.nfloat scale, valuetype UIKit.UIImageOrientation orientation) cil managed" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberSignature Language="DocId" Value="M:SkiaSharp.Views.watchOS.iOSExtensions.ToUIImage(SkiaSharp.SKPicture,SkiaSharp.SKSizeI,System.nfloat,UIKit.UIImageOrientation)" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType FrameworkAlternate="skiasharp-views-1.60">UIKit.UIImage</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="skiaPicture" Type="SkiaSharp.SKPicture" Index="0" FrameworkAlternate="skiasharp-views-1.60" RefType="this" />
          <Parameter Name="dimensions" Type="SkiaSharp.SKSizeI" Index="1" FrameworkAlternate="skiasharp-views-1.60" />
          <Parameter Name="scale" Type="System.nfloat" Index="2" FrameworkAlternate="skiasharp-views-1.60" />
          <Parameter Name="orientation" Type="UIKit.UIImageOrientation" Index="3" FrameworkAlternate="skiasharp-views-1.60" />
        </Parameters>
        <Docs>
          <param name="skiaPicture">The SkiaSharp picture.</param>
          <param name="dimensions">The dimensions of the picture.</param>
          <param name="scale">The scale factor for the image. A factor of 1.0 is the original size of the image.</param>
          <param name="orientation">The rotation that is to be applied to the image.</param>
          <summary>Converts a SkiaSharp picture into a UIKit image.</summary>
        </Docs>
        <Link Type="SkiaSharp.Views.watchOS.iOSExtensions" Member="M:SkiaSharp.Views.watchOS.iOSExtensions.ToUIImage(SkiaSharp.SKPicture,SkiaSharp.SKSizeI,System.nfloat,UIKit.UIImageOrientation)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:SkiaSharp.SKPixmap" />
      </Targets>
      <Member MemberName="ToUIImage">
        <MemberSignature Language="C#" Value="public static UIKit.UIImage ToUIImage (this SkiaSharp.SKPixmap skiaPixmap);" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class UIKit.UIImage ToUIImage(class SkiaSharp.SKPixmap skiaPixmap) cil managed" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberSignature Language="DocId" Value="M:SkiaSharp.Views.watchOS.iOSExtensions.ToUIImage(SkiaSharp.SKPixmap)" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType FrameworkAlternate="skiasharp-views-1.60">UIKit.UIImage</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="skiaPixmap" Type="SkiaSharp.SKPixmap" Index="0" FrameworkAlternate="skiasharp-views-1.60" RefType="this" />
        </Parameters>
        <Docs>
          <param name="skiaPixmap">The SkiaSharp pixmap.</param>
          <summary>Converts a SkiaSharp pixmap into a UIKit image.</summary>
        </Docs>
        <Link Type="SkiaSharp.Views.watchOS.iOSExtensions" Member="M:SkiaSharp.Views.watchOS.iOSExtensions.ToUIImage(SkiaSharp.SKPixmap)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:SkiaSharp.SKPixmap" />
      </Targets>
      <Member MemberName="ToUIImage">
        <MemberSignature Language="C#" Value="public static UIKit.UIImage ToUIImage (this SkiaSharp.SKPixmap skiaPixmap, nfloat scale, UIKit.UIImageOrientation orientation);" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class UIKit.UIImage ToUIImage(class SkiaSharp.SKPixmap skiaPixmap, valuetype System.nfloat scale, valuetype UIKit.UIImageOrientation orientation) cil managed" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberSignature Language="DocId" Value="M:SkiaSharp.Views.watchOS.iOSExtensions.ToUIImage(SkiaSharp.SKPixmap,System.nfloat,UIKit.UIImageOrientation)" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType FrameworkAlternate="skiasharp-views-1.60">UIKit.UIImage</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="skiaPixmap" Type="SkiaSharp.SKPixmap" Index="0" FrameworkAlternate="skiasharp-views-1.60" RefType="this" />
          <Parameter Name="scale" Type="System.nfloat" Index="1" FrameworkAlternate="skiasharp-views-1.60" />
          <Parameter Name="orientation" Type="UIKit.UIImageOrientation" Index="2" FrameworkAlternate="skiasharp-views-1.60" />
        </Parameters>
        <Docs>
          <param name="skiaPixmap">The SkiaSharp pixmap.</param>
          <param name="scale">The scale factor for the image. A factor of 1.0 is the original size of the image.</param>
          <param name="orientation">The rotation that is to be applied to the image.</param>
          <summary>Converts a SkiaSharp pixmap into a UIKit image.</summary>
        </Docs>
        <Link Type="SkiaSharp.Views.watchOS.iOSExtensions" Member="M:SkiaSharp.Views.watchOS.iOSExtensions.ToUIImage(SkiaSharp.SKPixmap,System.nfloat,UIKit.UIImageOrientation)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:SkiaSharp.SKPoint" />
      </Targets>
      <Member MemberName="ToDrawingPoint">
        <MemberSignature Language="C#" Value="public static System.Drawing.PointF ToDrawingPoint (this SkiaSharp.SKPoint point);" FrameworkAlternate="skiasharp-views-2.80" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Drawing.PointF ToDrawingPoint(valuetype SkiaSharp.SKPoint point) cil managed" FrameworkAlternate="skiasharp-views-2.80" />
        <MemberSignature Language="DocId" Value="M:SkiaSharp.Views.Windows.Extensions.ToDrawingPoint(SkiaSharp.SKPoint)" FrameworkAlternate="skiasharp-views-2.80" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType FrameworkAlternate="skiasharp-views-2.80">System.Drawing.PointF</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="point" Type="SkiaSharp.SKPoint" Index="0" FrameworkAlternate="skiasharp-views-2.80" RefType="this" />
        </Parameters>
        <Docs>
          <param name="point">The SkiaSharp point.</param>
          <summary>Converts a SkiaSharp point into a System.Drawing point.</summary>
        </Docs>
        <Link Type="SkiaSharp.Views.Windows.Extensions" Member="M:SkiaSharp.Views.Windows.Extensions.ToDrawingPoint(SkiaSharp.SKPoint)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:SkiaSharp.SKPointI" />
      </Targets>
      <Member MemberName="ToDrawingPoint">
        <MemberSignature Language="C#" Value="public static System.Drawing.Point ToDrawingPoint (this SkiaSharp.SKPointI point);" FrameworkAlternate="skiasharp-views-2.80" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Drawing.Point ToDrawingPoint(valuetype SkiaSharp.SKPointI point) cil managed" FrameworkAlternate="skiasharp-views-2.80" />
        <MemberSignature Language="DocId" Value="M:SkiaSharp.Views.Windows.Extensions.ToDrawingPoint(SkiaSharp.SKPointI)" FrameworkAlternate="skiasharp-views-2.80" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType FrameworkAlternate="skiasharp-views-2.80">System.Drawing.Point</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="point" Type="SkiaSharp.SKPointI" Index="0" FrameworkAlternate="skiasharp-views-2.80" RefType="this" />
        </Parameters>
        <Docs>
          <param name="point">The SkiaSharp point.</param>
          <summary>Converts a SkiaSharp point into a System.Drawing point.</summary>
        </Docs>
        <Link Type="SkiaSharp.Views.Windows.Extensions" Member="M:SkiaSharp.Views.Windows.Extensions.ToDrawingPoint(SkiaSharp.SKPointI)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:SkiaSharp.SKRect" />
      </Targets>
      <Member MemberName="ToDrawingRect">
        <MemberSignature Language="C#" Value="public static System.Drawing.RectangleF ToDrawingRect (this SkiaSharp.SKRect rect);" FrameworkAlternate="skiasharp-views-2.80" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Drawing.RectangleF ToDrawingRect(valuetype SkiaSharp.SKRect rect) cil managed" FrameworkAlternate="skiasharp-views-2.80" />
        <MemberSignature Language="DocId" Value="M:SkiaSharp.Views.Windows.Extensions.ToDrawingRect(SkiaSharp.SKRect)" FrameworkAlternate="skiasharp-views-2.80" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType FrameworkAlternate="skiasharp-views-2.80">System.Drawing.RectangleF</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="rect" Type="SkiaSharp.SKRect" Index="0" FrameworkAlternate="skiasharp-views-2.80" RefType="this" />
        </Parameters>
        <Docs>
          <param name="rect">The SkiaSharp rectangle.</param>
          <summary>Converts a SkiaSharp rectangle into a System.Drawing rectangle.</summary>
        </Docs>
        <Link Type="SkiaSharp.Views.Windows.Extensions" Member="M:SkiaSharp.Views.Windows.Extensions.ToDrawingRect(SkiaSharp.SKRect)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:SkiaSharp.SKRectI" />
      </Targets>
      <Member MemberName="ToDrawingRect">
        <MemberSignature Language="C#" Value="public static System.Drawing.Rectangle ToDrawingRect (this SkiaSharp.SKRectI rect);" FrameworkAlternate="skiasharp-views-2.80" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Drawing.Rectangle ToDrawingRect(valuetype SkiaSharp.SKRectI rect) cil managed" FrameworkAlternate="skiasharp-views-2.80" />
        <MemberSignature Language="DocId" Value="M:SkiaSharp.Views.Windows.Extensions.ToDrawingRect(SkiaSharp.SKRectI)" FrameworkAlternate="skiasharp-views-2.80" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType FrameworkAlternate="skiasharp-views-2.80">System.Drawing.Rectangle</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="rect" Type="SkiaSharp.SKRectI" Index="0" FrameworkAlternate="skiasharp-views-2.80" RefType="this" />
        </Parameters>
        <Docs>
          <param name="rect">The SkiaSharp rectangle.</param>
          <summary>Converts a SkiaSharp rectangle into a System.Drawing rectangle.</summary>
        </Docs>
        <Link Type="SkiaSharp.Views.Windows.Extensions" Member="M:SkiaSharp.Views.Windows.Extensions.ToDrawingRect(SkiaSharp.SKRectI)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:SkiaSharp.SKSize" />
      </Targets>
      <Member MemberName="ToDrawingSize">
        <MemberSignature Language="C#" Value="public static System.Drawing.SizeF ToDrawingSize (this SkiaSharp.SKSize size);" FrameworkAlternate="skiasharp-views-2.80" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Drawing.SizeF ToDrawingSize(valuetype SkiaSharp.SKSize size) cil managed" FrameworkAlternate="skiasharp-views-2.80" />
        <MemberSignature Language="DocId" Value="M:SkiaSharp.Views.Windows.Extensions.ToDrawingSize(SkiaSharp.SKSize)" FrameworkAlternate="skiasharp-views-2.80" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType FrameworkAlternate="skiasharp-views-2.80">System.Drawing.SizeF</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="size" Type="SkiaSharp.SKSize" Index="0" FrameworkAlternate="skiasharp-views-2.80" RefType="this" />
        </Parameters>
        <Docs>
          <param name="size">The SkiaSharp size.</param>
          <summary>Converts a SkiaSharp size into a System.Drawing size.</summary>
        </Docs>
        <Link Type="SkiaSharp.Views.Windows.Extensions" Member="M:SkiaSharp.Views.Windows.Extensions.ToDrawingSize(SkiaSharp.SKSize)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:SkiaSharp.SKSizeI" />
      </Targets>
      <Member MemberName="ToDrawingSize">
        <MemberSignature Language="C#" Value="public static System.Drawing.Size ToDrawingSize (this SkiaSharp.SKSizeI size);" FrameworkAlternate="skiasharp-views-2.80" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Drawing.Size ToDrawingSize(valuetype SkiaSharp.SKSizeI size) cil managed" FrameworkAlternate="skiasharp-views-2.80" />
        <MemberSignature Language="DocId" Value="M:SkiaSharp.Views.Windows.Extensions.ToDrawingSize(SkiaSharp.SKSizeI)" FrameworkAlternate="skiasharp-views-2.80" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType FrameworkAlternate="skiasharp-views-2.80">System.Drawing.Size</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="size" Type="SkiaSharp.SKSizeI" Index="0" FrameworkAlternate="skiasharp-views-2.80" RefType="this" />
        </Parameters>
        <Docs>
          <param name="size">The SkiaSharp size.</param>
          <summary>Converts a SkiaSharp size into a System.Drawing size.</summary>
        </Docs>
        <Link Type="SkiaSharp.Views.Windows.Extensions" Member="M:SkiaSharp.Views.Windows.Extensions.ToDrawingSize(SkiaSharp.SKSizeI)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.Drawing.Point" />
      </Targets>
      <Member MemberName="ToSKPoint">
        <MemberSignature Language="C#" Value="public static SkiaSharp.SKPointI ToSKPoint (this System.Drawing.Point point);" FrameworkAlternate="skiasharp-views-2.80" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype SkiaSharp.SKPointI ToSKPoint(valuetype System.Drawing.Point point) cil managed" FrameworkAlternate="skiasharp-views-2.80" />
        <MemberSignature Language="DocId" Value="M:SkiaSharp.Views.Windows.Extensions.ToSKPoint(System.Drawing.Point)" FrameworkAlternate="skiasharp-views-2.80" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType FrameworkAlternate="skiasharp-views-2.80">SkiaSharp.SKPointI</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="point" Type="System.Drawing.Point" Index="0" FrameworkAlternate="skiasharp-views-2.80" RefType="this" />
        </Parameters>
        <Docs>
          <param name="point">The System.Drawing point.</param>
          <summary>Converts a System.Drawing point into a SkiaSharp point.</summary>
        </Docs>
        <Link Type="SkiaSharp.Views.Windows.Extensions" Member="M:SkiaSharp.Views.Windows.Extensions.ToSKPoint(System.Drawing.Point)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.Drawing.PointF" />
      </Targets>
      <Member MemberName="ToSKPoint">
        <MemberSignature Language="C#" Value="public static SkiaSharp.SKPoint ToSKPoint (this System.Drawing.PointF point);" FrameworkAlternate="skiasharp-views-2.80" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype SkiaSharp.SKPoint ToSKPoint(valuetype System.Drawing.PointF point) cil managed" FrameworkAlternate="skiasharp-views-2.80" />
        <MemberSignature Language="DocId" Value="M:SkiaSharp.Views.Windows.Extensions.ToSKPoint(System.Drawing.PointF)" FrameworkAlternate="skiasharp-views-2.80" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType FrameworkAlternate="skiasharp-views-2.80">SkiaSharp.SKPoint</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="point" Type="System.Drawing.PointF" Index="0" FrameworkAlternate="skiasharp-views-2.80" RefType="this" />
        </Parameters>
        <Docs>
          <param name="point">The System.Drawing point.</param>
          <summary>Converts a System.Drawing point into a SkiaSharp point.</summary>
        </Docs>
        <Link Type="SkiaSharp.Views.Windows.Extensions" Member="M:SkiaSharp.Views.Windows.Extensions.ToSKPoint(System.Drawing.PointF)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.Drawing.Rectangle" />
      </Targets>
      <Member MemberName="ToSKRect">
        <MemberSignature Language="C#" Value="public static SkiaSharp.SKRectI ToSKRect (this System.Drawing.Rectangle rect);" FrameworkAlternate="skiasharp-views-2.80" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype SkiaSharp.SKRectI ToSKRect(valuetype System.Drawing.Rectangle rect) cil managed" FrameworkAlternate="skiasharp-views-2.80" />
        <MemberSignature Language="DocId" Value="M:SkiaSharp.Views.Windows.Extensions.ToSKRect(System.Drawing.Rectangle)" FrameworkAlternate="skiasharp-views-2.80" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType FrameworkAlternate="skiasharp-views-2.80">SkiaSharp.SKRectI</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="rect" Type="System.Drawing.Rectangle" Index="0" FrameworkAlternate="skiasharp-views-2.80" RefType="this" />
        </Parameters>
        <Docs>
          <param name="rect">The System.Drawing rectangle.</param>
          <summary>Converts a System.Drawing rectangle into a SkiaSharp rectangle.</summary>
        </Docs>
        <Link Type="SkiaSharp.Views.Windows.Extensions" Member="M:SkiaSharp.Views.Windows.Extensions.ToSKRect(System.Drawing.Rectangle)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.Drawing.RectangleF" />
      </Targets>
      <Member MemberName="ToSKRect">
        <MemberSignature Language="C#" Value="public static SkiaSharp.SKRect ToSKRect (this System.Drawing.RectangleF rect);" FrameworkAlternate="skiasharp-views-2.80" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype SkiaSharp.SKRect ToSKRect(valuetype System.Drawing.RectangleF rect) cil managed" FrameworkAlternate="skiasharp-views-2.80" />
        <MemberSignature Language="DocId" Value="M:SkiaSharp.Views.Windows.Extensions.ToSKRect(System.Drawing.RectangleF)" FrameworkAlternate="skiasharp-views-2.80" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType FrameworkAlternate="skiasharp-views-2.80">SkiaSharp.SKRect</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="rect" Type="System.Drawing.RectangleF" Index="0" FrameworkAlternate="skiasharp-views-2.80" RefType="this" />
        </Parameters>
        <Docs>
          <param name="rect">The System.Drawing rectangle.</param>
          <summary>Converts a System.Drawing rectangle into a SkiaSharp rectangle.</summary>
        </Docs>
        <Link Type="SkiaSharp.Views.Windows.Extensions" Member="M:SkiaSharp.Views.Windows.Extensions.ToSKRect(System.Drawing.RectangleF)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.Drawing.Size" />
      </Targets>
      <Member MemberName="ToSKSize">
        <MemberSignature Language="C#" Value="public static SkiaSharp.SKSizeI ToSKSize (this System.Drawing.Size size);" FrameworkAlternate="skiasharp-views-2.80" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype SkiaSharp.SKSizeI ToSKSize(valuetype System.Drawing.Size size) cil managed" FrameworkAlternate="skiasharp-views-2.80" />
        <MemberSignature Language="DocId" Value="M:SkiaSharp.Views.Windows.Extensions.ToSKSize(System.Drawing.Size)" FrameworkAlternate="skiasharp-views-2.80" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType FrameworkAlternate="skiasharp-views-2.80">SkiaSharp.SKSizeI</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="size" Type="System.Drawing.Size" Index="0" FrameworkAlternate="skiasharp-views-2.80" RefType="this" />
        </Parameters>
        <Docs>
          <param name="size">The System.Drawing size.</param>
          <summary>Converts a System.Drawing size into a SkiaSharp size.</summary>
        </Docs>
        <Link Type="SkiaSharp.Views.Windows.Extensions" Member="M:SkiaSharp.Views.Windows.Extensions.ToSKSize(System.Drawing.Size)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.Drawing.SizeF" />
      </Targets>
      <Member MemberName="ToSKSize">
        <MemberSignature Language="C#" Value="public static SkiaSharp.SKSize ToSKSize (this System.Drawing.SizeF size);" FrameworkAlternate="skiasharp-views-2.80" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype SkiaSharp.SKSize ToSKSize(valuetype System.Drawing.SizeF size) cil managed" FrameworkAlternate="skiasharp-views-2.80" />
        <MemberSignature Language="DocId" Value="M:SkiaSharp.Views.Windows.Extensions.ToSKSize(System.Drawing.SizeF)" FrameworkAlternate="skiasharp-views-2.80" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType FrameworkAlternate="skiasharp-views-2.80">SkiaSharp.SKSize</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="size" Type="System.Drawing.SizeF" Index="0" FrameworkAlternate="skiasharp-views-2.80" RefType="this" />
        </Parameters>
        <Docs>
          <param name="size">The System.Drawing size.</param>
          <summary>Converts a System.Drawing size into a SkiaSharp size.</summary>
        </Docs>
        <Link Type="SkiaSharp.Views.Windows.Extensions" Member="M:SkiaSharp.Views.Windows.Extensions.ToSKSize(System.Drawing.SizeF)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:SkiaSharp.SKColor" />
      </Targets>
      <Member MemberName="ToColor">
        <MemberSignature Language="C#" Value="public static Windows.UI.Color ToColor (this SkiaSharp.SKColor color);" FrameworkAlternate="skiasharp-views-2.80" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype Windows.UI.Color ToColor(valuetype SkiaSharp.SKColor color) cil managed" FrameworkAlternate="skiasharp-views-2.80" />
        <MemberSignature Language="DocId" Value="M:SkiaSharp.Views.Windows.WindowsExtensions.ToColor(SkiaSharp.SKColor)" FrameworkAlternate="skiasharp-views-2.80" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType FrameworkAlternate="skiasharp-views-2.80">Windows.UI.Color</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="color" Type="SkiaSharp.SKColor" Index="0" FrameworkAlternate="skiasharp-views-2.80" RefType="this" />
        </Parameters>
        <Docs>
          <param name="color">The SkiaSharp color.</param>
          <summary>Converts a SkiaSharp color into a Windows color.</summary>
        </Docs>
        <Link Type="SkiaSharp.Views.Windows.WindowsExtensions" Member="M:SkiaSharp.Views.Windows.WindowsExtensions.ToColor(SkiaSharp.SKColor)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:SkiaSharp.SKPoint" />
      </Targets>
      <Member MemberName="ToPoint">
        <MemberSignature Language="C#" Value="public static Windows.Foundation.Point ToPoint (this SkiaSharp.SKPoint point);" FrameworkAlternate="skiasharp-views-2.80" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype Windows.Foundation.Point ToPoint(valuetype SkiaSharp.SKPoint point) cil managed" FrameworkAlternate="skiasharp-views-2.80" />
        <MemberSignature Language="DocId" Value="M:SkiaSharp.Views.Windows.WindowsExtensions.ToPoint(SkiaSharp.SKPoint)" FrameworkAlternate="skiasharp-views-2.80" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType FrameworkAlternate="skiasharp-views-2.80">Windows.Foundation.Point</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="point" Type="SkiaSharp.SKPoint" Index="0" FrameworkAlternate="skiasharp-views-2.80" RefType="this" />
        </Parameters>
        <Docs>
          <param name="point">The SkiaSharp point.</param>
          <summary>Converts a SkiaSharp point into a Windows point.</summary>
        </Docs>
        <Link Type="SkiaSharp.Views.Windows.WindowsExtensions" Member="M:SkiaSharp.Views.Windows.WindowsExtensions.ToPoint(SkiaSharp.SKPoint)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:SkiaSharp.SKRect" />
      </Targets>
      <Member MemberName="ToRect">
        <MemberSignature Language="C#" Value="public static Windows.Foundation.Rect ToRect (this SkiaSharp.SKRect rect);" FrameworkAlternate="skiasharp-views-2.80" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype Windows.Foundation.Rect ToRect(valuetype SkiaSharp.SKRect rect) cil managed" FrameworkAlternate="skiasharp-views-2.80" />
        <MemberSignature Language="DocId" Value="M:SkiaSharp.Views.Windows.WindowsExtensions.ToRect(SkiaSharp.SKRect)" FrameworkAlternate="skiasharp-views-2.80" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType FrameworkAlternate="skiasharp-views-2.80">Windows.Foundation.Rect</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="rect" Type="SkiaSharp.SKRect" Index="0" FrameworkAlternate="skiasharp-views-2.80" RefType="this" />
        </Parameters>
        <Docs>
          <param name="rect">The SkiaSharp rectangle.</param>
          <summary>Converts a SkiaSharp rectangle into a Windows rectangle.</summary>
        </Docs>
        <Link Type="SkiaSharp.Views.Windows.WindowsExtensions" Member="M:SkiaSharp.Views.Windows.WindowsExtensions.ToRect(SkiaSharp.SKRect)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:SkiaSharp.SKSize" />
      </Targets>
      <Member MemberName="ToSize">
        <MemberSignature Language="C#" Value="public static Windows.Foundation.Size ToSize (this SkiaSharp.SKSize size);" FrameworkAlternate="skiasharp-views-2.80" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype Windows.Foundation.Size ToSize(valuetype SkiaSharp.SKSize size) cil managed" FrameworkAlternate="skiasharp-views-2.80" />
        <MemberSignature Language="DocId" Value="M:SkiaSharp.Views.Windows.WindowsExtensions.ToSize(SkiaSharp.SKSize)" FrameworkAlternate="skiasharp-views-2.80" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType FrameworkAlternate="skiasharp-views-2.80">Windows.Foundation.Size</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="size" Type="SkiaSharp.SKSize" Index="0" FrameworkAlternate="skiasharp-views-2.80" RefType="this" />
        </Parameters>
        <Docs>
          <param name="size">The SkiaSharp size.</param>
          <summary>Converts a SkiaSharp size into a Windows size.</summary>
        </Docs>
        <Link Type="SkiaSharp.Views.Windows.WindowsExtensions" Member="M:SkiaSharp.Views.Windows.WindowsExtensions.ToSize(SkiaSharp.SKSize)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.UI.Xaml.Media.Imaging.WriteableBitmap" />
      </Targets>
      <Member MemberName="ToSKBitmap">
        <MemberSignature Language="C#" Value="public static SkiaSharp.SKBitmap ToSKBitmap (this Microsoft.UI.Xaml.Media.Imaging.WriteableBitmap bitmap);" FrameworkAlternate="skiasharp-views-2.80" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class SkiaSharp.SKBitmap ToSKBitmap(class Microsoft.UI.Xaml.Media.Imaging.WriteableBitmap bitmap) cil managed" FrameworkAlternate="skiasharp-views-2.80" />
        <MemberSignature Language="DocId" Value="M:SkiaSharp.Views.Windows.WindowsExtensions.ToSKBitmap(Microsoft.UI.Xaml.Media.Imaging.WriteableBitmap)" FrameworkAlternate="skiasharp-views-2.80" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType FrameworkAlternate="skiasharp-views-2.80">SkiaSharp.SKBitmap</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="bitmap" Type="Microsoft.UI.Xaml.Media.Imaging.WriteableBitmap" Index="0" FrameworkAlternate="skiasharp-views-2.80" RefType="this" />
        </Parameters>
        <Docs>
          <param name="bitmap">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="SkiaSharp.Views.Windows.WindowsExtensions" Member="M:SkiaSharp.Views.Windows.WindowsExtensions.ToSKBitmap(Microsoft.UI.Xaml.Media.Imaging.WriteableBitmap)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Windows.UI.Color" />
      </Targets>
      <Member MemberName="ToSKColor">
        <MemberSignature Language="C#" Value="public static SkiaSharp.SKColor ToSKColor (this Windows.UI.Color color);" FrameworkAlternate="skiasharp-views-2.80" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype SkiaSharp.SKColor ToSKColor(valuetype Windows.UI.Color color) cil managed" FrameworkAlternate="skiasharp-views-2.80" />
        <MemberSignature Language="DocId" Value="M:SkiaSharp.Views.Windows.WindowsExtensions.ToSKColor(Windows.UI.Color)" FrameworkAlternate="skiasharp-views-2.80" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType FrameworkAlternate="skiasharp-views-2.80">SkiaSharp.SKColor</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="color" Type="Windows.UI.Color" Index="0" FrameworkAlternate="skiasharp-views-2.80" RefType="this" />
        </Parameters>
        <Docs>
          <param name="color">The Windows color.</param>
          <summary>Converts a Windows color into a SkiaSharp color.</summary>
        </Docs>
        <Link Type="SkiaSharp.Views.Windows.WindowsExtensions" Member="M:SkiaSharp.Views.Windows.WindowsExtensions.ToSKColor(Windows.UI.Color)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.UI.Xaml.Media.Imaging.WriteableBitmap" />
      </Targets>
      <Member MemberName="ToSKImage">
        <MemberSignature Language="C#" Value="public static SkiaSharp.SKImage ToSKImage (this Microsoft.UI.Xaml.Media.Imaging.WriteableBitmap bitmap);" FrameworkAlternate="skiasharp-views-2.80" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class SkiaSharp.SKImage ToSKImage(class Microsoft.UI.Xaml.Media.Imaging.WriteableBitmap bitmap) cil managed" FrameworkAlternate="skiasharp-views-2.80" />
        <MemberSignature Language="DocId" Value="M:SkiaSharp.Views.Windows.WindowsExtensions.ToSKImage(Microsoft.UI.Xaml.Media.Imaging.WriteableBitmap)" FrameworkAlternate="skiasharp-views-2.80" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType FrameworkAlternate="skiasharp-views-2.80">SkiaSharp.SKImage</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="bitmap" Type="Microsoft.UI.Xaml.Media.Imaging.WriteableBitmap" Index="0" FrameworkAlternate="skiasharp-views-2.80" RefType="this" />
        </Parameters>
        <Docs>
          <param name="bitmap">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="SkiaSharp.Views.Windows.WindowsExtensions" Member="M:SkiaSharp.Views.Windows.WindowsExtensions.ToSKImage(Microsoft.UI.Xaml.Media.Imaging.WriteableBitmap)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.UI.Xaml.Media.Imaging.WriteableBitmap" />
      </Targets>
      <Member MemberName="ToSKPixmap">
        <MemberSignature Language="C#" Value="public static bool ToSKPixmap (this Microsoft.UI.Xaml.Media.Imaging.WriteableBitmap bitmap, SkiaSharp.SKPixmap pixmap);" FrameworkAlternate="skiasharp-views-2.80" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool ToSKPixmap(class Microsoft.UI.Xaml.Media.Imaging.WriteableBitmap bitmap, class SkiaSharp.SKPixmap pixmap) cil managed" FrameworkAlternate="skiasharp-views-2.80" />
        <MemberSignature Language="DocId" Value="M:SkiaSharp.Views.Windows.WindowsExtensions.ToSKPixmap(Microsoft.UI.Xaml.Media.Imaging.WriteableBitmap,SkiaSharp.SKPixmap)" FrameworkAlternate="skiasharp-views-2.80" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType FrameworkAlternate="skiasharp-views-2.80">System.Boolean</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="bitmap" Type="Microsoft.UI.Xaml.Media.Imaging.WriteableBitmap" Index="0" FrameworkAlternate="skiasharp-views-2.80" RefType="this" />
          <Parameter Name="pixmap" Type="SkiaSharp.SKPixmap" Index="1" FrameworkAlternate="skiasharp-views-2.80" />
        </Parameters>
        <Docs>
          <param name="bitmap">To be added.</param>
          <param name="pixmap">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="SkiaSharp.Views.Windows.WindowsExtensions" Member="M:SkiaSharp.Views.Windows.WindowsExtensions.ToSKPixmap(Microsoft.UI.Xaml.Media.Imaging.WriteableBitmap,SkiaSharp.SKPixmap)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Windows.Foundation.Point" />
      </Targets>
      <Member MemberName="ToSKPoint">
        <MemberSignature Language="C#" Value="public static SkiaSharp.SKPoint ToSKPoint (this Windows.Foundation.Point point);" FrameworkAlternate="skiasharp-views-2.80" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype SkiaSharp.SKPoint ToSKPoint(valuetype Windows.Foundation.Point point) cil managed" FrameworkAlternate="skiasharp-views-2.80" />
        <MemberSignature Language="DocId" Value="M:SkiaSharp.Views.Windows.WindowsExtensions.ToSKPoint(Windows.Foundation.Point)" FrameworkAlternate="skiasharp-views-2.80" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType FrameworkAlternate="skiasharp-views-2.80">SkiaSharp.SKPoint</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="point" Type="Windows.Foundation.Point" Index="0" FrameworkAlternate="skiasharp-views-2.80" RefType="this" />
        </Parameters>
        <Docs>
          <param name="point">The Windows point.</param>
          <summary>Converts a Windows point into a SkiaSharp point.</summary>
        </Docs>
        <Link Type="SkiaSharp.Views.Windows.WindowsExtensions" Member="M:SkiaSharp.Views.Windows.WindowsExtensions.ToSKPoint(Windows.Foundation.Point)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Windows.Foundation.Rect" />
      </Targets>
      <Member MemberName="ToSKRect">
        <MemberSignature Language="C#" Value="public static SkiaSharp.SKRect ToSKRect (this Windows.Foundation.Rect rect);" FrameworkAlternate="skiasharp-views-2.80" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype SkiaSharp.SKRect ToSKRect(valuetype Windows.Foundation.Rect rect) cil managed" FrameworkAlternate="skiasharp-views-2.80" />
        <MemberSignature Language="DocId" Value="M:SkiaSharp.Views.Windows.WindowsExtensions.ToSKRect(Windows.Foundation.Rect)" FrameworkAlternate="skiasharp-views-2.80" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType FrameworkAlternate="skiasharp-views-2.80">SkiaSharp.SKRect</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="rect" Type="Windows.Foundation.Rect" Index="0" FrameworkAlternate="skiasharp-views-2.80" RefType="this" />
        </Parameters>
        <Docs>
          <param name="rect">The Windows rectangle</param>
          <summary>Converts a Windows rectangle into a SkiaSharp rectangle.</summary>
        </Docs>
        <Link Type="SkiaSharp.Views.Windows.WindowsExtensions" Member="M:SkiaSharp.Views.Windows.WindowsExtensions.ToSKRect(Windows.Foundation.Rect)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Windows.Foundation.Size" />
      </Targets>
      <Member MemberName="ToSKSize">
        <MemberSignature Language="C#" Value="public static SkiaSharp.SKSize ToSKSize (this Windows.Foundation.Size size);" FrameworkAlternate="skiasharp-views-2.80" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype SkiaSharp.SKSize ToSKSize(valuetype Windows.Foundation.Size size) cil managed" FrameworkAlternate="skiasharp-views-2.80" />
        <MemberSignature Language="DocId" Value="M:SkiaSharp.Views.Windows.WindowsExtensions.ToSKSize(Windows.Foundation.Size)" FrameworkAlternate="skiasharp-views-2.80" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType FrameworkAlternate="skiasharp-views-2.80">SkiaSharp.SKSize</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="size" Type="Windows.Foundation.Size" Index="0" FrameworkAlternate="skiasharp-views-2.80" RefType="this" />
        </Parameters>
        <Docs>
          <param name="size">The Windows size.</param>
          <summary>Converts a Windows size into a SkiaSharp size.</summary>
        </Docs>
        <Link Type="SkiaSharp.Views.Windows.WindowsExtensions" Member="M:SkiaSharp.Views.Windows.WindowsExtensions.ToSKSize(Windows.Foundation.Size)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:SkiaSharp.SKBitmap" />
      </Targets>
      <Member MemberName="ToWriteableBitmap">
        <MemberSignature Language="C#" Value="public static Microsoft.UI.Xaml.Media.Imaging.WriteableBitmap ToWriteableBitmap (this SkiaSharp.SKBitmap skiaBitmap);" FrameworkAlternate="skiasharp-views-2.80" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.UI.Xaml.Media.Imaging.WriteableBitmap ToWriteableBitmap(class SkiaSharp.SKBitmap skiaBitmap) cil managed" FrameworkAlternate="skiasharp-views-2.80" />
        <MemberSignature Language="DocId" Value="M:SkiaSharp.Views.Windows.WindowsExtensions.ToWriteableBitmap(SkiaSharp.SKBitmap)" FrameworkAlternate="skiasharp-views-2.80" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType FrameworkAlternate="skiasharp-views-2.80">Microsoft.UI.Xaml.Media.Imaging.WriteableBitmap</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="skiaBitmap" Type="SkiaSharp.SKBitmap" Index="0" FrameworkAlternate="skiasharp-views-2.80" RefType="this" />
        </Parameters>
        <Docs>
          <param name="skiaBitmap">The SkiaSharp bitmap.</param>
          <summary>Converts a SkiaSharp bitmap into a Windows WriteableBitmap.</summary>
        </Docs>
        <Link Type="SkiaSharp.Views.Windows.WindowsExtensions" Member="M:SkiaSharp.Views.Windows.WindowsExtensions.ToWriteableBitmap(SkiaSharp.SKBitmap)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:SkiaSharp.SKImage" />
      </Targets>
      <Member MemberName="ToWriteableBitmap">
        <MemberSignature Language="C#" Value="public static Microsoft.UI.Xaml.Media.Imaging.WriteableBitmap ToWriteableBitmap (this SkiaSharp.SKImage skiaImage);" FrameworkAlternate="skiasharp-views-2.80" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.UI.Xaml.Media.Imaging.WriteableBitmap ToWriteableBitmap(class SkiaSharp.SKImage skiaImage) cil managed" FrameworkAlternate="skiasharp-views-2.80" />
        <MemberSignature Language="DocId" Value="M:SkiaSharp.Views.Windows.WindowsExtensions.ToWriteableBitmap(SkiaSharp.SKImage)" FrameworkAlternate="skiasharp-views-2.80" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType FrameworkAlternate="skiasharp-views-2.80">Microsoft.UI.Xaml.Media.Imaging.WriteableBitmap</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="skiaImage" Type="SkiaSharp.SKImage" Index="0" FrameworkAlternate="skiasharp-views-2.80" RefType="this" />
        </Parameters>
        <Docs>
          <param name="skiaImage">The SkiaSharp image.</param>
          <summary>Converts a SkiaSharp image into a Windows WriteableBitmap.</summary>
        </Docs>
        <Link Type="SkiaSharp.Views.Windows.WindowsExtensions" Member="M:SkiaSharp.Views.Windows.WindowsExtensions.ToWriteableBitmap(SkiaSharp.SKImage)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:SkiaSharp.SKPicture" />
      </Targets>
      <Member MemberName="ToWriteableBitmap">
        <MemberSignature Language="C#" Value="public static Microsoft.UI.Xaml.Media.Imaging.WriteableBitmap ToWriteableBitmap (this SkiaSharp.SKPicture picture, SkiaSharp.SKSizeI dimensions);" FrameworkAlternate="skiasharp-views-2.80" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.UI.Xaml.Media.Imaging.WriteableBitmap ToWriteableBitmap(class SkiaSharp.SKPicture picture, valuetype SkiaSharp.SKSizeI dimensions) cil managed" FrameworkAlternate="skiasharp-views-2.80" />
        <MemberSignature Language="DocId" Value="M:SkiaSharp.Views.Windows.WindowsExtensions.ToWriteableBitmap(SkiaSharp.SKPicture,SkiaSharp.SKSizeI)" FrameworkAlternate="skiasharp-views-2.80" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType FrameworkAlternate="skiasharp-views-2.80">Microsoft.UI.Xaml.Media.Imaging.WriteableBitmap</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="picture" Type="SkiaSharp.SKPicture" Index="0" FrameworkAlternate="skiasharp-views-2.80" RefType="this" />
          <Parameter Name="dimensions" Type="SkiaSharp.SKSizeI" Index="1" FrameworkAlternate="skiasharp-views-2.80" />
        </Parameters>
        <Docs>
          <param name="picture">The SkiaSharp picture.</param>
          <param name="dimensions">The dimensions of the picture.</param>
          <summary>Converts a SkiaSharp picture into a Windows WriteableBitmap.</summary>
        </Docs>
        <Link Type="SkiaSharp.Views.Windows.WindowsExtensions" Member="M:SkiaSharp.Views.Windows.WindowsExtensions.ToWriteableBitmap(SkiaSharp.SKPicture,SkiaSharp.SKSizeI)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:SkiaSharp.SKPixmap" />
      </Targets>
      <Member MemberName="ToWriteableBitmap">
        <MemberSignature Language="C#" Value="public static Microsoft.UI.Xaml.Media.Imaging.WriteableBitmap ToWriteableBitmap (this SkiaSharp.SKPixmap pixmap);" FrameworkAlternate="skiasharp-views-2.80" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.UI.Xaml.Media.Imaging.WriteableBitmap ToWriteableBitmap(class SkiaSharp.SKPixmap pixmap) cil managed" FrameworkAlternate="skiasharp-views-2.80" />
        <MemberSignature Language="DocId" Value="M:SkiaSharp.Views.Windows.WindowsExtensions.ToWriteableBitmap(SkiaSharp.SKPixmap)" FrameworkAlternate="skiasharp-views-2.80" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType FrameworkAlternate="skiasharp-views-2.80">Microsoft.UI.Xaml.Media.Imaging.WriteableBitmap</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="pixmap" Type="SkiaSharp.SKPixmap" Index="0" FrameworkAlternate="skiasharp-views-2.80" RefType="this" />
        </Parameters>
        <Docs>
          <param name="pixmap">The SkiaSharp pixmap.</param>
          <summary>Converts a SkiaSharp pixmap into a Windows WriteableBitmap.</summary>
        </Docs>
        <Link Type="SkiaSharp.Views.Windows.WindowsExtensions" Member="M:SkiaSharp.Views.Windows.WindowsExtensions.ToWriteableBitmap(SkiaSharp.SKPixmap)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:SkiaSharp.SKColor" />
      </Targets>
      <Member MemberName="ToColor">
        <MemberSignature Language="C#" Value="public static System.Windows.Media.Color ToColor (this SkiaSharp.SKColor color);" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Windows.Media.Color ToColor(valuetype SkiaSharp.SKColor color) cil managed" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberSignature Language="DocId" Value="M:SkiaSharp.Views.WPF.WPFExtensions.ToColor(SkiaSharp.SKColor)" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType FrameworkAlternate="skiasharp-views-1.60">System.Windows.Media.Color</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="color" Type="SkiaSharp.SKColor" Index="0" FrameworkAlternate="skiasharp-views-1.60" RefType="this" />
        </Parameters>
        <Docs>
          <param name="color">The SkiaSharp color.</param>
          <summary>Converts a SkiaSharp color into a Windows color.</summary>
        </Docs>
        <Link Type="SkiaSharp.Views.WPF.WPFExtensions" Member="M:SkiaSharp.Views.WPF.WPFExtensions.ToColor(SkiaSharp.SKColor)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:SkiaSharp.SKPoint" />
      </Targets>
      <Member MemberName="ToPoint">
        <MemberSignature Language="C#" Value="public static System.Windows.Point ToPoint (this SkiaSharp.SKPoint point);" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Windows.Point ToPoint(valuetype SkiaSharp.SKPoint point) cil managed" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberSignature Language="DocId" Value="M:SkiaSharp.Views.WPF.WPFExtensions.ToPoint(SkiaSharp.SKPoint)" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType FrameworkAlternate="skiasharp-views-1.60">System.Windows.Point</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="point" Type="SkiaSharp.SKPoint" Index="0" FrameworkAlternate="skiasharp-views-1.60" RefType="this" />
        </Parameters>
        <Docs>
          <param name="point">The SkiaSharp point.</param>
          <summary>Converts a SkiaSharp point into a Windows point.</summary>
        </Docs>
        <Link Type="SkiaSharp.Views.WPF.WPFExtensions" Member="M:SkiaSharp.Views.WPF.WPFExtensions.ToPoint(SkiaSharp.SKPoint)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:SkiaSharp.SKRect" />
      </Targets>
      <Member MemberName="ToRect">
        <MemberSignature Language="C#" Value="public static System.Windows.Rect ToRect (this SkiaSharp.SKRect rect);" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Windows.Rect ToRect(valuetype SkiaSharp.SKRect rect) cil managed" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberSignature Language="DocId" Value="M:SkiaSharp.Views.WPF.WPFExtensions.ToRect(SkiaSharp.SKRect)" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType FrameworkAlternate="skiasharp-views-1.60">System.Windows.Rect</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="rect" Type="SkiaSharp.SKRect" Index="0" FrameworkAlternate="skiasharp-views-1.60" RefType="this" />
        </Parameters>
        <Docs>
          <param name="rect">The SkiaSharp rectangle.</param>
          <summary>Converts a SkiaSharp rectangle into a Windows rectangle.</summary>
        </Docs>
        <Link Type="SkiaSharp.Views.WPF.WPFExtensions" Member="M:SkiaSharp.Views.WPF.WPFExtensions.ToRect(SkiaSharp.SKRect)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:SkiaSharp.SKSize" />
      </Targets>
      <Member MemberName="ToSize">
        <MemberSignature Language="C#" Value="public static System.Windows.Size ToSize (this SkiaSharp.SKSize size);" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Windows.Size ToSize(valuetype SkiaSharp.SKSize size) cil managed" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberSignature Language="DocId" Value="M:SkiaSharp.Views.WPF.WPFExtensions.ToSize(SkiaSharp.SKSize)" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType FrameworkAlternate="skiasharp-views-1.60">System.Windows.Size</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="size" Type="SkiaSharp.SKSize" Index="0" FrameworkAlternate="skiasharp-views-1.60" RefType="this" />
        </Parameters>
        <Docs>
          <param name="size">The SkiaSharp size.</param>
          <summary>Converts a SkiaSharp size into a Windows size.</summary>
        </Docs>
        <Link Type="SkiaSharp.Views.WPF.WPFExtensions" Member="M:SkiaSharp.Views.WPF.WPFExtensions.ToSize(SkiaSharp.SKSize)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.Windows.Media.Imaging.BitmapSource" />
      </Targets>
      <Member MemberName="ToSKBitmap">
        <MemberSignature Language="C#" Value="public static SkiaSharp.SKBitmap ToSKBitmap (this System.Windows.Media.Imaging.BitmapSource bitmap);" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class SkiaSharp.SKBitmap ToSKBitmap(class System.Windows.Media.Imaging.BitmapSource bitmap) cil managed" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberSignature Language="DocId" Value="M:SkiaSharp.Views.WPF.WPFExtensions.ToSKBitmap(System.Windows.Media.Imaging.BitmapSource)" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType FrameworkAlternate="skiasharp-views-1.60">SkiaSharp.SKBitmap</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="bitmap" Type="System.Windows.Media.Imaging.BitmapSource" Index="0" FrameworkAlternate="skiasharp-views-1.60" RefType="this" />
        </Parameters>
        <Docs>
          <param name="bitmap">The Windows BitmapSource to convert.</param>
          <summary>Converts a Windows BitmapSource into a SkiaSharp bitmap.</summary>
        </Docs>
        <Link Type="SkiaSharp.Views.WPF.WPFExtensions" Member="M:SkiaSharp.Views.WPF.WPFExtensions.ToSKBitmap(System.Windows.Media.Imaging.BitmapSource)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.Windows.Media.Color" />
      </Targets>
      <Member MemberName="ToSKColor">
        <MemberSignature Language="C#" Value="public static SkiaSharp.SKColor ToSKColor (this System.Windows.Media.Color color);" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype SkiaSharp.SKColor ToSKColor(valuetype System.Windows.Media.Color color) cil managed" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberSignature Language="DocId" Value="M:SkiaSharp.Views.WPF.WPFExtensions.ToSKColor(System.Windows.Media.Color)" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType FrameworkAlternate="skiasharp-views-1.60">SkiaSharp.SKColor</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="color" Type="System.Windows.Media.Color" Index="0" FrameworkAlternate="skiasharp-views-1.60" RefType="this" />
        </Parameters>
        <Docs>
          <param name="color">The Windows color.</param>
          <summary>Converts a Windows color into a SkiaSharp color.</summary>
        </Docs>
        <Link Type="SkiaSharp.Views.WPF.WPFExtensions" Member="M:SkiaSharp.Views.WPF.WPFExtensions.ToSKColor(System.Windows.Media.Color)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.Windows.Media.Imaging.BitmapSource" />
      </Targets>
      <Member MemberName="ToSKImage">
        <MemberSignature Language="C#" Value="public static SkiaSharp.SKImage ToSKImage (this System.Windows.Media.Imaging.BitmapSource bitmap);" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class SkiaSharp.SKImage ToSKImage(class System.Windows.Media.Imaging.BitmapSource bitmap) cil managed" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberSignature Language="DocId" Value="M:SkiaSharp.Views.WPF.WPFExtensions.ToSKImage(System.Windows.Media.Imaging.BitmapSource)" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType FrameworkAlternate="skiasharp-views-1.60">SkiaSharp.SKImage</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="bitmap" Type="System.Windows.Media.Imaging.BitmapSource" Index="0" FrameworkAlternate="skiasharp-views-1.60" RefType="this" />
        </Parameters>
        <Docs>
          <param name="bitmap">The Windows BitmapSource to convert.</param>
          <summary>Converts a Windows BitmapSource into a SkiaSharp image.</summary>
        </Docs>
        <Link Type="SkiaSharp.Views.WPF.WPFExtensions" Member="M:SkiaSharp.Views.WPF.WPFExtensions.ToSKImage(System.Windows.Media.Imaging.BitmapSource)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.Windows.Media.Imaging.BitmapSource" />
      </Targets>
      <Member MemberName="ToSKPixmap">
        <MemberSignature Language="C#" Value="public static void ToSKPixmap (this System.Windows.Media.Imaging.BitmapSource bitmap, SkiaSharp.SKPixmap pixmap);" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ToSKPixmap(class System.Windows.Media.Imaging.BitmapSource bitmap, class SkiaSharp.SKPixmap pixmap) cil managed" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberSignature Language="DocId" Value="M:SkiaSharp.Views.WPF.WPFExtensions.ToSKPixmap(System.Windows.Media.Imaging.BitmapSource,SkiaSharp.SKPixmap)" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType FrameworkAlternate="skiasharp-views-1.60">System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="bitmap" Type="System.Windows.Media.Imaging.BitmapSource" Index="0" FrameworkAlternate="skiasharp-views-1.60" RefType="this" />
          <Parameter Name="pixmap" Type="SkiaSharp.SKPixmap" Index="1" FrameworkAlternate="skiasharp-views-1.60" />
        </Parameters>
        <Docs>
          <param name="bitmap">The Windows BitmapSource to convert.</param>
          <param name="pixmap">The SkiaSharp pixmap to hold the copy of the bitmap data.</param>
          <summary>Converts a Windows BitmapSource into a SkiaSharp pixmap.</summary>
        </Docs>
        <Link Type="SkiaSharp.Views.WPF.WPFExtensions" Member="M:SkiaSharp.Views.WPF.WPFExtensions.ToSKPixmap(System.Windows.Media.Imaging.BitmapSource,SkiaSharp.SKPixmap)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="System.Windows.Point" />
      </Targets>
      <Member MemberName="ToSKPoint">
        <MemberSignature Language="C#" Value="public static SkiaSharp.SKPoint ToSKPoint (this System.Windows.Point point);" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype SkiaSharp.SKPoint ToSKPoint(valuetype System.Windows.Point point) cil managed" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberSignature Language="DocId" Value="M:SkiaSharp.Views.WPF.WPFExtensions.ToSKPoint(System.Windows.Point)" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType FrameworkAlternate="skiasharp-views-1.60">SkiaSharp.SKPoint</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="point" Type="System.Windows.Point" Index="0" FrameworkAlternate="skiasharp-views-1.60" RefType="this" />
        </Parameters>
        <Docs>
          <param name="point">The Windows point.</param>
          <summary>Converts a Windows point into a SkiaSharp point.</summary>
        </Docs>
        <Link Type="SkiaSharp.Views.WPF.WPFExtensions" Member="M:SkiaSharp.Views.WPF.WPFExtensions.ToSKPoint(System.Windows.Point)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="System.Windows.Rect" />
      </Targets>
      <Member MemberName="ToSKRect">
        <MemberSignature Language="C#" Value="public static SkiaSharp.SKRect ToSKRect (this System.Windows.Rect rect);" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype SkiaSharp.SKRect ToSKRect(valuetype System.Windows.Rect rect) cil managed" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberSignature Language="DocId" Value="M:SkiaSharp.Views.WPF.WPFExtensions.ToSKRect(System.Windows.Rect)" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType FrameworkAlternate="skiasharp-views-1.60">SkiaSharp.SKRect</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="rect" Type="System.Windows.Rect" Index="0" FrameworkAlternate="skiasharp-views-1.60" RefType="this" />
        </Parameters>
        <Docs>
          <param name="rect">The Windows rectangle</param>
          <summary>Converts a Windows rectangle into a SkiaSharp rectangle.</summary>
        </Docs>
        <Link Type="SkiaSharp.Views.WPF.WPFExtensions" Member="M:SkiaSharp.Views.WPF.WPFExtensions.ToSKRect(System.Windows.Rect)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="System.Windows.Size" />
      </Targets>
      <Member MemberName="ToSKSize">
        <MemberSignature Language="C#" Value="public static SkiaSharp.SKSize ToSKSize (this System.Windows.Size size);" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype SkiaSharp.SKSize ToSKSize(valuetype System.Windows.Size size) cil managed" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberSignature Language="DocId" Value="M:SkiaSharp.Views.WPF.WPFExtensions.ToSKSize(System.Windows.Size)" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType FrameworkAlternate="skiasharp-views-1.60">SkiaSharp.SKSize</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="size" Type="System.Windows.Size" Index="0" FrameworkAlternate="skiasharp-views-1.60" RefType="this" />
        </Parameters>
        <Docs>
          <param name="size">The Windows size.</param>
          <summary>Converts a Windows size into a SkiaSharp size.</summary>
        </Docs>
        <Link Type="SkiaSharp.Views.WPF.WPFExtensions" Member="M:SkiaSharp.Views.WPF.WPFExtensions.ToSKSize(System.Windows.Size)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:SkiaSharp.SKBitmap" />
      </Targets>
      <Member MemberName="ToWriteableBitmap">
        <MemberSignature Language="C#" Value="public static System.Windows.Media.Imaging.WriteableBitmap ToWriteableBitmap (this SkiaSharp.SKBitmap skiaBitmap);" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Windows.Media.Imaging.WriteableBitmap ToWriteableBitmap(class SkiaSharp.SKBitmap skiaBitmap) cil managed" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberSignature Language="DocId" Value="M:SkiaSharp.Views.WPF.WPFExtensions.ToWriteableBitmap(SkiaSharp.SKBitmap)" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType FrameworkAlternate="skiasharp-views-1.60">System.Windows.Media.Imaging.WriteableBitmap</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="skiaBitmap" Type="SkiaSharp.SKBitmap" Index="0" FrameworkAlternate="skiasharp-views-1.60" RefType="this" />
        </Parameters>
        <Docs>
          <param name="skiaBitmap">The SkiaSharp bitmap.</param>
          <summary>Converts a SkiaSharp bitmap into a Windows WriteableBitmap.</summary>
        </Docs>
        <Link Type="SkiaSharp.Views.WPF.WPFExtensions" Member="M:SkiaSharp.Views.WPF.WPFExtensions.ToWriteableBitmap(SkiaSharp.SKBitmap)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:SkiaSharp.SKImage" />
      </Targets>
      <Member MemberName="ToWriteableBitmap">
        <MemberSignature Language="C#" Value="public static System.Windows.Media.Imaging.WriteableBitmap ToWriteableBitmap (this SkiaSharp.SKImage skiaImage);" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Windows.Media.Imaging.WriteableBitmap ToWriteableBitmap(class SkiaSharp.SKImage skiaImage) cil managed" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberSignature Language="DocId" Value="M:SkiaSharp.Views.WPF.WPFExtensions.ToWriteableBitmap(SkiaSharp.SKImage)" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType FrameworkAlternate="skiasharp-views-1.60">System.Windows.Media.Imaging.WriteableBitmap</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="skiaImage" Type="SkiaSharp.SKImage" Index="0" FrameworkAlternate="skiasharp-views-1.60" RefType="this" />
        </Parameters>
        <Docs>
          <param name="skiaImage">The SkiaSharp image.</param>
          <summary>Converts a SkiaSharp image into a Windows WriteableBitmap.</summary>
        </Docs>
        <Link Type="SkiaSharp.Views.WPF.WPFExtensions" Member="M:SkiaSharp.Views.WPF.WPFExtensions.ToWriteableBitmap(SkiaSharp.SKImage)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:SkiaSharp.SKPicture" />
      </Targets>
      <Member MemberName="ToWriteableBitmap">
        <MemberSignature Language="C#" Value="public static System.Windows.Media.Imaging.WriteableBitmap ToWriteableBitmap (this SkiaSharp.SKPicture picture, SkiaSharp.SKSizeI dimensions);" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Windows.Media.Imaging.WriteableBitmap ToWriteableBitmap(class SkiaSharp.SKPicture picture, valuetype SkiaSharp.SKSizeI dimensions) cil managed" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberSignature Language="DocId" Value="M:SkiaSharp.Views.WPF.WPFExtensions.ToWriteableBitmap(SkiaSharp.SKPicture,SkiaSharp.SKSizeI)" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType FrameworkAlternate="skiasharp-views-1.60">System.Windows.Media.Imaging.WriteableBitmap</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="picture" Type="SkiaSharp.SKPicture" Index="0" FrameworkAlternate="skiasharp-views-1.60" RefType="this" />
          <Parameter Name="dimensions" Type="SkiaSharp.SKSizeI" Index="1" FrameworkAlternate="skiasharp-views-1.60" />
        </Parameters>
        <Docs>
          <param name="picture">The SkiaSharp picture.</param>
          <param name="dimensions">The dimensions of the picture.</param>
          <summary>Converts a SkiaSharp picture into a Windows WriteableBitmap.</summary>
        </Docs>
        <Link Type="SkiaSharp.Views.WPF.WPFExtensions" Member="M:SkiaSharp.Views.WPF.WPFExtensions.ToWriteableBitmap(SkiaSharp.SKPicture,SkiaSharp.SKSizeI)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:SkiaSharp.SKPixmap" />
      </Targets>
      <Member MemberName="ToWriteableBitmap">
        <MemberSignature Language="C#" Value="public static System.Windows.Media.Imaging.WriteableBitmap ToWriteableBitmap (this SkiaSharp.SKPixmap pixmap);" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Windows.Media.Imaging.WriteableBitmap ToWriteableBitmap(class SkiaSharp.SKPixmap pixmap) cil managed" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberSignature Language="DocId" Value="M:SkiaSharp.Views.WPF.WPFExtensions.ToWriteableBitmap(SkiaSharp.SKPixmap)" FrameworkAlternate="skiasharp-views-1.60" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType FrameworkAlternate="skiasharp-views-1.60">System.Windows.Media.Imaging.WriteableBitmap</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="pixmap" Type="SkiaSharp.SKPixmap" Index="0" FrameworkAlternate="skiasharp-views-1.60" RefType="this" />
        </Parameters>
        <Docs>
          <param name="pixmap">The SkiaSharp pixmap.</param>
          <summary>Converts a SkiaSharp pixmap into a Windows WriteableBitmap.</summary>
        </Docs>
        <Link Type="SkiaSharp.Views.WPF.WPFExtensions" Member="M:SkiaSharp.Views.WPF.WPFExtensions.ToWriteableBitmap(SkiaSharp.SKPixmap)" />
      </Member>
    </ExtensionMethod>
  </ExtensionMethods>
</Overview>
