<Type Name="SKFileStream" FullName="SkiaSharp.SKFileStream">
  <TypeSignature Language="C#" Value="public class SKFileStream : SkiaSharp.SKStreamAsset" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit SKFileStream extends SkiaSharp.SKStreamAsset" />
  <TypeSignature Language="DocId" Value="T:SkiaSharp.SKFileStream" />
  <AssemblyInfo>
    <AssemblyName>SkiaSharp</AssemblyName>
    <AssemblyVersion>1.60.0.0</AssemblyVersion>
    <AssemblyVersion>1.68.0.0</AssemblyVersion>
    <AssemblyVersion>2.80.0.0</AssemblyVersion>
    <AssemblyVersion>2.88.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>SkiaSharp.SKStreamAsset</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>A seekable stream backed by a file on the file system.</summary>
    <remarks></remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SKFileStream (string path);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string path) cil managed" />
      <MemberSignature Language="DocId" Value="M:SkiaSharp.SKFileStream.#ctor(System.String)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>SkiaSharp</AssemblyName>
        <AssemblyVersion>1.60.0.0</AssemblyVersion>
        <AssemblyVersion>1.68.0.0</AssemblyVersion>
        <AssemblyVersion>2.80.0.0</AssemblyVersion>
        <AssemblyVersion>2.88.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="path">The existing file to open for reading.</param>
        <summary>Creates a new <see cref="T:SkiaSharp.SKFileStream" /> that wraps the file with the specified path.</summary>
        <remarks></remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:SkiaSharp.SKFileStream.Dispose(System.Boolean)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>SkiaSharp</AssemblyName>
        <AssemblyVersion>1.60.0.0</AssemblyVersion>
        <AssemblyVersion>1.68.0.0</AssemblyVersion>
        <AssemblyVersion>2.80.0.0</AssemblyVersion>
        <AssemblyVersion>2.88.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">
          <see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</param>
        <summary>Releases the unmanaged resources used by the <see cref="T:SkiaSharp.SKFileStream" /> and optionally releases the managed resources.</summary>
        <remarks>Always dispose the object before you release your last reference to the <see cref="T:SkiaSharp.SKFileStream" />. Otherwise, the resources it is using will not be freed until the garbage collector calls the finalizer.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DisposeNative">
      <MemberSignature Language="C#" Value="protected override void DisposeNative ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void DisposeNative() cil managed" />
      <MemberSignature Language="DocId" Value="M:SkiaSharp.SKFileStream.DisposeNative" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>SkiaSharp</AssemblyName>
        <AssemblyVersion>1.68.0.0</AssemblyVersion>
        <AssemblyVersion>2.80.0.0</AssemblyVersion>
        <AssemblyVersion>2.88.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Implemented by derived <see cref="T:SkiaSharp.SKObject" /> types to destroy any native objects.</summary>
        <remarks></remarks>
      </Docs>
    </Member>
    <Member MemberName="IsPathSupported">
      <MemberSignature Language="C#" Value="public static bool IsPathSupported (string path);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsPathSupported(string path) cil managed" />
      <MemberSignature Language="DocId" Value="M:SkiaSharp.SKFileStream.IsPathSupported(System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>SkiaSharp</AssemblyName>
        <AssemblyVersion>1.60.0.0</AssemblyVersion>
        <AssemblyVersion>1.68.0.0</AssemblyVersion>
        <AssemblyVersion>2.80.0.0</AssemblyVersion>
        <AssemblyVersion>2.88.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="path">The path to check.</param>
        <summary>Determines whether the specified path is supported by a <see cref="T:SkiaSharp.SKFileStream" />.</summary>
        <returns>Returns <see langword="true" /> if the path is supported, otherwise <see langword="false" />.</returns>
        <remarks></remarks>
      </Docs>
    </Member>
    <Member MemberName="IsValid">
      <MemberSignature Language="C#" Value="public bool IsValid { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsValid" />
      <MemberSignature Language="DocId" Value="P:SkiaSharp.SKFileStream.IsValid" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>SkiaSharp</AssemblyName>
        <AssemblyVersion>1.68.0.0</AssemblyVersion>
        <AssemblyVersion>2.80.0.0</AssemblyVersion>
        <AssemblyVersion>2.88.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a value indicating whether the file could be opened.</summary>
        <value></value>
        <remarks></remarks>
      </Docs>
    </Member>
    <Member MemberName="OpenStream">
      <MemberSignature Language="C#" Value="public static SkiaSharp.SKStreamAsset OpenStream (string path);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class SkiaSharp.SKStreamAsset OpenStream(string path) cil managed" />
      <MemberSignature Language="DocId" Value="M:SkiaSharp.SKFileStream.OpenStream(System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>SkiaSharp</AssemblyName>
        <AssemblyVersion>1.60.0.0</AssemblyVersion>
        <AssemblyVersion>1.68.0.0</AssemblyVersion>
        <AssemblyVersion>2.80.0.0</AssemblyVersion>
        <AssemblyVersion>2.88.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>SkiaSharp.SKStreamAsset</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="path">The path to the file to open.</param>
        <summary>Opens a read-only stream to the specified file.</summary>
        <returns>Returns a stream that contains the file contents.</returns>
        <remarks></remarks>
      </Docs>
    </Member>
  </Members>
</Type>
