<Type Name="GRGlInterface" FullName="SkiaSharp.GRGlInterface">
  <TypeSignature Language="C#" Value="public class GRGlInterface : SkiaSharp.SKObject" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi GRGlInterface extends SkiaSharp.SKObject" FrameworkAlternate="skiasharp-1.60" />
  <TypeSignature Language="DocId" Value="T:SkiaSharp.GRGlInterface" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit GRGlInterface extends SkiaSharp.SKObject" FrameworkAlternate="skiasharp-1.68;skiasharp-2.80;skiasharp-2.88" />
  <AssemblyInfo>
    <AssemblyName>SkiaSharp</AssemblyName>
    <AssemblyVersion>1.60.0.0</AssemblyVersion>
    <AssemblyVersion>1.68.0.0</AssemblyVersion>
    <AssemblyVersion>2.80.0.0</AssemblyVersion>
    <AssemblyVersion>2.88.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>SkiaSharp.SKObject</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>The <see cref="T:SkiaSharp.GRGlInterface" /> is used to interface with OpenGL.</summary>
    <remarks>A <see cref="T:SkiaSharp.GRContext" /> does not interact directly with the underlying backend, instead it uses an OpenGL interface.</remarks>
  </Docs>
  <Members>
    <Member MemberName="AssembleAngleInterface">
      <MemberSignature Language="C#" Value="public static SkiaSharp.GRGlInterface AssembleAngleInterface (SkiaSharp.GRGlGetProcDelegate get);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class SkiaSharp.GRGlInterface AssembleAngleInterface(class SkiaSharp.GRGlGetProcDelegate get) cil managed" />
      <MemberSignature Language="DocId" Value="M:SkiaSharp.GRGlInterface.AssembleAngleInterface(SkiaSharp.GRGlGetProcDelegate)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>SkiaSharp</AssemblyName>
        <AssemblyVersion>1.60.0.0</AssemblyVersion>
        <AssemblyVersion>1.68.0.0</AssemblyVersion>
        <AssemblyVersion>2.80.0.0</AssemblyVersion>
        <AssemblyVersion>2.88.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="skiasharp-2.80;skiasharp-2.88">
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="skiasharp-2.80;skiasharp-2.88">
          <AttributeName Language="C#">[System.Obsolete("Use CreateAngle(GRGlGetProcedureAddressDelegate) instead.")]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>SkiaSharp.GRGlInterface</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="get" Type="SkiaSharp.GRGlGetProcDelegate" />
      </Parameters>
      <Docs>
        <param name="get">The delegate used to locate entry points.</param>
        <summary>Assemble an ANGLE <see cref="T:SkiaSharp.GRGlInterface" /> using the specified delegate.</summary>
        <returns>Returns the new <see cref="T:SkiaSharp.GRGlInterface" />, or <see langword="null" /> if one could not be created.</returns>
        <remarks></remarks>
      </Docs>
    </Member>
    <Member MemberName="AssembleAngleInterface">
      <MemberSignature Language="C#" Value="public static SkiaSharp.GRGlInterface AssembleAngleInterface (object context, SkiaSharp.GRGlGetProcDelegate get);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class SkiaSharp.GRGlInterface AssembleAngleInterface(object context, class SkiaSharp.GRGlGetProcDelegate get) cil managed" />
      <MemberSignature Language="DocId" Value="M:SkiaSharp.GRGlInterface.AssembleAngleInterface(System.Object,SkiaSharp.GRGlGetProcDelegate)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>SkiaSharp</AssemblyName>
        <AssemblyVersion>1.60.0.0</AssemblyVersion>
        <AssemblyVersion>1.68.0.0</AssemblyVersion>
        <AssemblyVersion>2.80.0.0</AssemblyVersion>
        <AssemblyVersion>2.88.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="skiasharp-2.80;skiasharp-2.88">
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="skiasharp-2.80;skiasharp-2.88">
          <AttributeName Language="C#">[System.Obsolete("Use CreateAngle(GRGlGetProcedureAddressDelegate) instead.")]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>SkiaSharp.GRGlInterface</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Object" />
        <Parameter Name="get" Type="SkiaSharp.GRGlGetProcDelegate" />
      </Parameters>
      <Docs>
        <param name="context">The user data to use in the delegate.</param>
        <param name="get">The delegate used to locate entry points.</param>
        <summary>Assemble an ANGLE <see cref="T:SkiaSharp.GRGlInterface" /> using the specified context and delegate.</summary>
        <returns>Returns the new <see cref="T:SkiaSharp.GRGlInterface" />, or <see langword="null" /> if one could not be created.</returns>
        <remarks></remarks>
      </Docs>
    </Member>
    <Member MemberName="AssembleGlesInterface">
      <MemberSignature Language="C#" Value="public static SkiaSharp.GRGlInterface AssembleGlesInterface (SkiaSharp.GRGlGetProcDelegate get);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class SkiaSharp.GRGlInterface AssembleGlesInterface(class SkiaSharp.GRGlGetProcDelegate get) cil managed" />
      <MemberSignature Language="DocId" Value="M:SkiaSharp.GRGlInterface.AssembleGlesInterface(SkiaSharp.GRGlGetProcDelegate)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>SkiaSharp</AssemblyName>
        <AssemblyVersion>1.60.0.0</AssemblyVersion>
        <AssemblyVersion>1.68.0.0</AssemblyVersion>
        <AssemblyVersion>2.80.0.0</AssemblyVersion>
        <AssemblyVersion>2.88.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="skiasharp-2.80;skiasharp-2.88">
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="skiasharp-2.80;skiasharp-2.88">
          <AttributeName Language="C#">[System.Obsolete("Use CreateGles(GRGlGetProcedureAddressDelegate) instead.")]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>SkiaSharp.GRGlInterface</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="get" Type="SkiaSharp.GRGlGetProcDelegate" />
      </Parameters>
      <Docs>
        <param name="get">The delegate used to locate entry points.</param>
        <summary>Assemble an OpenGL ES <see cref="T:SkiaSharp.GRGlInterface" /> using the specified delegate.</summary>
        <returns>Returns the new <see cref="T:SkiaSharp.GRGlInterface" />, or <see langword="null" /> if one could not be created.</returns>
        <remarks></remarks>
      </Docs>
    </Member>
    <Member MemberName="AssembleGlesInterface">
      <MemberSignature Language="C#" Value="public static SkiaSharp.GRGlInterface AssembleGlesInterface (object context, SkiaSharp.GRGlGetProcDelegate get);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class SkiaSharp.GRGlInterface AssembleGlesInterface(object context, class SkiaSharp.GRGlGetProcDelegate get) cil managed" />
      <MemberSignature Language="DocId" Value="M:SkiaSharp.GRGlInterface.AssembleGlesInterface(System.Object,SkiaSharp.GRGlGetProcDelegate)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>SkiaSharp</AssemblyName>
        <AssemblyVersion>1.60.0.0</AssemblyVersion>
        <AssemblyVersion>1.68.0.0</AssemblyVersion>
        <AssemblyVersion>2.80.0.0</AssemblyVersion>
        <AssemblyVersion>2.88.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="skiasharp-2.80;skiasharp-2.88">
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="skiasharp-2.80;skiasharp-2.88">
          <AttributeName Language="C#">[System.Obsolete("Use CreateGles(GRGlGetProcedureAddressDelegate) instead.")]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>SkiaSharp.GRGlInterface</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Object" />
        <Parameter Name="get" Type="SkiaSharp.GRGlGetProcDelegate" />
      </Parameters>
      <Docs>
        <param name="context">The user data to use in the delegate.</param>
        <param name="get">The delegate used to locate entry points.</param>
        <summary>Assemble an OpenGL ES <see cref="T:SkiaSharp.GRGlInterface" /> using the specified context and delegate.</summary>
        <returns>Returns the new <see cref="T:SkiaSharp.GRGlInterface" />, or <see langword="null" /> if one could not be created.</returns>
        <remarks></remarks>
      </Docs>
    </Member>
    <Member MemberName="AssembleGlInterface">
      <MemberSignature Language="C#" Value="public static SkiaSharp.GRGlInterface AssembleGlInterface (SkiaSharp.GRGlGetProcDelegate get);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class SkiaSharp.GRGlInterface AssembleGlInterface(class SkiaSharp.GRGlGetProcDelegate get) cil managed" />
      <MemberSignature Language="DocId" Value="M:SkiaSharp.GRGlInterface.AssembleGlInterface(SkiaSharp.GRGlGetProcDelegate)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>SkiaSharp</AssemblyName>
        <AssemblyVersion>1.60.0.0</AssemblyVersion>
        <AssemblyVersion>1.68.0.0</AssemblyVersion>
        <AssemblyVersion>2.80.0.0</AssemblyVersion>
        <AssemblyVersion>2.88.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="skiasharp-2.80;skiasharp-2.88">
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="skiasharp-2.80;skiasharp-2.88">
          <AttributeName Language="C#">[System.Obsolete("Use CreateOpenGl(GRGlGetProcedureAddressDelegate) instead.")]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>SkiaSharp.GRGlInterface</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="get" Type="SkiaSharp.GRGlGetProcDelegate" />
      </Parameters>
      <Docs>
        <param name="get">The delegate used to locate entry points.</param>
        <summary>Assemble an OpenGL <see cref="T:SkiaSharp.GRGlInterface" /> using the specified delegate.</summary>
        <returns>Returns the new <see cref="T:SkiaSharp.GRGlInterface" />, or <see langword="null" /> if one could not be created.</returns>
        <remarks></remarks>
      </Docs>
    </Member>
    <Member MemberName="AssembleGlInterface">
      <MemberSignature Language="C#" Value="public static SkiaSharp.GRGlInterface AssembleGlInterface (object context, SkiaSharp.GRGlGetProcDelegate get);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class SkiaSharp.GRGlInterface AssembleGlInterface(object context, class SkiaSharp.GRGlGetProcDelegate get) cil managed" />
      <MemberSignature Language="DocId" Value="M:SkiaSharp.GRGlInterface.AssembleGlInterface(System.Object,SkiaSharp.GRGlGetProcDelegate)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>SkiaSharp</AssemblyName>
        <AssemblyVersion>1.60.0.0</AssemblyVersion>
        <AssemblyVersion>1.68.0.0</AssemblyVersion>
        <AssemblyVersion>2.80.0.0</AssemblyVersion>
        <AssemblyVersion>2.88.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="skiasharp-2.80;skiasharp-2.88">
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="skiasharp-2.80;skiasharp-2.88">
          <AttributeName Language="C#">[System.Obsolete("Use CreateOpenGl(GRGlGetProcedureAddressDelegate) instead.")]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>SkiaSharp.GRGlInterface</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Object" />
        <Parameter Name="get" Type="SkiaSharp.GRGlGetProcDelegate" />
      </Parameters>
      <Docs>
        <param name="context">The user data to use in the delegate.</param>
        <param name="get">The delegate used to locate entry points.</param>
        <summary>Assemble an OpenGL <see cref="T:SkiaSharp.GRGlInterface" /> using the specified context and delegate.</summary>
        <returns>Returns the new <see cref="T:SkiaSharp.GRGlInterface" />, or <see langword="null" /> if one could not be created.</returns>
        <remarks></remarks>
      </Docs>
    </Member>
    <Member MemberName="AssembleInterface">
      <MemberSignature Language="C#" Value="public static SkiaSharp.GRGlInterface AssembleInterface (SkiaSharp.GRGlGetProcDelegate get);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class SkiaSharp.GRGlInterface AssembleInterface(class SkiaSharp.GRGlGetProcDelegate get) cil managed" />
      <MemberSignature Language="DocId" Value="M:SkiaSharp.GRGlInterface.AssembleInterface(SkiaSharp.GRGlGetProcDelegate)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>SkiaSharp</AssemblyName>
        <AssemblyVersion>1.60.0.0</AssemblyVersion>
        <AssemblyVersion>1.68.0.0</AssemblyVersion>
        <AssemblyVersion>2.80.0.0</AssemblyVersion>
        <AssemblyVersion>2.88.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="skiasharp-2.80;skiasharp-2.88">
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="skiasharp-2.80;skiasharp-2.88">
          <AttributeName Language="C#">[System.Obsolete("Use Create(GRGlGetProcedureAddressDelegate) instead.")]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>SkiaSharp.GRGlInterface</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="get" Type="SkiaSharp.GRGlGetProcDelegate" />
      </Parameters>
      <Docs>
        <param name="get">The delegate used to locate entry points.</param>
        <summary>Assemble an platform-specific <see cref="T:SkiaSharp.GRGlInterface" /> using the specified delegate.</summary>
        <returns>Returns the new <see cref="T:SkiaSharp.GRGlInterface" />, or <see langword="null" /> if one could not be created.</returns>
        <remarks></remarks>
      </Docs>
    </Member>
    <Member MemberName="AssembleInterface">
      <MemberSignature Language="C#" Value="public static SkiaSharp.GRGlInterface AssembleInterface (object context, SkiaSharp.GRGlGetProcDelegate get);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class SkiaSharp.GRGlInterface AssembleInterface(object context, class SkiaSharp.GRGlGetProcDelegate get) cil managed" />
      <MemberSignature Language="DocId" Value="M:SkiaSharp.GRGlInterface.AssembleInterface(System.Object,SkiaSharp.GRGlGetProcDelegate)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>SkiaSharp</AssemblyName>
        <AssemblyVersion>1.60.0.0</AssemblyVersion>
        <AssemblyVersion>1.68.0.0</AssemblyVersion>
        <AssemblyVersion>2.80.0.0</AssemblyVersion>
        <AssemblyVersion>2.88.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="skiasharp-2.80;skiasharp-2.88">
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="skiasharp-2.80;skiasharp-2.88">
          <AttributeName Language="C#">[System.Obsolete("Use Create(GRGlGetProcedureAddressDelegate) instead.")]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>SkiaSharp.GRGlInterface</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Object" />
        <Parameter Name="get" Type="SkiaSharp.GRGlGetProcDelegate" />
      </Parameters>
      <Docs>
        <param name="context">The user data to use in the delegate.</param>
        <param name="get">The delegate used to locate entry points.</param>
        <summary>Assemble an platform-specific <see cref="T:SkiaSharp.GRGlInterface" /> using the specified context and delegate.</summary>
        <returns>Returns the new <see cref="T:SkiaSharp.GRGlInterface" />, or <see langword="null" /> if one could not be created.</returns>
        <remarks></remarks>
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public SkiaSharp.GRGlInterface Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class SkiaSharp.GRGlInterface Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:SkiaSharp.GRGlInterface.Clone" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>SkiaSharp</AssemblyName>
        <AssemblyVersion>1.60.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>SkiaSharp.GRGlInterface</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns a copy of the current interface.</summary>
        <returns>Returns a copy.</returns>
        <remarks></remarks>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static SkiaSharp.GRGlInterface Create ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class SkiaSharp.GRGlInterface Create() cil managed" />
      <MemberSignature Language="DocId" Value="M:SkiaSharp.GRGlInterface.Create" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>SkiaSharp</AssemblyName>
        <AssemblyVersion>2.80.0.0</AssemblyVersion>
        <AssemblyVersion>2.88.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>SkiaSharp.GRGlInterface</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static SkiaSharp.GRGlInterface Create (SkiaSharp.GRGlGetProcedureAddressDelegate get);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class SkiaSharp.GRGlInterface Create(class SkiaSharp.GRGlGetProcedureAddressDelegate get) cil managed" />
      <MemberSignature Language="DocId" Value="M:SkiaSharp.GRGlInterface.Create(SkiaSharp.GRGlGetProcedureAddressDelegate)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>SkiaSharp</AssemblyName>
        <AssemblyVersion>2.80.0.0</AssemblyVersion>
        <AssemblyVersion>2.88.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>SkiaSharp.GRGlInterface</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="get" Type="SkiaSharp.GRGlGetProcedureAddressDelegate" Index="0" FrameworkAlternate="skiasharp-2.80;skiasharp-2.88" />
      </Parameters>
      <Docs>
        <param name="get">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateAngle">
      <MemberSignature Language="C#" Value="public static SkiaSharp.GRGlInterface CreateAngle ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class SkiaSharp.GRGlInterface CreateAngle() cil managed" />
      <MemberSignature Language="DocId" Value="M:SkiaSharp.GRGlInterface.CreateAngle" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>SkiaSharp</AssemblyName>
        <AssemblyVersion>2.80.0.0</AssemblyVersion>
        <AssemblyVersion>2.88.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>SkiaSharp.GRGlInterface</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateAngle">
      <MemberSignature Language="C#" Value="public static SkiaSharp.GRGlInterface CreateAngle (SkiaSharp.GRGlGetProcedureAddressDelegate get);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class SkiaSharp.GRGlInterface CreateAngle(class SkiaSharp.GRGlGetProcedureAddressDelegate get) cil managed" />
      <MemberSignature Language="DocId" Value="M:SkiaSharp.GRGlInterface.CreateAngle(SkiaSharp.GRGlGetProcedureAddressDelegate)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>SkiaSharp</AssemblyName>
        <AssemblyVersion>2.80.0.0</AssemblyVersion>
        <AssemblyVersion>2.88.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>SkiaSharp.GRGlInterface</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="get" Type="SkiaSharp.GRGlGetProcedureAddressDelegate" Index="0" FrameworkAlternate="skiasharp-2.80;skiasharp-2.88" />
      </Parameters>
      <Docs>
        <param name="get">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateDefaultInterface">
      <MemberSignature Language="C#" Value="public static SkiaSharp.GRGlInterface CreateDefaultInterface ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class SkiaSharp.GRGlInterface CreateDefaultInterface() cil managed" />
      <MemberSignature Language="DocId" Value="M:SkiaSharp.GRGlInterface.CreateDefaultInterface" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>SkiaSharp</AssemblyName>
        <AssemblyVersion>1.60.0.0</AssemblyVersion>
        <AssemblyVersion>1.68.0.0</AssemblyVersion>
        <AssemblyVersion>2.80.0.0</AssemblyVersion>
        <AssemblyVersion>2.88.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="skiasharp-2.80;skiasharp-2.88">
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="skiasharp-2.80;skiasharp-2.88">
          <AttributeName Language="C#">[System.Obsolete("Use Create() instead.")]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>SkiaSharp.GRGlInterface</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Create a <see cref="T:SkiaSharp.GRGlInterface" /> using the platform-default OpenGL implementation.</summary>
        <returns>Returns the new <see cref="T:SkiaSharp.GRGlInterface" />, or <see langword="null" /> if one could not be created.</returns>
        <remarks>On Windows, this is typically ANGLE, on mobile it is typically OpenGL ES and on desktop it is typically OpenGL.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateEvas">
      <MemberSignature Language="C#" Value="public static SkiaSharp.GRGlInterface CreateEvas (IntPtr evas);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class SkiaSharp.GRGlInterface CreateEvas(native int evas) cil managed" />
      <MemberSignature Language="DocId" Value="M:SkiaSharp.GRGlInterface.CreateEvas(System.IntPtr)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>SkiaSharp</AssemblyName>
        <AssemblyVersion>2.80.0.0</AssemblyVersion>
        <AssemblyVersion>2.88.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>SkiaSharp.GRGlInterface</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="evas" Type="System.IntPtr" Index="0" FrameworkAlternate="skiasharp-2.80;skiasharp-2.88" />
      </Parameters>
      <Docs>
        <param name="evas">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateGles">
      <MemberSignature Language="C#" Value="public static SkiaSharp.GRGlInterface CreateGles (SkiaSharp.GRGlGetProcedureAddressDelegate get);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class SkiaSharp.GRGlInterface CreateGles(class SkiaSharp.GRGlGetProcedureAddressDelegate get) cil managed" />
      <MemberSignature Language="DocId" Value="M:SkiaSharp.GRGlInterface.CreateGles(SkiaSharp.GRGlGetProcedureAddressDelegate)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>SkiaSharp</AssemblyName>
        <AssemblyVersion>2.80.0.0</AssemblyVersion>
        <AssemblyVersion>2.88.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>SkiaSharp.GRGlInterface</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="get" Type="SkiaSharp.GRGlGetProcedureAddressDelegate" Index="0" FrameworkAlternate="skiasharp-2.80;skiasharp-2.88" />
      </Parameters>
      <Docs>
        <param name="get">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateNativeAngleInterface">
      <MemberSignature Language="C#" Value="public static SkiaSharp.GRGlInterface CreateNativeAngleInterface ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class SkiaSharp.GRGlInterface CreateNativeAngleInterface() cil managed" />
      <MemberSignature Language="DocId" Value="M:SkiaSharp.GRGlInterface.CreateNativeAngleInterface" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>SkiaSharp</AssemblyName>
        <AssemblyVersion>1.60.0.0</AssemblyVersion>
        <AssemblyVersion>1.68.0.0</AssemblyVersion>
        <AssemblyVersion>2.80.0.0</AssemblyVersion>
        <AssemblyVersion>2.88.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="skiasharp-2.80;skiasharp-2.88">
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="skiasharp-2.80;skiasharp-2.88">
          <AttributeName Language="C#">[System.Obsolete("Use Create() instead.")]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>SkiaSharp.GRGlInterface</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Create a <see cref="T:SkiaSharp.GRGlInterface" /> using the ANGLE OpenGL implementation.</summary>
        <returns>Returns the new <see cref="T:SkiaSharp.GRGlInterface" />, or <see langword="null" /> if one could not be created.</returns>
        <remarks></remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateNativeEvasInterface">
      <MemberSignature Language="C#" Value="public static SkiaSharp.GRGlInterface CreateNativeEvasInterface (IntPtr evas);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class SkiaSharp.GRGlInterface CreateNativeEvasInterface(native int evas) cil managed" />
      <MemberSignature Language="DocId" Value="M:SkiaSharp.GRGlInterface.CreateNativeEvasInterface(System.IntPtr)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>SkiaSharp</AssemblyName>
        <AssemblyVersion>1.60.0.0</AssemblyVersion>
        <AssemblyVersion>1.68.0.0</AssemblyVersion>
        <AssemblyVersion>2.80.0.0</AssemblyVersion>
        <AssemblyVersion>2.88.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="skiasharp-2.80;skiasharp-2.88">
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="skiasharp-2.80;skiasharp-2.88">
          <AttributeName Language="C#">[System.Obsolete("Use CreateEvas(IntPtr) instead.")]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>SkiaSharp.GRGlInterface</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="evas" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="evas">The pointer to the Evas_GL object to use.</param>
        <summary>Create a <see cref="T:SkiaSharp.GRGlInterface" /> using the Evas OpenGL implementation.</summary>
        <returns>Returns the new <see cref="T:SkiaSharp.GRGlInterface" />, or <see langword="null" /> if one could not be created.</returns>
        <remarks></remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateNativeGlInterface">
      <MemberSignature Language="C#" Value="public static SkiaSharp.GRGlInterface CreateNativeGlInterface ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class SkiaSharp.GRGlInterface CreateNativeGlInterface() cil managed" />
      <MemberSignature Language="DocId" Value="M:SkiaSharp.GRGlInterface.CreateNativeGlInterface" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>SkiaSharp</AssemblyName>
        <AssemblyVersion>1.60.0.0</AssemblyVersion>
        <AssemblyVersion>1.68.0.0</AssemblyVersion>
        <AssemblyVersion>2.80.0.0</AssemblyVersion>
        <AssemblyVersion>2.88.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="skiasharp-2.80;skiasharp-2.88">
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="skiasharp-2.80;skiasharp-2.88">
          <AttributeName Language="C#">[System.Obsolete("Use Create() instead.")]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>SkiaSharp.GRGlInterface</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Create a <see cref="T:SkiaSharp.GRGlInterface" /> using the platform OpenGL implementation.</summary>
        <returns>Returns the new <see cref="T:SkiaSharp.GRGlInterface" />, or <see langword="null" /> if one could not be created.</returns>
        <remarks></remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateOpenGl">
      <MemberSignature Language="C#" Value="public static SkiaSharp.GRGlInterface CreateOpenGl (SkiaSharp.GRGlGetProcedureAddressDelegate get);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class SkiaSharp.GRGlInterface CreateOpenGl(class SkiaSharp.GRGlGetProcedureAddressDelegate get) cil managed" />
      <MemberSignature Language="DocId" Value="M:SkiaSharp.GRGlInterface.CreateOpenGl(SkiaSharp.GRGlGetProcedureAddressDelegate)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>SkiaSharp</AssemblyName>
        <AssemblyVersion>2.80.0.0</AssemblyVersion>
        <AssemblyVersion>2.88.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>SkiaSharp.GRGlInterface</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="get" Type="SkiaSharp.GRGlGetProcedureAddressDelegate" Index="0" FrameworkAlternate="skiasharp-2.80;skiasharp-2.88" />
      </Parameters>
      <Docs>
        <param name="get">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateWebGl">
      <MemberSignature Language="C#" Value="public static SkiaSharp.GRGlInterface CreateWebGl (SkiaSharp.GRGlGetProcedureAddressDelegate get);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class SkiaSharp.GRGlInterface CreateWebGl(class SkiaSharp.GRGlGetProcedureAddressDelegate get) cil managed" />
      <MemberSignature Language="DocId" Value="M:SkiaSharp.GRGlInterface.CreateWebGl(SkiaSharp.GRGlGetProcedureAddressDelegate)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>SkiaSharp</AssemblyName>
        <AssemblyVersion>2.80.0.0</AssemblyVersion>
        <AssemblyVersion>2.88.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>SkiaSharp.GRGlInterface</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="get" Type="SkiaSharp.GRGlGetProcedureAddressDelegate" Index="0" FrameworkAlternate="skiasharp-2.80;skiasharp-2.88" />
      </Parameters>
      <Docs>
        <param name="get">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:SkiaSharp.GRGlInterface.Dispose(System.Boolean)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>SkiaSharp</AssemblyName>
        <AssemblyVersion>1.60.0.0</AssemblyVersion>
        <AssemblyVersion>1.68.0.0</AssemblyVersion>
        <AssemblyVersion>2.80.0.0</AssemblyVersion>
        <AssemblyVersion>2.88.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">
          <see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</param>
        <summary>Releases the unmanaged resources used by the <see cref="T:SkiaSharp.GRGlInterface" /> and optionally releases the managed resources.</summary>
        <remarks>Always dispose the object before you release your last reference to the <see cref="T:SkiaSharp.GRGlInterface" />. Otherwise, the resources it is using will not be freed until the garbage collector calls the finalizer.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HasExtension">
      <MemberSignature Language="C#" Value="public bool HasExtension (string extension);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool HasExtension(string extension) cil managed" />
      <MemberSignature Language="DocId" Value="M:SkiaSharp.GRGlInterface.HasExtension(System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>SkiaSharp</AssemblyName>
        <AssemblyVersion>1.60.0.0</AssemblyVersion>
        <AssemblyVersion>1.68.0.0</AssemblyVersion>
        <AssemblyVersion>2.80.0.0</AssemblyVersion>
        <AssemblyVersion>2.88.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="extension" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="extension">The extension to check for.</param>
        <summary>Checks to see if the underlying OpenGL backend has the specified extension.</summary>
        <returns>Returns true if the backend has the extension, otherwise false.</returns>
        <remarks></remarks>
      </Docs>
    </Member>
    <Member MemberName="Validate">
      <MemberSignature Language="C#" Value="public bool Validate ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Validate() cil managed" />
      <MemberSignature Language="DocId" Value="M:SkiaSharp.GRGlInterface.Validate" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>SkiaSharp</AssemblyName>
        <AssemblyVersion>1.60.0.0</AssemblyVersion>
        <AssemblyVersion>1.68.0.0</AssemblyVersion>
        <AssemblyVersion>2.80.0.0</AssemblyVersion>
        <AssemblyVersion>2.88.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Validates that the <see cref="T:SkiaSharp.GRGlInterface" /> supports its advertised standard.</summary>
        <returns>Returns true if all the entry points are specified, and any required extensions exist.</returns>
        <remarks></remarks>
      </Docs>
    </Member>
  </Members>
</Type>
