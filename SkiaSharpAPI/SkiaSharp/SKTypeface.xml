<Type Name="SKTypeface" FullName="SkiaSharp.SKTypeface">
  <TypeSignature Language="C#" Value="public class SKTypeface : SkiaSharp.SKObject" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit SKTypeface extends SkiaSharp.SKObject" FrameworkAlternate="skiasharp-1.60" />
  <TypeSignature Language="DocId" Value="T:SkiaSharp.SKTypeface" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi SKTypeface extends SkiaSharp.SKObject" FrameworkAlternate="skiasharp-1.68;skiasharp-2.80;skiasharp-2.88" />
  <AssemblyInfo>
    <AssemblyName>SkiaSharp</AssemblyName>
    <AssemblyVersion>1.60.0.0</AssemblyVersion>
    <AssemblyVersion>1.68.0.0</AssemblyVersion>
    <AssemblyVersion>2.80.0.0</AssemblyVersion>
    <AssemblyVersion>2.88.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>SkiaSharp.SKObject</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Represents a specific typeface and intrinsic style of a font.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[
## Remarks

This is used in the paint, along with optionally algorithmic settings like
<xref:SkiaSharp.SKPaint.TextSize?displayProperty=nameWithType>,
<xref:SkiaSharp.SKPaint.TextSkewX?displayProperty=nameWithType>,
<xref:SkiaSharp.SKPaint.TextScaleX?displayProperty=nameWithType>, and 
<xref:SkiaSharp.SKPaint.FakeBoldText?displayProperty=nameWithType>
to specify how text appears when drawn (and measured).

Typeface objects are immutable, and so they can be shared between threads.
]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="CharsToGlyphs">
      <MemberSignature Language="C#" Value="public int CharsToGlyphs (string chars, out ushort[] glyphs);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 CharsToGlyphs(string chars, [out] unsigned int16[]&amp; glyphs) cil managed" />
      <MemberSignature Language="DocId" Value="M:SkiaSharp.SKTypeface.CharsToGlyphs(System.String,System.UInt16[]@)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>SkiaSharp</AssemblyName>
        <AssemblyVersion>1.60.0.0</AssemblyVersion>
        <AssemblyVersion>1.68.0.0</AssemblyVersion>
        <AssemblyVersion>2.80.0.0</AssemblyVersion>
        <AssemblyVersion>2.88.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="skiasharp-1.68;skiasharp-2.80;skiasharp-2.88">
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="skiasharp-1.68;skiasharp-2.80;skiasharp-2.88">
          <AttributeName Language="C#">[System.Obsolete("Use GetGlyphs(string, out ushort[]) instead.")]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="chars" Type="System.String" />
        <Parameter Name="glyphs" Type="System.UInt16[]" RefType="out" />
      </Parameters>
      <Docs>
        <param name="chars">The string containing characters.</param>
        <param name="glyphs">Destination for the corresponding glyph IDs for each character.</param>
        <summary>Retrieve the corresponding glyph IDs of a string of characters.</summary>
        <returns>The number of number of continuous non-zero glyph IDs computed from the beginning of the character codes.</returns>
        <remarks></remarks>
      </Docs>
    </Member>
    <Member MemberName="CharsToGlyphs">
      <MemberSignature Language="C#" Value="public int CharsToGlyphs (IntPtr str, int strlen, SkiaSharp.SKEncoding encoding, out ushort[] glyphs);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 CharsToGlyphs(native int str, int32 strlen, valuetype SkiaSharp.SKEncoding encoding, [out] unsigned int16[]&amp; glyphs) cil managed" />
      <MemberSignature Language="DocId" Value="M:SkiaSharp.SKTypeface.CharsToGlyphs(System.IntPtr,System.Int32,SkiaSharp.SKEncoding,System.UInt16[]@)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>SkiaSharp</AssemblyName>
        <AssemblyVersion>1.60.0.0</AssemblyVersion>
        <AssemblyVersion>1.68.0.0</AssemblyVersion>
        <AssemblyVersion>2.80.0.0</AssemblyVersion>
        <AssemblyVersion>2.88.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="skiasharp-1.68;skiasharp-2.80;skiasharp-2.88">
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="skiasharp-1.68;skiasharp-2.80;skiasharp-2.88">
          <AttributeName Language="C#">[System.Obsolete("Use GetGlyphs(IntPtr, int, SKTextEncoding, out ushort[]) instead.")]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="str" Type="System.IntPtr" />
        <Parameter Name="strlen" Type="System.Int32" />
        <Parameter Name="encoding" Type="SkiaSharp.SKEncoding" />
        <Parameter Name="glyphs" Type="System.UInt16[]" RefType="out" />
      </Parameters>
      <Docs>
        <param name="str">The buffer of character codes.</param>
        <param name="strlen">The length of the buffer.</param>
        <param name="encoding">How the character codes are encoded.</param>
        <param name="glyphs">Destination for the corresponding glyph IDs for each character.</param>
        <summary>Retrieve the corresponding glyph IDs of a buffer containing character codes, of the specified encoding.</summary>
        <returns>The number of number of continuous non-zero glyph IDs computed from the beginning of the character codes.</returns>
        <remarks></remarks>
      </Docs>
    </Member>
    <Member MemberName="ContainsGlyph">
      <MemberSignature Language="C#" Value="public bool ContainsGlyph (int codepoint);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool ContainsGlyph(int32 codepoint) cil managed" />
      <MemberSignature Language="DocId" Value="M:SkiaSharp.SKTypeface.ContainsGlyph(System.Int32)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>SkiaSharp</AssemblyName>
        <AssemblyVersion>2.80.0.0</AssemblyVersion>
        <AssemblyVersion>2.88.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="codepoint" Type="System.Int32" Index="0" FrameworkAlternate="skiasharp-2.80;skiasharp-2.88" />
      </Parameters>
      <Docs>
        <param name="codepoint">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ContainsGlyphs">
      <MemberSignature Language="C#" Value="public bool ContainsGlyphs (ReadOnlySpan&lt;char&gt; text);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool ContainsGlyphs(valuetype System.ReadOnlySpan`1&lt;char&gt; text) cil managed" />
      <MemberSignature Language="DocId" Value="M:SkiaSharp.SKTypeface.ContainsGlyphs(System.ReadOnlySpan{System.Char})" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>SkiaSharp</AssemblyName>
        <AssemblyVersion>1.68.0.0</AssemblyVersion>
        <AssemblyVersion>2.80.0.0</AssemblyVersion>
        <AssemblyVersion>2.88.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.ReadOnlySpan&lt;System.Char&gt;" Index="0" FrameworkAlternate="skiasharp-1.68;skiasharp-2.80;skiasharp-2.88" />
      </Parameters>
      <Docs>
        <param name="text">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ContainsGlyphs">
      <MemberSignature Language="C#" Value="public bool ContainsGlyphs (ReadOnlySpan&lt;int&gt; codepoints);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool ContainsGlyphs(valuetype System.ReadOnlySpan`1&lt;int32&gt; codepoints) cil managed" />
      <MemberSignature Language="DocId" Value="M:SkiaSharp.SKTypeface.ContainsGlyphs(System.ReadOnlySpan{System.Int32})" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>SkiaSharp</AssemblyName>
        <AssemblyVersion>2.80.0.0</AssemblyVersion>
        <AssemblyVersion>2.88.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="codepoints" Type="System.ReadOnlySpan&lt;System.Int32&gt;" Index="0" FrameworkAlternate="skiasharp-2.80;skiasharp-2.88" />
      </Parameters>
      <Docs>
        <param name="codepoints">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ContainsGlyphs">
      <MemberSignature Language="C#" Value="public bool ContainsGlyphs (string text);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool ContainsGlyphs(string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:SkiaSharp.SKTypeface.ContainsGlyphs(System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>SkiaSharp</AssemblyName>
        <AssemblyVersion>1.68.0.0</AssemblyVersion>
        <AssemblyVersion>2.80.0.0</AssemblyVersion>
        <AssemblyVersion>2.88.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" Index="0" FrameworkAlternate="skiasharp-1.68;skiasharp-2.80;skiasharp-2.88" />
      </Parameters>
      <Docs>
        <param name="text">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ContainsGlyphs">
      <MemberSignature Language="C#" Value="public bool ContainsGlyphs (ReadOnlySpan&lt;byte&gt; text, SkiaSharp.SKTextEncoding encoding);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool ContainsGlyphs(valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; text, valuetype SkiaSharp.SKTextEncoding encoding) cil managed" />
      <MemberSignature Language="DocId" Value="M:SkiaSharp.SKTypeface.ContainsGlyphs(System.ReadOnlySpan{System.Byte},SkiaSharp.SKTextEncoding)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>SkiaSharp</AssemblyName>
        <AssemblyVersion>1.68.0.0</AssemblyVersion>
        <AssemblyVersion>2.80.0.0</AssemblyVersion>
        <AssemblyVersion>2.88.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.ReadOnlySpan&lt;System.Byte&gt;" Index="0" FrameworkAlternate="skiasharp-1.68;skiasharp-2.80;skiasharp-2.88" />
        <Parameter Name="encoding" Type="SkiaSharp.SKTextEncoding" Index="1" FrameworkAlternate="skiasharp-1.68;skiasharp-2.80;skiasharp-2.88" />
      </Parameters>
      <Docs>
        <param name="text">To be added.</param>
        <param name="encoding">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ContainsGlyphs">
      <MemberSignature Language="C#" Value="public bool ContainsGlyphs (IntPtr text, int length, SkiaSharp.SKTextEncoding encoding);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool ContainsGlyphs(native int text, int32 length, valuetype SkiaSharp.SKTextEncoding encoding) cil managed" />
      <MemberSignature Language="DocId" Value="M:SkiaSharp.SKTypeface.ContainsGlyphs(System.IntPtr,System.Int32,SkiaSharp.SKTextEncoding)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>SkiaSharp</AssemblyName>
        <AssemblyVersion>1.68.0.0</AssemblyVersion>
        <AssemblyVersion>2.80.0.0</AssemblyVersion>
        <AssemblyVersion>2.88.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.IntPtr" Index="0" FrameworkAlternate="skiasharp-1.68;skiasharp-2.80;skiasharp-2.88" />
        <Parameter Name="length" Type="System.Int32" Index="1" FrameworkAlternate="skiasharp-1.68;skiasharp-2.80;skiasharp-2.88" />
        <Parameter Name="encoding" Type="SkiaSharp.SKTextEncoding" Index="2" FrameworkAlternate="skiasharp-1.68;skiasharp-2.80;skiasharp-2.88" />
      </Parameters>
      <Docs>
        <param name="text">To be added.</param>
        <param name="length">To be added.</param>
        <param name="encoding">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CountGlyphs">
      <MemberSignature Language="C#" Value="public int CountGlyphs (ReadOnlySpan&lt;char&gt; str);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 CountGlyphs(valuetype System.ReadOnlySpan`1&lt;char&gt; str) cil managed" />
      <MemberSignature Language="DocId" Value="M:SkiaSharp.SKTypeface.CountGlyphs(System.ReadOnlySpan{System.Char})" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>SkiaSharp</AssemblyName>
        <AssemblyVersion>1.68.0.0</AssemblyVersion>
        <AssemblyVersion>2.80.0.0</AssemblyVersion>
        <AssemblyVersion>2.88.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="str" Type="System.ReadOnlySpan&lt;System.Char&gt;" Index="0" FrameworkAlternate="skiasharp-1.68;skiasharp-2.80;skiasharp-2.88" />
      </Parameters>
      <Docs>
        <param name="str">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CountGlyphs">
      <MemberSignature Language="C#" Value="public int CountGlyphs (string str);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 CountGlyphs(string str) cil managed" />
      <MemberSignature Language="DocId" Value="M:SkiaSharp.SKTypeface.CountGlyphs(System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>SkiaSharp</AssemblyName>
        <AssemblyVersion>1.60.0.0</AssemblyVersion>
        <AssemblyVersion>1.68.0.0</AssemblyVersion>
        <AssemblyVersion>2.80.0.0</AssemblyVersion>
        <AssemblyVersion>2.88.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="str" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="str">The string containing characters.</param>
        <summary>Returns the number of glyphs in the string.</summary>
        <returns>The number of number of continuous non-zero glyph IDs computed from the beginning of string.</returns>
        <remarks></remarks>
      </Docs>
    </Member>
    <Member MemberName="CountGlyphs">
      <MemberSignature Language="C#" Value="public int CountGlyphs (byte[] str, SkiaSharp.SKEncoding encoding);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 CountGlyphs(unsigned int8[] str, valuetype SkiaSharp.SKEncoding encoding) cil managed" />
      <MemberSignature Language="DocId" Value="M:SkiaSharp.SKTypeface.CountGlyphs(System.Byte[],SkiaSharp.SKEncoding)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>SkiaSharp</AssemblyName>
        <AssemblyVersion>1.68.0.0</AssemblyVersion>
        <AssemblyVersion>2.80.0.0</AssemblyVersion>
        <AssemblyVersion>2.88.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="skiasharp-1.68;skiasharp-2.80;skiasharp-2.88">
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="skiasharp-1.68;skiasharp-2.80;skiasharp-2.88">
          <AttributeName Language="C#">[System.Obsolete("Use CountGlyphs(byte[], SKTextEncoding) instead.")]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="str" Type="System.Byte[]" Index="0" FrameworkAlternate="skiasharp-1.68;skiasharp-2.80;skiasharp-2.88" />
        <Parameter Name="encoding" Type="SkiaSharp.SKEncoding" Index="1" FrameworkAlternate="skiasharp-1.68;skiasharp-2.80;skiasharp-2.88" />
      </Parameters>
      <Docs>
        <param name="str">The buffer containing character codes.</param>
        <param name="encoding">How the character are encoded.</param>
        <summary>Returns the number of glyphs in the buffer.</summary>
        <returns>The number of number of continuous non-zero glyph IDs computed from the beginning of the buffer.</returns>
        <remarks></remarks>
      </Docs>
    </Member>
    <Member MemberName="CountGlyphs">
      <MemberSignature Language="C#" Value="public int CountGlyphs (byte[] str, SkiaSharp.SKTextEncoding encoding);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 CountGlyphs(unsigned int8[] str, valuetype SkiaSharp.SKTextEncoding encoding) cil managed" />
      <MemberSignature Language="DocId" Value="M:SkiaSharp.SKTypeface.CountGlyphs(System.Byte[],SkiaSharp.SKTextEncoding)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>SkiaSharp</AssemblyName>
        <AssemblyVersion>1.68.0.0</AssemblyVersion>
        <AssemblyVersion>2.80.0.0</AssemblyVersion>
        <AssemblyVersion>2.88.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="str" Type="System.Byte[]" Index="0" FrameworkAlternate="skiasharp-1.68;skiasharp-2.80;skiasharp-2.88" />
        <Parameter Name="encoding" Type="SkiaSharp.SKTextEncoding" Index="1" FrameworkAlternate="skiasharp-1.68;skiasharp-2.80;skiasharp-2.88" />
      </Parameters>
      <Docs>
        <param name="str">To be added.</param>
        <param name="encoding">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CountGlyphs">
      <MemberSignature Language="C#" Value="public int CountGlyphs (ReadOnlySpan&lt;byte&gt; str, SkiaSharp.SKEncoding encoding);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 CountGlyphs(valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; str, valuetype SkiaSharp.SKEncoding encoding) cil managed" />
      <MemberSignature Language="DocId" Value="M:SkiaSharp.SKTypeface.CountGlyphs(System.ReadOnlySpan{System.Byte},SkiaSharp.SKEncoding)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>SkiaSharp</AssemblyName>
        <AssemblyVersion>1.68.0.0</AssemblyVersion>
        <AssemblyVersion>2.80.0.0</AssemblyVersion>
        <AssemblyVersion>2.88.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="skiasharp-1.68;skiasharp-2.80;skiasharp-2.88">
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="skiasharp-1.68;skiasharp-2.80;skiasharp-2.88">
          <AttributeName Language="C#">[System.Obsolete("Use CountGlyphs(ReadOnlySpan&lt;byte&gt;, SKTextEncoding) instead.")]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="str" Type="System.ReadOnlySpan&lt;System.Byte&gt;" Index="0" FrameworkAlternate="skiasharp-1.68;skiasharp-2.80;skiasharp-2.88" />
        <Parameter Name="encoding" Type="SkiaSharp.SKEncoding" Index="1" FrameworkAlternate="skiasharp-1.68;skiasharp-2.80;skiasharp-2.88" />
      </Parameters>
      <Docs>
        <param name="str">The buffer containing character codes.</param>
        <param name="encoding">How the character are encoded.</param>
        <summary>Returns the number of glyphs in the buffer.</summary>
        <returns>The number of number of continuous non-zero glyph IDs computed from the beginning of the buffer.</returns>
        <remarks></remarks>
      </Docs>
    </Member>
    <Member MemberName="CountGlyphs">
      <MemberSignature Language="C#" Value="public int CountGlyphs (ReadOnlySpan&lt;byte&gt; str, SkiaSharp.SKTextEncoding encoding);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 CountGlyphs(valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; str, valuetype SkiaSharp.SKTextEncoding encoding) cil managed" />
      <MemberSignature Language="DocId" Value="M:SkiaSharp.SKTypeface.CountGlyphs(System.ReadOnlySpan{System.Byte},SkiaSharp.SKTextEncoding)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>SkiaSharp</AssemblyName>
        <AssemblyVersion>1.68.0.0</AssemblyVersion>
        <AssemblyVersion>2.80.0.0</AssemblyVersion>
        <AssemblyVersion>2.88.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="str" Type="System.ReadOnlySpan&lt;System.Byte&gt;" Index="0" FrameworkAlternate="skiasharp-1.68;skiasharp-2.80;skiasharp-2.88" />
        <Parameter Name="encoding" Type="SkiaSharp.SKTextEncoding" Index="1" FrameworkAlternate="skiasharp-1.68;skiasharp-2.80;skiasharp-2.88" />
      </Parameters>
      <Docs>
        <param name="str">To be added.</param>
        <param name="encoding">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CountGlyphs">
      <MemberSignature Language="C#" Value="public int CountGlyphs (string str, SkiaSharp.SKEncoding encoding);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 CountGlyphs(string str, valuetype SkiaSharp.SKEncoding encoding) cil managed" />
      <MemberSignature Language="DocId" Value="M:SkiaSharp.SKTypeface.CountGlyphs(System.String,SkiaSharp.SKEncoding)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>SkiaSharp</AssemblyName>
        <AssemblyVersion>1.68.0.0</AssemblyVersion>
        <AssemblyVersion>2.80.0.0</AssemblyVersion>
        <AssemblyVersion>2.88.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="skiasharp-1.68;skiasharp-2.80;skiasharp-2.88">
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="skiasharp-1.68;skiasharp-2.80;skiasharp-2.88">
          <AttributeName Language="C#">[System.Obsolete("Use CountGlyphs(string) instead.")]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="str" Type="System.String" Index="0" FrameworkAlternate="skiasharp-1.68;skiasharp-2.80;skiasharp-2.88" />
        <Parameter Name="encoding" Type="SkiaSharp.SKEncoding" Index="1" FrameworkAlternate="skiasharp-1.68;skiasharp-2.80;skiasharp-2.88" />
      </Parameters>
      <Docs>
        <param name="str">The text containing characters.</param>
        <param name="encoding">How the characters are to be encoded.</param>
        <summary>Returns the number of glyphs on the string.</summary>
        <returns>The number of number of continuous non-zero glyph IDs computed from the beginning of chars.</returns>
        <remarks></remarks>
      </Docs>
    </Member>
    <Member MemberName="CountGlyphs">
      <MemberSignature Language="C#" Value="public int CountGlyphs (IntPtr str, int strLen, SkiaSharp.SKEncoding encoding);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 CountGlyphs(native int str, int32 strLen, valuetype SkiaSharp.SKEncoding encoding) cil managed" />
      <MemberSignature Language="DocId" Value="M:SkiaSharp.SKTypeface.CountGlyphs(System.IntPtr,System.Int32,SkiaSharp.SKEncoding)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>SkiaSharp</AssemblyName>
        <AssemblyVersion>1.60.0.0</AssemblyVersion>
        <AssemblyVersion>1.68.0.0</AssemblyVersion>
        <AssemblyVersion>2.80.0.0</AssemblyVersion>
        <AssemblyVersion>2.88.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="skiasharp-1.68;skiasharp-2.80;skiasharp-2.88">
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="skiasharp-1.68">
          <AttributeName Language="C#">[System.Obsolete("Use CountGlyphs(ReadOnlySpan&lt;byte&gt;, SKTextEncoding) instead.")]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="skiasharp-2.80;skiasharp-2.88">
          <AttributeName Language="C#">[System.Obsolete("Use CountGlyphs(IntPtr, int, SKTextEncoding) instead.")]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="str" Type="System.IntPtr" />
        <Parameter Name="strLen" Type="System.Int32" />
        <Parameter Name="encoding" Type="SkiaSharp.SKEncoding" />
      </Parameters>
      <Docs>
        <param name="str">The buffer of character codes.</param>
        <param name="strLen">The length of the buffer.</param>
        <param name="encoding">How the characters are encoded.</param>
        <summary>Returns the number of glyphs on the specified buffer with the specified length and encoding.</summary>
        <returns>The number of number of continuous non-zero glyph IDs computed from the beginning of chars.</returns>
        <remarks></remarks>
      </Docs>
    </Member>
    <Member MemberName="CountGlyphs">
      <MemberSignature Language="C#" Value="public int CountGlyphs (IntPtr str, int strLen, SkiaSharp.SKTextEncoding encoding);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 CountGlyphs(native int str, int32 strLen, valuetype SkiaSharp.SKTextEncoding encoding) cil managed" />
      <MemberSignature Language="DocId" Value="M:SkiaSharp.SKTypeface.CountGlyphs(System.IntPtr,System.Int32,SkiaSharp.SKTextEncoding)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>SkiaSharp</AssemblyName>
        <AssemblyVersion>1.68.0.0</AssemblyVersion>
        <AssemblyVersion>2.80.0.0</AssemblyVersion>
        <AssemblyVersion>2.88.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="str" Type="System.IntPtr" Index="0" FrameworkAlternate="skiasharp-1.68;skiasharp-2.80;skiasharp-2.88" />
        <Parameter Name="strLen" Type="System.Int32" Index="1" FrameworkAlternate="skiasharp-1.68;skiasharp-2.80;skiasharp-2.88" />
        <Parameter Name="encoding" Type="SkiaSharp.SKTextEncoding" Index="2" FrameworkAlternate="skiasharp-1.68;skiasharp-2.80;skiasharp-2.88" />
      </Parameters>
      <Docs>
        <param name="str">To be added.</param>
        <param name="strLen">To be added.</param>
        <param name="encoding">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateDefault">
      <MemberSignature Language="C#" Value="public static SkiaSharp.SKTypeface CreateDefault ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class SkiaSharp.SKTypeface CreateDefault() cil managed" />
      <MemberSignature Language="DocId" Value="M:SkiaSharp.SKTypeface.CreateDefault" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>SkiaSharp</AssemblyName>
        <AssemblyVersion>1.68.0.0</AssemblyVersion>
        <AssemblyVersion>2.80.0.0</AssemblyVersion>
        <AssemblyVersion>2.88.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>SkiaSharp.SKTypeface</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Creates a new <see cref="T:SkiaSharp.SKTypeface" /> which is the default, Normal typeface.</summary>
        <returns></returns>
        <remarks>This will never be null.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Default">
      <MemberSignature Language="C#" Value="public static SkiaSharp.SKTypeface Default { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class SkiaSharp.SKTypeface Default" />
      <MemberSignature Language="DocId" Value="P:SkiaSharp.SKTypeface.Default" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>SkiaSharp</AssemblyName>
        <AssemblyVersion>1.68.0.0</AssemblyVersion>
        <AssemblyVersion>2.80.0.0</AssemblyVersion>
        <AssemblyVersion>2.88.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>SkiaSharp.SKTypeface</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the default, Normal typeface.</summary>
        <value />
        <remarks>This will never be <see langword="null" />.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:SkiaSharp.SKTypeface.Dispose(System.Boolean)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>SkiaSharp</AssemblyName>
        <AssemblyVersion>1.60.0.0</AssemblyVersion>
        <AssemblyVersion>1.68.0.0</AssemblyVersion>
        <AssemblyVersion>2.80.0.0</AssemblyVersion>
        <AssemblyVersion>2.88.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">
          <see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</param>
        <summary>Releases the unmanaged resources used by the <see cref="T:SkiaSharp.SKTypeface" /> and optionally releases the managed resources.</summary>
        <remarks>Always dispose the object before you release your last reference to the <see cref="T:SkiaSharp.SKTypeface" />. Otherwise, the resources it is using will not be freed until the garbage collector calls the finalizer.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FamilyName">
      <MemberSignature Language="C#" Value="public string FamilyName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string FamilyName" />
      <MemberSignature Language="DocId" Value="P:SkiaSharp.SKTypeface.FamilyName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>SkiaSharp</AssemblyName>
        <AssemblyVersion>1.60.0.0</AssemblyVersion>
        <AssemblyVersion>1.68.0.0</AssemblyVersion>
        <AssemblyVersion>2.80.0.0</AssemblyVersion>
        <AssemblyVersion>2.88.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the family name for the typeface.</summary>
        <value></value>
        <remarks>The family name will always be returned encoded as UTF8, but the language of the name is whatever the host platform chooses.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FontSlant">
      <MemberSignature Language="C#" Value="public SkiaSharp.SKFontStyleSlant FontSlant { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype SkiaSharp.SKFontStyleSlant FontSlant" />
      <MemberSignature Language="DocId" Value="P:SkiaSharp.SKTypeface.FontSlant" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>SkiaSharp</AssemblyName>
        <AssemblyVersion>1.60.0.0</AssemblyVersion>
        <AssemblyVersion>1.68.0.0</AssemblyVersion>
        <AssemblyVersion>2.80.0.0</AssemblyVersion>
        <AssemblyVersion>2.88.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>SkiaSharp.SKFontStyleSlant</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the font slant for the typeface.</summary>
        <value></value>
        <remarks>This may be one of the values in <see cref="T:SkiaSharp.SKFontStyleSlant" />.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FontStyle">
      <MemberSignature Language="C#" Value="public SkiaSharp.SKFontStyle FontStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class SkiaSharp.SKFontStyle FontStyle" />
      <MemberSignature Language="DocId" Value="P:SkiaSharp.SKTypeface.FontStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>SkiaSharp</AssemblyName>
        <AssemblyVersion>1.68.0.0</AssemblyVersion>
        <AssemblyVersion>2.80.0.0</AssemblyVersion>
        <AssemblyVersion>2.88.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>SkiaSharp.SKFontStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the font style for the typeface.</summary>
        <value></value>
        <remarks></remarks>
      </Docs>
    </Member>
    <Member MemberName="FontWeight">
      <MemberSignature Language="C#" Value="public int FontWeight { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 FontWeight" />
      <MemberSignature Language="DocId" Value="P:SkiaSharp.SKTypeface.FontWeight" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>SkiaSharp</AssemblyName>
        <AssemblyVersion>1.60.0.0</AssemblyVersion>
        <AssemblyVersion>1.68.0.0</AssemblyVersion>
        <AssemblyVersion>2.80.0.0</AssemblyVersion>
        <AssemblyVersion>2.88.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the font weight for the typeface.</summary>
        <value></value>
        <remarks>This may be one of the values in <see cref="T:SkiaSharp.SKFontStyleWeight" />.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FontWidth">
      <MemberSignature Language="C#" Value="public int FontWidth { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 FontWidth" />
      <MemberSignature Language="DocId" Value="P:SkiaSharp.SKTypeface.FontWidth" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>SkiaSharp</AssemblyName>
        <AssemblyVersion>1.60.0.0</AssemblyVersion>
        <AssemblyVersion>1.68.0.0</AssemblyVersion>
        <AssemblyVersion>2.80.0.0</AssemblyVersion>
        <AssemblyVersion>2.88.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the font width for the typeface.</summary>
        <value></value>
        <remarks>This may be one of the values in <see cref="T:SkiaSharp.SKFontStyleWidth" />.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FromData">
      <MemberSignature Language="C#" Value="public static SkiaSharp.SKTypeface FromData (SkiaSharp.SKData data, int index = 0);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class SkiaSharp.SKTypeface FromData(class SkiaSharp.SKData data, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:SkiaSharp.SKTypeface.FromData(SkiaSharp.SKData,System.Int32)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>SkiaSharp</AssemblyName>
        <AssemblyVersion>1.60.0.0</AssemblyVersion>
        <AssemblyVersion>1.68.0.0</AssemblyVersion>
        <AssemblyVersion>2.80.0.0</AssemblyVersion>
        <AssemblyVersion>2.88.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>SkiaSharp.SKTypeface</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="SkiaSharp.SKData" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="data">The input data.</param>
        <param name="index">The font face index.</param>
        <summary>Returns a new typeface given data.</summary>
        <returns>Returns a new typeface, or <paramref name="null" /> if the file does not exist, or is not a valid font file.</returns>
        <remarks></remarks>
      </Docs>
    </Member>
    <Member MemberName="FromFamilyName">
      <MemberSignature Language="C#" Value="public static SkiaSharp.SKTypeface FromFamilyName (string familyName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class SkiaSharp.SKTypeface FromFamilyName(string familyName) cil managed" />
      <MemberSignature Language="DocId" Value="M:SkiaSharp.SKTypeface.FromFamilyName(System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>SkiaSharp</AssemblyName>
        <AssemblyVersion>1.68.0.0</AssemblyVersion>
        <AssemblyVersion>2.80.0.0</AssemblyVersion>
        <AssemblyVersion>2.88.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>SkiaSharp.SKTypeface</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="familyName" Type="System.String" Index="0" FrameworkAlternate="skiasharp-1.68;skiasharp-2.80;skiasharp-2.88" />
      </Parameters>
      <Docs>
        <param name="familyName">The name of the font family. May be <paramref name="null" />.</param>
        <summary>Returns a new instance to a typeface that most closely matches the requested family name and style.</summary>
        <returns>Returns to the closest-matching typeface.</returns>
        <remarks></remarks>
      </Docs>
    </Member>
    <Member MemberName="FromFamilyName">
      <MemberSignature Language="C#" Value="public static SkiaSharp.SKTypeface FromFamilyName (string familyName, SkiaSharp.SKFontStyle style);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class SkiaSharp.SKTypeface FromFamilyName(string familyName, class SkiaSharp.SKFontStyle style) cil managed" />
      <MemberSignature Language="DocId" Value="M:SkiaSharp.SKTypeface.FromFamilyName(System.String,SkiaSharp.SKFontStyle)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>SkiaSharp</AssemblyName>
        <AssemblyVersion>1.68.0.0</AssemblyVersion>
        <AssemblyVersion>2.80.0.0</AssemblyVersion>
        <AssemblyVersion>2.88.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>SkiaSharp.SKTypeface</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="familyName" Type="System.String" Index="0" FrameworkAlternate="skiasharp-1.68;skiasharp-2.80;skiasharp-2.88" />
        <Parameter Name="style" Type="SkiaSharp.SKFontStyle" Index="1" FrameworkAlternate="skiasharp-1.68;skiasharp-2.80;skiasharp-2.88" />
      </Parameters>
      <Docs>
        <param name="familyName">The name of the font family. May be <paramref name="null" />.</param>
        <param name="style">The style (normal, bold, italic) of the typeface.</param>
        <summary>Returns a new instance to a typeface that most closely matches the requested family name and style.</summary>
        <returns>Returns to the closest-matching typeface.</returns>
        <remarks></remarks>
      </Docs>
    </Member>
    <Member MemberName="FromFamilyName">
      <MemberSignature Language="C#" Value="public static SkiaSharp.SKTypeface FromFamilyName (string familyName, SkiaSharp.SKTypefaceStyle style = SkiaSharp.SKTypefaceStyle.Normal);" FrameworkAlternate="skiasharp-1.60" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class SkiaSharp.SKTypeface FromFamilyName(string familyName, valuetype SkiaSharp.SKTypefaceStyle style) cil managed" />
      <MemberSignature Language="DocId" Value="M:SkiaSharp.SKTypeface.FromFamilyName(System.String,SkiaSharp.SKTypefaceStyle)" />
      <MemberSignature Language="C#" Value="public static SkiaSharp.SKTypeface FromFamilyName (string familyName, SkiaSharp.SKTypefaceStyle style);" FrameworkAlternate="skiasharp-1.68;skiasharp-2.80;skiasharp-2.88" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>SkiaSharp</AssemblyName>
        <AssemblyVersion>1.60.0.0</AssemblyVersion>
        <AssemblyVersion>1.68.0.0</AssemblyVersion>
        <AssemblyVersion>2.80.0.0</AssemblyVersion>
        <AssemblyVersion>2.88.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="skiasharp-1.68;skiasharp-2.80;skiasharp-2.88">
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="skiasharp-1.68;skiasharp-2.80;skiasharp-2.88">
          <AttributeName Language="C#">[System.Obsolete("Use FromFamilyName(string, SKFontStyleWeight, SKFontStyleWidth, SKFontStyleSlant) instead.")]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>SkiaSharp.SKTypeface</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="familyName" Type="System.String" />
        <Parameter Name="style" Type="SkiaSharp.SKTypefaceStyle" />
      </Parameters>
      <Docs>
        <param name="familyName">The name of the font family. May be <paramref name="null" />.</param>
        <param name="style">The style (normal, bold, italic) of the typeface.</param>
        <summary>Returns a new instance to a typeface that most closely matches the requested family name and style.</summary>
        <returns>Returns to the closest-matching typeface.</returns>
        <remarks></remarks>
      </Docs>
    </Member>
    <Member MemberName="FromFamilyName">
      <MemberSignature Language="C#" Value="public static SkiaSharp.SKTypeface FromFamilyName (string familyName, SkiaSharp.SKFontStyleWeight weight, SkiaSharp.SKFontStyleWidth width, SkiaSharp.SKFontStyleSlant slant);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class SkiaSharp.SKTypeface FromFamilyName(string familyName, valuetype SkiaSharp.SKFontStyleWeight weight, valuetype SkiaSharp.SKFontStyleWidth width, valuetype SkiaSharp.SKFontStyleSlant slant) cil managed" />
      <MemberSignature Language="DocId" Value="M:SkiaSharp.SKTypeface.FromFamilyName(System.String,SkiaSharp.SKFontStyleWeight,SkiaSharp.SKFontStyleWidth,SkiaSharp.SKFontStyleSlant)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>SkiaSharp</AssemblyName>
        <AssemblyVersion>1.60.0.0</AssemblyVersion>
        <AssemblyVersion>1.68.0.0</AssemblyVersion>
        <AssemblyVersion>2.80.0.0</AssemblyVersion>
        <AssemblyVersion>2.88.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>SkiaSharp.SKTypeface</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="familyName" Type="System.String" />
        <Parameter Name="weight" Type="SkiaSharp.SKFontStyleWeight" />
        <Parameter Name="width" Type="SkiaSharp.SKFontStyleWidth" />
        <Parameter Name="slant" Type="SkiaSharp.SKFontStyleSlant" />
      </Parameters>
      <Docs>
        <param name="familyName">The name of the font family. May be <paramref name="null" />.</param>
        <param name="weight">The weight of the typeface.</param>
        <param name="width">The width of the typeface.</param>
        <param name="slant">The slant of the typeface.</param>
        <summary>Return a new instance to a typeface that most closely matches the requested family name and style.</summary>
        <returns>Returns to the closest-matching typeface.</returns>
        <remarks></remarks>
      </Docs>
    </Member>
    <Member MemberName="FromFamilyName">
      <MemberSignature Language="C#" Value="public static SkiaSharp.SKTypeface FromFamilyName (string familyName, int weight, int width, SkiaSharp.SKFontStyleSlant slant);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class SkiaSharp.SKTypeface FromFamilyName(string familyName, int32 weight, int32 width, valuetype SkiaSharp.SKFontStyleSlant slant) cil managed" />
      <MemberSignature Language="DocId" Value="M:SkiaSharp.SKTypeface.FromFamilyName(System.String,System.Int32,System.Int32,SkiaSharp.SKFontStyleSlant)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>SkiaSharp</AssemblyName>
        <AssemblyVersion>1.60.0.0</AssemblyVersion>
        <AssemblyVersion>1.68.0.0</AssemblyVersion>
        <AssemblyVersion>2.80.0.0</AssemblyVersion>
        <AssemblyVersion>2.88.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>SkiaSharp.SKTypeface</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="familyName" Type="System.String" />
        <Parameter Name="weight" Type="System.Int32" />
        <Parameter Name="width" Type="System.Int32" />
        <Parameter Name="slant" Type="SkiaSharp.SKFontStyleSlant" />
      </Parameters>
      <Docs>
        <param name="familyName">The name of the font family. May be <paramref name="null" />.</param>
        <param name="weight">The weight of the typeface.</param>
        <param name="width">The width of the typeface.</param>
        <param name="slant">The slant of the typeface.</param>
        <summary>Return a new instance to a typeface that most closely matches the requested family name and style.</summary>
        <returns>Returns to the closest-matching typeface.</returns>
        <remarks></remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="FromFile">
      <AssemblyInfo>
        <AssemblyName>SkiaSharp</AssemblyName>
      </AssemblyInfo>
      <Docs>
        <remarks>
          <format type="text/markdown"><![CDATA[
## Examples

```csharp
var info = new SKImageInfo(256, 256);
using (var surface = SKSurface.Create(info)) {
    SKCanvas canvas = surface.Canvas;

    canvas.Clear(SKColors.White);

    // load the typeface
    var tf = SKTypeface.FromFile("myfont.ttf");

    // set the paint's typeface
    var paint = new SKPaint {
        TextSize = 50,
        Typeface = tf
    };

    // draw text using the typeface
    canvas.DrawText("SkiaSharp", 50, 100, paint);
}
```
]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="FromFile">
      <MemberSignature Language="C#" Value="public static SkiaSharp.SKTypeface FromFile (string path, int index = 0);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class SkiaSharp.SKTypeface FromFile(string path, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:SkiaSharp.SKTypeface.FromFile(System.String,System.Int32)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>SkiaSharp</AssemblyName>
        <AssemblyVersion>1.60.0.0</AssemblyVersion>
        <AssemblyVersion>1.68.0.0</AssemblyVersion>
        <AssemblyVersion>2.80.0.0</AssemblyVersion>
        <AssemblyVersion>2.88.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>SkiaSharp.SKTypeface</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="path">The path of the file.</param>
        <param name="index">The font face index.</param>
        <summary>Returns a new typeface given a file. </summary>
        <returns>Returns a new typeface, or <paramref name="null" /> if the file does not exist, or is not a valid font file.</returns>
        <remarks></remarks>
      </Docs>
    </Member>
    <Member MemberName="FromStream">
      <MemberSignature Language="C#" Value="public static SkiaSharp.SKTypeface FromStream (SkiaSharp.SKStreamAsset stream, int index = 0);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class SkiaSharp.SKTypeface FromStream(class SkiaSharp.SKStreamAsset stream, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:SkiaSharp.SKTypeface.FromStream(SkiaSharp.SKStreamAsset,System.Int32)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>SkiaSharp</AssemblyName>
        <AssemblyVersion>1.60.0.0</AssemblyVersion>
        <AssemblyVersion>1.68.0.0</AssemblyVersion>
        <AssemblyVersion>2.80.0.0</AssemblyVersion>
        <AssemblyVersion>2.88.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>SkiaSharp.SKTypeface</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stream" Type="SkiaSharp.SKStreamAsset" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="stream">The input stream.</param>
        <param name="index">The font face index.</param>
        <summary>Returns a new typeface given a stream. Ownership of the stream is transferred, so the caller must not reference it again.</summary>
        <returns>Returns a new typeface, or <paramref name="null" /> if the file does not exist, or is not a valid font file.</returns>
        <remarks></remarks>
      </Docs>
    </Member>
    <Member MemberName="FromStream">
      <MemberSignature Language="C#" Value="public static SkiaSharp.SKTypeface FromStream (System.IO.Stream stream, int index = 0);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class SkiaSharp.SKTypeface FromStream(class System.IO.Stream stream, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:SkiaSharp.SKTypeface.FromStream(System.IO.Stream,System.Int32)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>SkiaSharp</AssemblyName>
        <AssemblyVersion>1.60.0.0</AssemblyVersion>
        <AssemblyVersion>1.68.0.0</AssemblyVersion>
        <AssemblyVersion>2.80.0.0</AssemblyVersion>
        <AssemblyVersion>2.88.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>SkiaSharp.SKTypeface</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="stream">The input stream.</param>
        <param name="index">The font face index.</param>
        <summary>Returns a new typeface given a stream. Ownership of the stream is transferred, so the caller must not reference it again.</summary>
        <returns>Returns a new typeface, or <paramref name="null" /> if the file does not exist, or is not a valid font file.</returns>
        <remarks></remarks>
      </Docs>
    </Member>
    <Member MemberName="FromTypeface">
      <MemberSignature Language="C#" Value="public static SkiaSharp.SKTypeface FromTypeface (SkiaSharp.SKTypeface typeface, SkiaSharp.SKTypefaceStyle style = SkiaSharp.SKTypefaceStyle.Normal);" FrameworkAlternate="skiasharp-1.60" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class SkiaSharp.SKTypeface FromTypeface(class SkiaSharp.SKTypeface typeface, valuetype SkiaSharp.SKTypefaceStyle style) cil managed" />
      <MemberSignature Language="DocId" Value="M:SkiaSharp.SKTypeface.FromTypeface(SkiaSharp.SKTypeface,SkiaSharp.SKTypefaceStyle)" />
      <MemberSignature Language="C#" Value="public static SkiaSharp.SKTypeface FromTypeface (SkiaSharp.SKTypeface typeface, SkiaSharp.SKTypefaceStyle style);" FrameworkAlternate="skiasharp-1.68;skiasharp-2.80;skiasharp-2.88" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>SkiaSharp</AssemblyName>
        <AssemblyVersion>1.60.0.0</AssemblyVersion>
        <AssemblyVersion>1.68.0.0</AssemblyVersion>
        <AssemblyVersion>2.80.0.0</AssemblyVersion>
        <AssemblyVersion>2.88.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="skiasharp-1.68;skiasharp-2.80;skiasharp-2.88">
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="skiasharp-1.68;skiasharp-2.80;skiasharp-2.88">
          <AttributeName Language="C#">[System.Obsolete]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>SkiaSharp.SKTypeface</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="typeface" Type="SkiaSharp.SKTypeface" />
        <Parameter Name="style" Type="SkiaSharp.SKTypefaceStyle" />
      </Parameters>
      <Docs>
        <param name="typeface">The typeface to use for the family name.</param>
        <param name="style">The style (normal, bold, italic) of the type face.</param>
        <summary>Return a new reference to the typeface that most closely matches the requested typeface and specified style</summary>
        <returns>Returns to the closest-matching typeface.</returns>
        <remarks></remarks>
      </Docs>
    </Member>
    <Member MemberName="GetGlyph">
      <MemberSignature Language="C#" Value="public ushort GetGlyph (int codepoint);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance unsigned int16 GetGlyph(int32 codepoint) cil managed" />
      <MemberSignature Language="DocId" Value="M:SkiaSharp.SKTypeface.GetGlyph(System.Int32)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>SkiaSharp</AssemblyName>
        <AssemblyVersion>2.80.0.0</AssemblyVersion>
        <AssemblyVersion>2.88.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.UInt16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="codepoint" Type="System.Int32" Index="0" FrameworkAlternate="skiasharp-2.80;skiasharp-2.88" />
      </Parameters>
      <Docs>
        <param name="codepoint">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetGlyphs">
      <MemberSignature Language="C#" Value="public ushort[] GetGlyphs (ReadOnlySpan&lt;char&gt; text);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance unsigned int16[] GetGlyphs(valuetype System.ReadOnlySpan`1&lt;char&gt; text) cil managed" />
      <MemberSignature Language="DocId" Value="M:SkiaSharp.SKTypeface.GetGlyphs(System.ReadOnlySpan{System.Char})" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>SkiaSharp</AssemblyName>
        <AssemblyVersion>1.68.0.0</AssemblyVersion>
        <AssemblyVersion>2.80.0.0</AssemblyVersion>
        <AssemblyVersion>2.88.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.UInt16[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.ReadOnlySpan&lt;System.Char&gt;" Index="0" FrameworkAlternate="skiasharp-1.68;skiasharp-2.80;skiasharp-2.88" />
      </Parameters>
      <Docs>
        <param name="text">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetGlyphs">
      <MemberSignature Language="C#" Value="public ushort[] GetGlyphs (ReadOnlySpan&lt;int&gt; codepoints);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance unsigned int16[] GetGlyphs(valuetype System.ReadOnlySpan`1&lt;int32&gt; codepoints) cil managed" />
      <MemberSignature Language="DocId" Value="M:SkiaSharp.SKTypeface.GetGlyphs(System.ReadOnlySpan{System.Int32})" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>SkiaSharp</AssemblyName>
        <AssemblyVersion>2.80.0.0</AssemblyVersion>
        <AssemblyVersion>2.88.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.UInt16[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="codepoints" Type="System.ReadOnlySpan&lt;System.Int32&gt;" Index="0" FrameworkAlternate="skiasharp-2.80;skiasharp-2.88" />
      </Parameters>
      <Docs>
        <param name="codepoints">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetGlyphs">
      <MemberSignature Language="C#" Value="public ushort[] GetGlyphs (string text);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance unsigned int16[] GetGlyphs(string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:SkiaSharp.SKTypeface.GetGlyphs(System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>SkiaSharp</AssemblyName>
        <AssemblyVersion>1.68.0.0</AssemblyVersion>
        <AssemblyVersion>2.80.0.0</AssemblyVersion>
        <AssemblyVersion>2.88.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.UInt16[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" Index="0" FrameworkAlternate="skiasharp-1.68;skiasharp-2.80;skiasharp-2.88" />
      </Parameters>
      <Docs>
        <param name="text">The string of characters.</param>
        <summary>Retrieve the corresponding glyph IDs of a string of characters.</summary>
        <returns>Returns the corresponding glyph IDs for each character.</returns>
        <remarks></remarks>
      </Docs>
    </Member>
    <Member MemberName="GetGlyphs">
      <MemberSignature Language="C#" Value="public ushort[] GetGlyphs (byte[] text, SkiaSharp.SKEncoding encoding);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance unsigned int16[] GetGlyphs(unsigned int8[] text, valuetype SkiaSharp.SKEncoding encoding) cil managed" />
      <MemberSignature Language="DocId" Value="M:SkiaSharp.SKTypeface.GetGlyphs(System.Byte[],SkiaSharp.SKEncoding)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>SkiaSharp</AssemblyName>
        <AssemblyVersion>1.68.0.0</AssemblyVersion>
        <AssemblyVersion>2.80.0.0</AssemblyVersion>
        <AssemblyVersion>2.88.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="skiasharp-1.68;skiasharp-2.80;skiasharp-2.88">
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="skiasharp-1.68;skiasharp-2.80;skiasharp-2.88">
          <AttributeName Language="C#">[System.Obsolete("Use GetGlyphs(ReadOnlySpan&lt;byte&gt;, SKTextEncoding) instead.")]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt16[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.Byte[]" Index="0" FrameworkAlternate="skiasharp-1.68;skiasharp-2.80;skiasharp-2.88" />
        <Parameter Name="encoding" Type="SkiaSharp.SKEncoding" Index="1" FrameworkAlternate="skiasharp-1.68;skiasharp-2.80;skiasharp-2.88" />
      </Parameters>
      <Docs>
        <param name="text">The buffer of character codes.</param>
        <param name="encoding">How the character codes are encoded.</param>
        <summary>Retrieve the corresponding glyph IDs of a buffer containing character codes, of the specified encoding.</summary>
        <returns>Returns the corresponding glyph IDs for each character.</returns>
        <remarks></remarks>
      </Docs>
    </Member>
    <Member MemberName="GetGlyphs">
      <MemberSignature Language="C#" Value="public ushort[] GetGlyphs (ReadOnlySpan&lt;byte&gt; text, SkiaSharp.SKEncoding encoding);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance unsigned int16[] GetGlyphs(valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; text, valuetype SkiaSharp.SKEncoding encoding) cil managed" />
      <MemberSignature Language="DocId" Value="M:SkiaSharp.SKTypeface.GetGlyphs(System.ReadOnlySpan{System.Byte},SkiaSharp.SKEncoding)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>SkiaSharp</AssemblyName>
        <AssemblyVersion>1.68.0.0</AssemblyVersion>
        <AssemblyVersion>2.80.0.0</AssemblyVersion>
        <AssemblyVersion>2.88.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="skiasharp-1.68;skiasharp-2.80;skiasharp-2.88">
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="skiasharp-1.68;skiasharp-2.80;skiasharp-2.88">
          <AttributeName Language="C#">[System.Obsolete("Use GetGlyphs(ReadOnlySpan&lt;byte&gt;, SKTextEncoding) instead.")]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt16[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.ReadOnlySpan&lt;System.Byte&gt;" Index="0" FrameworkAlternate="skiasharp-1.68;skiasharp-2.80;skiasharp-2.88" />
        <Parameter Name="encoding" Type="SkiaSharp.SKEncoding" Index="1" FrameworkAlternate="skiasharp-1.68;skiasharp-2.80;skiasharp-2.88" />
      </Parameters>
      <Docs>
        <param name="text">The buffer of character codes.</param>
        <param name="encoding">How the character codes are encoded.</param>
        <summary>Retrieve the corresponding glyph IDs of a buffer containing character codes, of the specified encoding.</summary>
        <returns>Returns the corresponding glyph IDs for each character.</returns>
        <remarks></remarks>
      </Docs>
    </Member>
    <Member MemberName="GetGlyphs">
      <MemberSignature Language="C#" Value="public ushort[] GetGlyphs (ReadOnlySpan&lt;byte&gt; text, SkiaSharp.SKTextEncoding encoding);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance unsigned int16[] GetGlyphs(valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; text, valuetype SkiaSharp.SKTextEncoding encoding) cil managed" />
      <MemberSignature Language="DocId" Value="M:SkiaSharp.SKTypeface.GetGlyphs(System.ReadOnlySpan{System.Byte},SkiaSharp.SKTextEncoding)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>SkiaSharp</AssemblyName>
        <AssemblyVersion>1.68.0.0</AssemblyVersion>
        <AssemblyVersion>2.80.0.0</AssemblyVersion>
        <AssemblyVersion>2.88.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.UInt16[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.ReadOnlySpan&lt;System.Byte&gt;" Index="0" FrameworkAlternate="skiasharp-1.68;skiasharp-2.80;skiasharp-2.88" />
        <Parameter Name="encoding" Type="SkiaSharp.SKTextEncoding" Index="1" FrameworkAlternate="skiasharp-1.68;skiasharp-2.80;skiasharp-2.88" />
      </Parameters>
      <Docs>
        <param name="text">To be added.</param>
        <param name="encoding">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetGlyphs">
      <MemberSignature Language="C#" Value="public ushort[] GetGlyphs (string text, SkiaSharp.SKEncoding encoding);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance unsigned int16[] GetGlyphs(string text, valuetype SkiaSharp.SKEncoding encoding) cil managed" />
      <MemberSignature Language="DocId" Value="M:SkiaSharp.SKTypeface.GetGlyphs(System.String,SkiaSharp.SKEncoding)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>SkiaSharp</AssemblyName>
        <AssemblyVersion>1.68.0.0</AssemblyVersion>
        <AssemblyVersion>2.80.0.0</AssemblyVersion>
        <AssemblyVersion>2.88.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="skiasharp-1.68;skiasharp-2.80;skiasharp-2.88">
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="skiasharp-1.68;skiasharp-2.80;skiasharp-2.88">
          <AttributeName Language="C#">[System.Obsolete("Use GetGlyphs(string) instead.")]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt16[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" Index="0" FrameworkAlternate="skiasharp-1.68;skiasharp-2.80;skiasharp-2.88" />
        <Parameter Name="encoding" Type="SkiaSharp.SKEncoding" Index="1" FrameworkAlternate="skiasharp-1.68;skiasharp-2.80;skiasharp-2.88" />
      </Parameters>
      <Docs>
        <param name="text">The string of characters.</param>
        <param name="encoding">How the characters are to be encoded.</param>
        <summary>Retrieve the corresponding glyph IDs of a string of characters, of the specified encoding.</summary>
        <returns>Returns the corresponding glyph IDs for each character.</returns>
        <remarks></remarks>
      </Docs>
    </Member>
    <Member MemberName="GetGlyphs">
      <MemberSignature Language="C#" Value="public int GetGlyphs (string text, out ushort[] glyphs);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 GetGlyphs(string text, [out] unsigned int16[]&amp; glyphs) cil managed" />
      <MemberSignature Language="DocId" Value="M:SkiaSharp.SKTypeface.GetGlyphs(System.String,System.UInt16[]@)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>SkiaSharp</AssemblyName>
        <AssemblyVersion>1.68.0.0</AssemblyVersion>
        <AssemblyVersion>2.80.0.0</AssemblyVersion>
        <AssemblyVersion>2.88.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="skiasharp-1.68;skiasharp-2.80;skiasharp-2.88">
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="skiasharp-1.68;skiasharp-2.80;skiasharp-2.88">
          <AttributeName Language="C#">[System.Obsolete("Use GetGlyphs(string) instead.")]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" Index="0" FrameworkAlternate="skiasharp-1.68;skiasharp-2.80;skiasharp-2.88" />
        <Parameter Name="glyphs" Type="System.UInt16[]" RefType="out" Index="1" FrameworkAlternate="skiasharp-1.68;skiasharp-2.80;skiasharp-2.88" />
      </Parameters>
      <Docs>
        <param name="text">The string of characters.</param>
        <param name="glyphs">Destination for the corresponding glyph IDs for each character.</param>
        <summary>Retrieve the corresponding glyph IDs of a string of characters.</summary>
        <returns>The number of number of continuous non-zero glyph IDs computed from the beginning of the character codes.</returns>
        <remarks></remarks>
      </Docs>
    </Member>
    <Member MemberName="GetGlyphs">
      <MemberSignature Language="C#" Value="public int GetGlyphs (byte[] text, SkiaSharp.SKEncoding encoding, out ushort[] glyphs);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 GetGlyphs(unsigned int8[] text, valuetype SkiaSharp.SKEncoding encoding, [out] unsigned int16[]&amp; glyphs) cil managed" />
      <MemberSignature Language="DocId" Value="M:SkiaSharp.SKTypeface.GetGlyphs(System.Byte[],SkiaSharp.SKEncoding,System.UInt16[]@)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>SkiaSharp</AssemblyName>
        <AssemblyVersion>1.68.0.0</AssemblyVersion>
        <AssemblyVersion>2.80.0.0</AssemblyVersion>
        <AssemblyVersion>2.88.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="skiasharp-1.68;skiasharp-2.80;skiasharp-2.88">
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="skiasharp-1.68;skiasharp-2.80;skiasharp-2.88">
          <AttributeName Language="C#">[System.Obsolete("Use GetGlyphs(byte[], SKTextEncoding) instead.")]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.Byte[]" Index="0" FrameworkAlternate="skiasharp-1.68;skiasharp-2.80;skiasharp-2.88" />
        <Parameter Name="encoding" Type="SkiaSharp.SKEncoding" Index="1" FrameworkAlternate="skiasharp-1.68;skiasharp-2.80;skiasharp-2.88" />
        <Parameter Name="glyphs" Type="System.UInt16[]" RefType="out" Index="2" FrameworkAlternate="skiasharp-1.68;skiasharp-2.80;skiasharp-2.88" />
      </Parameters>
      <Docs>
        <param name="text">The buffer of character codes.</param>
        <param name="encoding">How the character codes are encoded.</param>
        <param name="glyphs">Destination for the corresponding glyph IDs for each character.</param>
        <summary>Retrieve the corresponding glyph IDs of a buffer containing character codes, of the specified encoding.</summary>
        <returns>The number of number of continuous non-zero glyph IDs computed from the beginning of the character codes.</returns>
        <remarks></remarks>
      </Docs>
    </Member>
    <Member MemberName="GetGlyphs">
      <MemberSignature Language="C#" Value="public ushort[] GetGlyphs (IntPtr text, int length, SkiaSharp.SKEncoding encoding);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance unsigned int16[] GetGlyphs(native int text, int32 length, valuetype SkiaSharp.SKEncoding encoding) cil managed" />
      <MemberSignature Language="DocId" Value="M:SkiaSharp.SKTypeface.GetGlyphs(System.IntPtr,System.Int32,SkiaSharp.SKEncoding)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>SkiaSharp</AssemblyName>
        <AssemblyVersion>1.68.0.0</AssemblyVersion>
        <AssemblyVersion>2.80.0.0</AssemblyVersion>
        <AssemblyVersion>2.88.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="skiasharp-1.68;skiasharp-2.80;skiasharp-2.88">
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="skiasharp-1.68;skiasharp-2.80;skiasharp-2.88">
          <AttributeName Language="C#">[System.Obsolete("Use GetGlyphs(IntPtr, int, SKTextEncoding) instead.")]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt16[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.IntPtr" Index="0" FrameworkAlternate="skiasharp-1.68;skiasharp-2.80;skiasharp-2.88" />
        <Parameter Name="length" Type="System.Int32" Index="1" FrameworkAlternate="skiasharp-1.68;skiasharp-2.80;skiasharp-2.88" />
        <Parameter Name="encoding" Type="SkiaSharp.SKEncoding" Index="2" FrameworkAlternate="skiasharp-1.68;skiasharp-2.80;skiasharp-2.88" />
      </Parameters>
      <Docs>
        <param name="text">The buffer of character codes.</param>
        <param name="length">The length of the buffer.</param>
        <param name="encoding">How the character codes are encoded.</param>
        <summary>Retrieve the corresponding glyph IDs of a buffer containing character codes, of the specified encoding.</summary>
        <returns>Returns the corresponding glyph IDs for each character.</returns>
        <remarks></remarks>
      </Docs>
    </Member>
    <Member MemberName="GetGlyphs">
      <MemberSignature Language="C#" Value="public ushort[] GetGlyphs (IntPtr text, int length, SkiaSharp.SKTextEncoding encoding);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance unsigned int16[] GetGlyphs(native int text, int32 length, valuetype SkiaSharp.SKTextEncoding encoding) cil managed" />
      <MemberSignature Language="DocId" Value="M:SkiaSharp.SKTypeface.GetGlyphs(System.IntPtr,System.Int32,SkiaSharp.SKTextEncoding)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>SkiaSharp</AssemblyName>
        <AssemblyVersion>1.68.0.0</AssemblyVersion>
        <AssemblyVersion>2.80.0.0</AssemblyVersion>
        <AssemblyVersion>2.88.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.UInt16[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.IntPtr" Index="0" FrameworkAlternate="skiasharp-1.68;skiasharp-2.80;skiasharp-2.88" />
        <Parameter Name="length" Type="System.Int32" Index="1" FrameworkAlternate="skiasharp-1.68;skiasharp-2.80;skiasharp-2.88" />
        <Parameter Name="encoding" Type="SkiaSharp.SKTextEncoding" Index="2" FrameworkAlternate="skiasharp-1.68;skiasharp-2.80;skiasharp-2.88" />
      </Parameters>
      <Docs>
        <param name="text">To be added.</param>
        <param name="length">To be added.</param>
        <param name="encoding">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetGlyphs">
      <MemberSignature Language="C#" Value="public int GetGlyphs (ReadOnlySpan&lt;byte&gt; text, SkiaSharp.SKEncoding encoding, out ushort[] glyphs);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 GetGlyphs(valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; text, valuetype SkiaSharp.SKEncoding encoding, [out] unsigned int16[]&amp; glyphs) cil managed" />
      <MemberSignature Language="DocId" Value="M:SkiaSharp.SKTypeface.GetGlyphs(System.ReadOnlySpan{System.Byte},SkiaSharp.SKEncoding,System.UInt16[]@)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>SkiaSharp</AssemblyName>
        <AssemblyVersion>1.68.0.0</AssemblyVersion>
        <AssemblyVersion>2.80.0.0</AssemblyVersion>
        <AssemblyVersion>2.88.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="skiasharp-1.68;skiasharp-2.80;skiasharp-2.88">
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="skiasharp-1.68;skiasharp-2.80;skiasharp-2.88">
          <AttributeName Language="C#">[System.Obsolete("Use GetGlyphs(ReadOnlySpan&lt;byte&gt;, SKTextEncoding) instead.")]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.ReadOnlySpan&lt;System.Byte&gt;" Index="0" FrameworkAlternate="skiasharp-1.68;skiasharp-2.80;skiasharp-2.88" />
        <Parameter Name="encoding" Type="SkiaSharp.SKEncoding" Index="1" FrameworkAlternate="skiasharp-1.68;skiasharp-2.80;skiasharp-2.88" />
        <Parameter Name="glyphs" Type="System.UInt16[]" RefType="out" Index="2" FrameworkAlternate="skiasharp-1.68;skiasharp-2.80;skiasharp-2.88" />
      </Parameters>
      <Docs>
        <param name="text">The buffer of character codes.</param>
        <param name="encoding">How the character codes are encoded.</param>
        <param name="glyphs">Destination for the corresponding glyph IDs for each character.</param>
        <summary>Retrieve the corresponding glyph IDs of a buffer containing character codes, of the specified encoding.</summary>
        <returns>The number of number of continuous non-zero glyph IDs computed from the beginning of the character codes.</returns>
        <remarks></remarks>
      </Docs>
    </Member>
    <Member MemberName="GetGlyphs">
      <MemberSignature Language="C#" Value="public int GetGlyphs (string text, SkiaSharp.SKEncoding encoding, out ushort[] glyphs);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 GetGlyphs(string text, valuetype SkiaSharp.SKEncoding encoding, [out] unsigned int16[]&amp; glyphs) cil managed" />
      <MemberSignature Language="DocId" Value="M:SkiaSharp.SKTypeface.GetGlyphs(System.String,SkiaSharp.SKEncoding,System.UInt16[]@)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>SkiaSharp</AssemblyName>
        <AssemblyVersion>1.68.0.0</AssemblyVersion>
        <AssemblyVersion>2.80.0.0</AssemblyVersion>
        <AssemblyVersion>2.88.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="skiasharp-1.68;skiasharp-2.80;skiasharp-2.88">
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="skiasharp-1.68;skiasharp-2.80;skiasharp-2.88">
          <AttributeName Language="C#">[System.Obsolete("Use GetGlyphs(string) instead.")]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" Index="0" FrameworkAlternate="skiasharp-1.68;skiasharp-2.80;skiasharp-2.88" />
        <Parameter Name="encoding" Type="SkiaSharp.SKEncoding" Index="1" FrameworkAlternate="skiasharp-1.68;skiasharp-2.80;skiasharp-2.88" />
        <Parameter Name="glyphs" Type="System.UInt16[]" RefType="out" Index="2" FrameworkAlternate="skiasharp-1.68;skiasharp-2.80;skiasharp-2.88" />
      </Parameters>
      <Docs>
        <param name="text">The string of characters.</param>
        <param name="encoding">How the characters are to be encoded.</param>
        <param name="glyphs">Destination for the corresponding glyph IDs for each character.</param>
        <summary>Retrieve the corresponding glyph IDs of a string of characters.</summary>
        <returns>The number of number of continuous non-zero glyph IDs computed from the beginning of the character codes.</returns>
        <remarks></remarks>
      </Docs>
    </Member>
    <Member MemberName="GetGlyphs">
      <MemberSignature Language="C#" Value="public int GetGlyphs (IntPtr text, int length, SkiaSharp.SKEncoding encoding, out ushort[] glyphs);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 GetGlyphs(native int text, int32 length, valuetype SkiaSharp.SKEncoding encoding, [out] unsigned int16[]&amp; glyphs) cil managed" />
      <MemberSignature Language="DocId" Value="M:SkiaSharp.SKTypeface.GetGlyphs(System.IntPtr,System.Int32,SkiaSharp.SKEncoding,System.UInt16[]@)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>SkiaSharp</AssemblyName>
        <AssemblyVersion>1.68.0.0</AssemblyVersion>
        <AssemblyVersion>2.80.0.0</AssemblyVersion>
        <AssemblyVersion>2.88.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="skiasharp-1.68;skiasharp-2.80;skiasharp-2.88">
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="skiasharp-1.68;skiasharp-2.80;skiasharp-2.88">
          <AttributeName Language="C#">[System.Obsolete("Use GetGlyphs(IntPtr, int, SKTextEncoding) instead.")]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.IntPtr" Index="0" FrameworkAlternate="skiasharp-1.68;skiasharp-2.80;skiasharp-2.88" />
        <Parameter Name="length" Type="System.Int32" Index="1" FrameworkAlternate="skiasharp-1.68;skiasharp-2.80;skiasharp-2.88" />
        <Parameter Name="encoding" Type="SkiaSharp.SKEncoding" Index="2" FrameworkAlternate="skiasharp-1.68;skiasharp-2.80;skiasharp-2.88" />
        <Parameter Name="glyphs" Type="System.UInt16[]" RefType="out" Index="3" FrameworkAlternate="skiasharp-1.68;skiasharp-2.80;skiasharp-2.88" />
      </Parameters>
      <Docs>
        <param name="text">The buffer of character codes.</param>
        <param name="length">The length of the buffer.</param>
        <param name="encoding">How the character codes are encoded.</param>
        <param name="glyphs">Destination for the corresponding glyph IDs for each character.</param>
        <summary>Retrieve the corresponding glyph IDs of a buffer containing character codes, of the specified encoding.</summary>
        <returns>The number of number of continuous non-zero glyph IDs computed from the beginning of the character codes.</returns>
        <remarks></remarks>
      </Docs>
    </Member>
    <Member MemberName="GetKerningPairAdjustments">
      <MemberSignature Language="C#" Value="public int[] GetKerningPairAdjustments (ReadOnlySpan&lt;ushort&gt; glyphs);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32[] GetKerningPairAdjustments(valuetype System.ReadOnlySpan`1&lt;unsigned int16&gt; glyphs) cil managed" />
      <MemberSignature Language="DocId" Value="M:SkiaSharp.SKTypeface.GetKerningPairAdjustments(System.ReadOnlySpan{System.UInt16})" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>SkiaSharp</AssemblyName>
        <AssemblyVersion>1.68.0.0</AssemblyVersion>
        <AssemblyVersion>2.80.0.0</AssemblyVersion>
        <AssemblyVersion>2.88.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="glyphs" Type="System.ReadOnlySpan&lt;System.UInt16&gt;" Index="0" FrameworkAlternate="skiasharp-1.68;skiasharp-2.80;skiasharp-2.88" />
      </Parameters>
      <Docs>
        <param name="glyphs">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTableData">
      <MemberSignature Language="C#" Value="public byte[] GetTableData (uint tag);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance unsigned int8[] GetTableData(unsigned int32 tag) cil managed" />
      <MemberSignature Language="DocId" Value="M:SkiaSharp.SKTypeface.GetTableData(System.UInt32)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>SkiaSharp</AssemblyName>
        <AssemblyVersion>1.60.0.0</AssemblyVersion>
        <AssemblyVersion>1.68.0.0</AssemblyVersion>
        <AssemblyVersion>2.80.0.0</AssemblyVersion>
        <AssemblyVersion>2.88.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tag" Type="System.UInt32" />
      </Parameters>
      <Docs>
        <param name="tag">The table tag to get the data for.</param>
        <summary>Returns the contents of the table data for the specified tag.</summary>
        <returns>Returns the contents, if it exists, otherwise throws.</returns>
        <remarks></remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTableSize">
      <MemberSignature Language="C#" Value="public int GetTableSize (uint tag);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 GetTableSize(unsigned int32 tag) cil managed" />
      <MemberSignature Language="DocId" Value="M:SkiaSharp.SKTypeface.GetTableSize(System.UInt32)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>SkiaSharp</AssemblyName>
        <AssemblyVersion>1.68.0.0</AssemblyVersion>
        <AssemblyVersion>2.80.0.0</AssemblyVersion>
        <AssemblyVersion>2.88.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tag" Type="System.UInt32" Index="0" FrameworkAlternate="skiasharp-1.68;skiasharp-2.80;skiasharp-2.88" />
      </Parameters>
      <Docs>
        <param name="tag">The tag to retrieve.</param>
        <summary>Returns the size of the data for the specified tag.</summary>
        <returns>Returns the size of the data.</returns>
        <remarks></remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTableTags">
      <MemberSignature Language="C#" Value="public uint[] GetTableTags ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance unsigned int32[] GetTableTags() cil managed" />
      <MemberSignature Language="DocId" Value="M:SkiaSharp.SKTypeface.GetTableTags" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>SkiaSharp</AssemblyName>
        <AssemblyVersion>1.60.0.0</AssemblyVersion>
        <AssemblyVersion>1.68.0.0</AssemblyVersion>
        <AssemblyVersion>2.80.0.0</AssemblyVersion>
        <AssemblyVersion>2.88.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.UInt32[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns the list of table tags in the font.</summary>
        <returns></returns>
        <remarks></remarks>
      </Docs>
    </Member>
    <Member MemberName="GlyphCount">
      <MemberSignature Language="C#" Value="public int GlyphCount { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 GlyphCount" />
      <MemberSignature Language="DocId" Value="P:SkiaSharp.SKTypeface.GlyphCount" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>SkiaSharp</AssemblyName>
        <AssemblyVersion>1.68.0.0</AssemblyVersion>
        <AssemblyVersion>2.80.0.0</AssemblyVersion>
        <AssemblyVersion>2.88.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsBold">
      <MemberSignature Language="C#" Value="public bool IsBold { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsBold" />
      <MemberSignature Language="DocId" Value="P:SkiaSharp.SKTypeface.IsBold" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>SkiaSharp</AssemblyName>
        <AssemblyVersion>1.68.0.0</AssemblyVersion>
        <AssemblyVersion>2.80.0.0</AssemblyVersion>
        <AssemblyVersion>2.88.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a value indicating whether the typeface claims to be a bold typeface.</summary>
        <value></value>
        <remarks>
          <format type="text/markdown"><![CDATA[
## Remarks

A typeface is understood to be bold when the weight is greater than or equal to
600 or <xref:SkiaSharp.SKFontStyleWeight.SemiBold>.
]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsFixedPitch">
      <MemberSignature Language="C#" Value="public bool IsFixedPitch { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsFixedPitch" />
      <MemberSignature Language="DocId" Value="P:SkiaSharp.SKTypeface.IsFixedPitch" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>SkiaSharp</AssemblyName>
        <AssemblyVersion>1.68.0.0</AssemblyVersion>
        <AssemblyVersion>2.80.0.0</AssemblyVersion>
        <AssemblyVersion>2.88.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a value indicating whether the typeface claims to be fixed-pitch.</summary>
        <value></value>
        <remarks>
          <format type="text/markdown"><![CDATA[
## Remarks

This does not guarentee that the advance widths will not vary as this is a
style bit on the typeface.
]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsItalic">
      <MemberSignature Language="C#" Value="public bool IsItalic { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsItalic" />
      <MemberSignature Language="DocId" Value="P:SkiaSharp.SKTypeface.IsItalic" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>SkiaSharp</AssemblyName>
        <AssemblyVersion>1.68.0.0</AssemblyVersion>
        <AssemblyVersion>2.80.0.0</AssemblyVersion>
        <AssemblyVersion>2.88.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a value indicating whether the typeface claims to be slanted.</summary>
        <value></value>
        <remarks>
          <format type="text/markdown"><![CDATA[
## Remarks

A typeface is understood to be italic when it has a slant of either
<xref:SkiaSharp.SKFontStyleSlant.Italic> or
<xref:SkiaSharp.SKFontStyleSlant.Oblique>.
]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OpenStream">
      <MemberSignature Language="C#" Value="public SkiaSharp.SKStreamAsset OpenStream ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class SkiaSharp.SKStreamAsset OpenStream() cil managed" />
      <MemberSignature Language="DocId" Value="M:SkiaSharp.SKTypeface.OpenStream" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>SkiaSharp</AssemblyName>
        <AssemblyVersion>1.60.0.0</AssemblyVersion>
        <AssemblyVersion>1.68.0.0</AssemblyVersion>
        <AssemblyVersion>2.80.0.0</AssemblyVersion>
        <AssemblyVersion>2.88.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>SkiaSharp.SKStreamAsset</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns a stream for the contents of the font data.</summary>
        <returns>Returns a stream for the contents of the font data, or <see langword="null" /> on failure.</returns>
        <remarks>The caller is responsible for deleting the stream.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OpenStream">
      <MemberSignature Language="C#" Value="public SkiaSharp.SKStreamAsset OpenStream (out int ttcIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class SkiaSharp.SKStreamAsset OpenStream([out] int32&amp; ttcIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:SkiaSharp.SKTypeface.OpenStream(System.Int32@)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>SkiaSharp</AssemblyName>
        <AssemblyVersion>1.60.0.0</AssemblyVersion>
        <AssemblyVersion>1.68.0.0</AssemblyVersion>
        <AssemblyVersion>2.80.0.0</AssemblyVersion>
        <AssemblyVersion>2.88.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>SkiaSharp.SKStreamAsset</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ttcIndex" Type="System.Int32" RefType="out" />
      </Parameters>
      <Docs>
        <param name="ttcIndex">The TrueTypeCollection index of this typeface within the stream, or 0 if the stream is not a collection.</param>
        <summary>Returns a stream for the contents of the font data.</summary>
        <returns>Returns a stream for the contents of the font data, or <see langword="null" /> on failure.</returns>
        <remarks>The caller is responsible for deleting the stream.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Style">
      <MemberSignature Language="C#" Value="public SkiaSharp.SKTypefaceStyle Style { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype SkiaSharp.SKTypefaceStyle Style" />
      <MemberSignature Language="DocId" Value="P:SkiaSharp.SKTypeface.Style" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>SkiaSharp</AssemblyName>
        <AssemblyVersion>1.60.0.0</AssemblyVersion>
        <AssemblyVersion>1.68.0.0</AssemblyVersion>
        <AssemblyVersion>2.80.0.0</AssemblyVersion>
        <AssemblyVersion>2.88.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="skiasharp-1.68;skiasharp-2.80;skiasharp-2.88">
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="skiasharp-1.68;skiasharp-2.80;skiasharp-2.88">
          <AttributeName Language="C#">[System.Obsolete("Use FontWeight and FontSlant instead.")]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>SkiaSharp.SKTypefaceStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the the typeface's intrinsic style attributes.</summary>
        <value></value>
        <remarks></remarks>
      </Docs>
    </Member>
    <Member MemberName="TableCount">
      <MemberSignature Language="C#" Value="public int TableCount { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 TableCount" />
      <MemberSignature Language="DocId" Value="P:SkiaSharp.SKTypeface.TableCount" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>SkiaSharp</AssemblyName>
        <AssemblyVersion>1.68.0.0</AssemblyVersion>
        <AssemblyVersion>2.80.0.0</AssemblyVersion>
        <AssemblyVersion>2.88.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the number of data tables in the typeface.</summary>
        <value></value>
        <remarks></remarks>
      </Docs>
    </Member>
    <Member MemberName="ToFont">
      <MemberSignature Language="C#" Value="public SkiaSharp.SKFont ToFont ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class SkiaSharp.SKFont ToFont() cil managed" />
      <MemberSignature Language="DocId" Value="M:SkiaSharp.SKTypeface.ToFont" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>SkiaSharp</AssemblyName>
        <AssemblyVersion>2.80.0.0</AssemblyVersion>
        <AssemblyVersion>2.88.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>SkiaSharp.SKFont</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToFont">
      <MemberSignature Language="C#" Value="public SkiaSharp.SKFont ToFont (float size, float scaleX = 1, float skewX = 0);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class SkiaSharp.SKFont ToFont(float32 size, float32 scaleX, float32 skewX) cil managed" />
      <MemberSignature Language="DocId" Value="M:SkiaSharp.SKTypeface.ToFont(System.Single,System.Single,System.Single)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>SkiaSharp</AssemblyName>
        <AssemblyVersion>2.80.0.0</AssemblyVersion>
        <AssemblyVersion>2.88.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>SkiaSharp.SKFont</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="size" Type="System.Single" Index="0" FrameworkAlternate="skiasharp-2.80;skiasharp-2.88" />
        <Parameter Name="scaleX" Type="System.Single" Index="1" FrameworkAlternate="skiasharp-2.80;skiasharp-2.88" />
        <Parameter Name="skewX" Type="System.Single" Index="2" FrameworkAlternate="skiasharp-2.80;skiasharp-2.88" />
      </Parameters>
      <Docs>
        <param name="size">To be added.</param>
        <param name="scaleX">To be added.</param>
        <param name="skewX">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryGetTableData">
      <MemberSignature Language="C#" Value="public bool TryGetTableData (uint tag, out byte[] tableData);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryGetTableData(unsigned int32 tag, [out] unsigned int8[]&amp; tableData) cil managed" />
      <MemberSignature Language="DocId" Value="M:SkiaSharp.SKTypeface.TryGetTableData(System.UInt32,System.Byte[]@)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>SkiaSharp</AssemblyName>
        <AssemblyVersion>1.60.0.0</AssemblyVersion>
        <AssemblyVersion>1.68.0.0</AssemblyVersion>
        <AssemblyVersion>2.80.0.0</AssemblyVersion>
        <AssemblyVersion>2.88.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tag" Type="System.UInt32" />
        <Parameter Name="tableData" Type="System.Byte[]" RefType="out" />
      </Parameters>
      <Docs>
        <param name="tag">The table tag to get the data for.</param>
        <param name="tableData">The contents of the table data for the specified tag.</param>
        <summary>Returns the contents of the table data for the specified tag.</summary>
        <returns>Returns true if the content exists, otherwise false.</returns>
        <remarks></remarks>
      </Docs>
    </Member>
    <Member MemberName="TryGetTableData">
      <MemberSignature Language="C#" Value="public bool TryGetTableData (uint tag, int offset, int length, IntPtr tableData);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryGetTableData(unsigned int32 tag, int32 offset, int32 length, native int tableData) cil managed" />
      <MemberSignature Language="DocId" Value="M:SkiaSharp.SKTypeface.TryGetTableData(System.UInt32,System.Int32,System.Int32,System.IntPtr)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>SkiaSharp</AssemblyName>
        <AssemblyVersion>1.68.0.0</AssemblyVersion>
        <AssemblyVersion>2.80.0.0</AssemblyVersion>
        <AssemblyVersion>2.88.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tag" Type="System.UInt32" Index="0" FrameworkAlternate="skiasharp-1.68;skiasharp-2.80;skiasharp-2.88" />
        <Parameter Name="offset" Type="System.Int32" Index="1" FrameworkAlternate="skiasharp-1.68;skiasharp-2.80;skiasharp-2.88" />
        <Parameter Name="length" Type="System.Int32" Index="2" FrameworkAlternate="skiasharp-1.68;skiasharp-2.80;skiasharp-2.88" />
        <Parameter Name="tableData" Type="System.IntPtr" Index="3" FrameworkAlternate="skiasharp-1.68;skiasharp-2.80;skiasharp-2.88" />
      </Parameters>
      <Docs>
        <param name="tag">The table tag to get the data for.</param>
        <param name="offset">The offset of the data to fetch.</param>
        <param name="length">The length of data to fetch.</param>
        <param name="tableData">The contents of the table data for the specified tag.</param>
        <summary>Returns the contents of the table data for the specified tag.</summary>
        <returns>Returns true if the content exists, otherwise false.</returns>
        <remarks></remarks>
      </Docs>
    </Member>
    <Member MemberName="TryGetTableTags">
      <MemberSignature Language="C#" Value="public bool TryGetTableTags (out uint[] tags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryGetTableTags([out] unsigned int32[]&amp; tags) cil managed" />
      <MemberSignature Language="DocId" Value="M:SkiaSharp.SKTypeface.TryGetTableTags(System.UInt32[]@)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>SkiaSharp</AssemblyName>
        <AssemblyVersion>1.68.0.0</AssemblyVersion>
        <AssemblyVersion>2.80.0.0</AssemblyVersion>
        <AssemblyVersion>2.88.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tags" Type="System.UInt32[]" RefType="out" Index="0" FrameworkAlternate="skiasharp-1.68;skiasharp-2.80;skiasharp-2.88" />
      </Parameters>
      <Docs>
        <param name="tags">The table tags.</param>
        <summary>Returns the list of table tags in the font.</summary>
        <returns>Returns true if the tags could be fetched, otherwise false.</returns>
        <remarks></remarks>
      </Docs>
    </Member>
    <Member MemberName="UnitsPerEm">
      <MemberSignature Language="C#" Value="public int UnitsPerEm { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 UnitsPerEm" />
      <MemberSignature Language="DocId" Value="P:SkiaSharp.SKTypeface.UnitsPerEm" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>SkiaSharp</AssemblyName>
        <AssemblyVersion>1.60.0.0</AssemblyVersion>
        <AssemblyVersion>1.68.0.0</AssemblyVersion>
        <AssemblyVersion>2.80.0.0</AssemblyVersion>
        <AssemblyVersion>2.88.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the units-per-em value for this typeface, or zero if there is an error.</summary>
        <value></value>
        <remarks></remarks>
      </Docs>
    </Member>
  </Members>
</Type>
