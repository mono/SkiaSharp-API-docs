<Type Name="SKNativeObject" FullName="SkiaSharp.SKNativeObject">
  <TypeSignature Language="C#" Value="public class SKNativeObject : IDisposable" FrameworkAlternate="skiasharp-1.60" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit SKNativeObject extends System.Object implements class System.IDisposable" FrameworkAlternate="skiasharp-1.60" />
  <TypeSignature Language="DocId" Value="T:SkiaSharp.SKNativeObject" />
  <TypeSignature Language="C#" Value="public abstract class SKNativeObject : IDisposable" FrameworkAlternate="skiasharp-1.68;skiasharp-2.80;skiasharp-2.88" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit SKNativeObject extends System.Object implements class System.IDisposable" FrameworkAlternate="skiasharp-1.68;skiasharp-2.80;skiasharp-2.88" />
  <AssemblyInfo>
    <AssemblyName>SkiaSharp</AssemblyName>
    <AssemblyVersion>1.60.0.0</AssemblyVersion>
    <AssemblyVersion>1.68.0.0</AssemblyVersion>
    <AssemblyVersion>2.80.0.0</AssemblyVersion>
    <AssemblyVersion>2.88.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>Represents a native object.</summary>
    <remarks>This object just wraps a native handle with the managed dispose pattern. For a tracked object, use <see cref="T:SkiaSharp.SKObject" />.</remarks>
  </Docs>
  <Members>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:SkiaSharp.SKNativeObject.Dispose" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>SkiaSharp</AssemblyName>
        <AssemblyVersion>1.60.0.0</AssemblyVersion>
        <AssemblyVersion>1.68.0.0</AssemblyVersion>
        <AssemblyVersion>2.80.0.0</AssemblyVersion>
        <AssemblyVersion>2.88.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Releases all resources used by this <see cref="T:SkiaSharp.SKNativeObject" />.</summary>
        <remarks>Always dispose the object before you release your last reference to the <see cref="T:SkiaSharp.SKNativeObject" />. Otherwise, the resources it is using will not be freed until the garbage collector calls the finalizer.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected virtual void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:SkiaSharp.SKNativeObject.Dispose(System.Boolean)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>SkiaSharp</AssemblyName>
        <AssemblyVersion>1.60.0.0</AssemblyVersion>
        <AssemblyVersion>1.68.0.0</AssemblyVersion>
        <AssemblyVersion>2.80.0.0</AssemblyVersion>
        <AssemblyVersion>2.88.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">
          <see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</param>
        <summary>Releases the unmanaged resources used by the <see cref="T:SkiaSharp.SKNativeObject" /> and optionally releases the managed resources.</summary>
        <remarks>Always dispose the object before you release your last reference to the <see cref="T:SkiaSharp.SKNativeObject" />. Otherwise, the resources it is using will not be freed until the garbage collector calls the finalizer.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DisposeInternal">
      <MemberSignature Language="C#" Value="protected internal void DisposeInternal ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig instance void DisposeInternal() cil managed" />
      <MemberSignature Language="DocId" Value="M:SkiaSharp.SKNativeObject.DisposeInternal" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>SkiaSharp</AssemblyName>
        <AssemblyVersion>1.68.0.0</AssemblyVersion>
        <AssemblyVersion>2.80.0.0</AssemblyVersion>
        <AssemblyVersion>2.88.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Triggers a dispose, ignoring the value of <see cref="P:SkiaSharp.SKNativeObject.IgnorePublicDispose" />.</summary>
        <remarks></remarks>
      </Docs>
    </Member>
    <Member MemberName="DisposeManaged">
      <MemberSignature Language="C#" Value="protected virtual void DisposeManaged ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void DisposeManaged() cil managed" />
      <MemberSignature Language="DocId" Value="M:SkiaSharp.SKNativeObject.DisposeManaged" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>SkiaSharp</AssemblyName>
        <AssemblyVersion>1.68.0.0</AssemblyVersion>
        <AssemblyVersion>2.80.0.0</AssemblyVersion>
        <AssemblyVersion>2.88.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Implemented by derived <see cref="T:SkiaSharp.SKNativeObject" /> types to destroy any managed objects.</summary>
        <remarks></remarks>
      </Docs>
    </Member>
    <Member MemberName="DisposeNative">
      <MemberSignature Language="C#" Value="protected virtual void DisposeNative ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void DisposeNative() cil managed" />
      <MemberSignature Language="DocId" Value="M:SkiaSharp.SKNativeObject.DisposeNative" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>SkiaSharp</AssemblyName>
        <AssemblyVersion>1.68.0.0</AssemblyVersion>
        <AssemblyVersion>2.80.0.0</AssemblyVersion>
        <AssemblyVersion>2.88.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Implemented by derived <see cref="T:SkiaSharp.SKNativeObject" /> types to destroy any native objects.</summary>
        <remarks></remarks>
      </Docs>
    </Member>
    <Member MemberName="DisposeUnownedManaged">
      <MemberSignature Language="C#" Value="protected virtual void DisposeUnownedManaged ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void DisposeUnownedManaged() cil managed" />
      <MemberSignature Language="DocId" Value="M:SkiaSharp.SKNativeObject.DisposeUnownedManaged" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>SkiaSharp</AssemblyName>
        <AssemblyVersion>2.80.0.0</AssemblyVersion>
        <AssemblyVersion>2.88.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Finalize">
      <MemberSignature Language="C#" Value="~SKNativeObject ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Finalize() cil managed" />
      <MemberSignature Language="DocId" Value="M:SkiaSharp.SKNativeObject.Finalize" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>SkiaSharp</AssemblyName>
        <AssemblyVersion>1.60.0.0</AssemblyVersion>
        <AssemblyVersion>1.68.0.0</AssemblyVersion>
        <AssemblyVersion>2.80.0.0</AssemblyVersion>
        <AssemblyVersion>2.88.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Allows an object to try to free resources and perform other cleanup operations before it is reclaimed by garbage collection.</summary>
        <remarks></remarks>
      </Docs>
    </Member>
    <Member MemberName="Handle">
      <MemberSignature Language="C#" Value="public virtual IntPtr Handle { get; protected set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int Handle" />
      <MemberSignature Language="DocId" Value="P:SkiaSharp.SKNativeObject.Handle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>SkiaSharp</AssemblyName>
        <AssemblyVersion>1.60.0.0</AssemblyVersion>
        <AssemblyVersion>1.68.0.0</AssemblyVersion>
        <AssemblyVersion>2.80.0.0</AssemblyVersion>
        <AssemblyVersion>2.88.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the handle to the underlying native object.</summary>
        <value></value>
        <remarks></remarks>
      </Docs>
    </Member>
    <Member MemberName="IgnorePublicDispose">
      <MemberSignature Language="C#" Value="protected internal bool IgnorePublicDispose { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IgnorePublicDispose" />
      <MemberSignature Language="DocId" Value="P:SkiaSharp.SKNativeObject.IgnorePublicDispose" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>SkiaSharp</AssemblyName>
        <AssemblyVersion>1.68.0.0</AssemblyVersion>
        <AssemblyVersion>2.80.0.0</AssemblyVersion>
        <AssemblyVersion>2.88.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets a value indicating whether the call the public <see cref="M:SkiaSharp.SKNativeObject.Dispose" /> should be no-op.</summary>
        <value></value>
        <remarks>This only affects the public disposal. Objects that own this one can still forcefull trigger a dispose using <see cref="M:SkiaSharp.SKNativeObject.DisposeInternal" />.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsDisposed">
      <MemberSignature Language="C#" Value="protected internal bool IsDisposed { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsDisposed" />
      <MemberSignature Language="DocId" Value="P:SkiaSharp.SKNativeObject.IsDisposed" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>SkiaSharp</AssemblyName>
        <AssemblyVersion>1.68.0.0</AssemblyVersion>
        <AssemblyVersion>2.80.0.0</AssemblyVersion>
        <AssemblyVersion>2.88.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets a value indicating whether the object has already been disposed.</summary>
        <value></value>
        <remarks></remarks>
      </Docs>
    </Member>
    <Member MemberName="OwnsHandle">
      <MemberSignature Language="C#" Value="public virtual bool OwnsHandle { protected internal get; protected set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool OwnsHandle" />
      <MemberSignature Language="DocId" Value="P:SkiaSharp.SKNativeObject.OwnsHandle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>SkiaSharp</AssemblyName>
        <AssemblyVersion>1.68.0.0</AssemblyVersion>
        <AssemblyVersion>2.80.0.0</AssemblyVersion>
        <AssemblyVersion>2.88.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets a value indicating whether this object owns it's handle and should destroy the native object when is is disposed.</summary>
        <value></value>
        <remarks></remarks>
      </Docs>
    </Member>
  </Members>
</Type>
