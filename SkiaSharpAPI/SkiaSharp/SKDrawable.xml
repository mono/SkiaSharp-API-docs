<Type Name="SKDrawable" FullName="SkiaSharp.SKDrawable">
  <TypeSignature Language="C#" Value="public class SKDrawable : SkiaSharp.SKObject" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi SKDrawable extends SkiaSharp.SKObject" />
  <TypeSignature Language="DocId" Value="T:SkiaSharp.SKDrawable" />
  <AssemblyInfo>
    <AssemblyName>SkiaSharp</AssemblyName>
    <AssemblyVersion>1.68.0.0</AssemblyVersion>
    <AssemblyVersion>2.80.0.0</AssemblyVersion>
    <AssemblyVersion>2.88.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>SkiaSharp.SKObject</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Represents the base class for objects that draw into <see cref="T:SkiaSharp.SKCanvas" />.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[
## Remarks

The object has a generation ID, which is guaranteed to be unique across all
drawables. To allow for clients of the drawable that may want to cache the
results, the drawable must change its generation ID whenever its internal
state changes such that it will draw differently.
]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected SKDrawable ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:SkiaSharp.SKDrawable.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>SkiaSharp</AssemblyName>
        <AssemblyVersion>1.68.0.0</AssemblyVersion>
        <AssemblyVersion>2.80.0.0</AssemblyVersion>
        <AssemblyVersion>2.88.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Creates a new instance of <see cref="T:SkiaSharp.SKDrawable" />.</summary>
        <remarks></remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected SKDrawable (bool owns);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(bool owns) cil managed" />
      <MemberSignature Language="DocId" Value="M:SkiaSharp.SKDrawable.#ctor(System.Boolean)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>SkiaSharp</AssemblyName>
        <AssemblyVersion>1.68.0.0</AssemblyVersion>
        <AssemblyVersion>2.80.0.0</AssemblyVersion>
        <AssemblyVersion>2.88.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="owns" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="owns">The value indicating whether this object should destroy the underlying native object.</param>
        <summary>Creates a new instance of <see cref="T:SkiaSharp.SKDrawable" />.</summary>
        <remarks></remarks>
      </Docs>
    </Member>
    <Member MemberName="Bounds">
      <MemberSignature Language="C#" Value="public SkiaSharp.SKRect Bounds { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype SkiaSharp.SKRect Bounds" />
      <MemberSignature Language="DocId" Value="P:SkiaSharp.SKDrawable.Bounds" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>SkiaSharp</AssemblyName>
        <AssemblyVersion>1.68.0.0</AssemblyVersion>
        <AssemblyVersion>2.80.0.0</AssemblyVersion>
        <AssemblyVersion>2.88.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>SkiaSharp.SKRect</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the conservative bounds of what the drawable will draw.</summary>
        <value></value>
        <remarks>
          <format type="text/markdown"><![CDATA[
## Remarks

If the drawable can change what it draws (e.g. animation or in response to
some external change), then this must return a bounds that is always valid for
all possible states.
]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:SkiaSharp.SKDrawable.Dispose(System.Boolean)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>SkiaSharp</AssemblyName>
        <AssemblyVersion>1.68.0.0</AssemblyVersion>
        <AssemblyVersion>2.80.0.0</AssemblyVersion>
        <AssemblyVersion>2.88.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">
          <see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</param>
        <summary>Releases the unmanaged resources used by the <see cref="T:SkiaSharp.SKDrawable" /> and optionally releases the managed resources.</summary>
        <remarks>Always dispose the object before you release your last reference to the <see cref="T:SkiaSharp.SKDrawable" />. Otherwise, the resources it is using will not be freed until the garbage collector calls the finalizer.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DisposeNative">
      <MemberSignature Language="C#" Value="protected override void DisposeNative ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void DisposeNative() cil managed" />
      <MemberSignature Language="DocId" Value="M:SkiaSharp.SKDrawable.DisposeNative" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>SkiaSharp</AssemblyName>
        <AssemblyVersion>1.68.0.0</AssemblyVersion>
        <AssemblyVersion>2.80.0.0</AssemblyVersion>
        <AssemblyVersion>2.88.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Implemented by derived <see cref="T:SkiaSharp.SKObject" /> types to destroy any native objects.</summary>
        <remarks></remarks>
      </Docs>
    </Member>
    <Member MemberName="Draw">
      <MemberSignature Language="C#" Value="public void Draw (SkiaSharp.SKCanvas canvas, ref SkiaSharp.SKMatrix matrix);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Draw(class SkiaSharp.SKCanvas canvas, valuetype SkiaSharp.SKMatrix&amp; matrix) cil managed" />
      <MemberSignature Language="DocId" Value="M:SkiaSharp.SKDrawable.Draw(SkiaSharp.SKCanvas,SkiaSharp.SKMatrix@)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>SkiaSharp</AssemblyName>
        <AssemblyVersion>1.68.0.0</AssemblyVersion>
        <AssemblyVersion>2.80.0.0</AssemblyVersion>
        <AssemblyVersion>2.88.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="canvas" Type="SkiaSharp.SKCanvas" />
        <Parameter Name="matrix" Type="SkiaSharp.SKMatrix" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="canvas">The canvas to draw on.</param>
        <param name="matrix">The matrix to use when drawing.</param>
        <summary>Draw the current drawable onto the specified canvas.</summary>
        <remarks></remarks>
      </Docs>
    </Member>
    <Member MemberName="Draw">
      <MemberSignature Language="C#" Value="public void Draw (SkiaSharp.SKCanvas canvas, float x, float y);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Draw(class SkiaSharp.SKCanvas canvas, float32 x, float32 y) cil managed" />
      <MemberSignature Language="DocId" Value="M:SkiaSharp.SKDrawable.Draw(SkiaSharp.SKCanvas,System.Single,System.Single)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>SkiaSharp</AssemblyName>
        <AssemblyVersion>1.68.0.0</AssemblyVersion>
        <AssemblyVersion>2.80.0.0</AssemblyVersion>
        <AssemblyVersion>2.88.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="canvas" Type="SkiaSharp.SKCanvas" />
        <Parameter Name="x" Type="System.Single" />
        <Parameter Name="y" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="canvas">The canvas to draw on.</param>
        <param name="x">The amount to translate along the x-coordinate.</param>
        <param name="y">The amount to translate along the y-coordinate.</param>
        <summary>Draw the current drawable onto the specified canvas.</summary>
        <remarks></remarks>
      </Docs>
    </Member>
    <Member MemberName="GenerationId">
      <MemberSignature Language="C#" Value="public uint GenerationId { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance unsigned int32 GenerationId" />
      <MemberSignature Language="DocId" Value="P:SkiaSharp.SKDrawable.GenerationId" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>SkiaSharp</AssemblyName>
        <AssemblyVersion>1.68.0.0</AssemblyVersion>
        <AssemblyVersion>2.80.0.0</AssemblyVersion>
        <AssemblyVersion>2.88.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.UInt32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the unique value for this instance.</summary>
        <value></value>
        <remarks>It is presumed that if two calls return the same value, then drawing this will result in the same image as well.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NotifyDrawingChanged">
      <MemberSignature Language="C#" Value="public void NotifyDrawingChanged ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void NotifyDrawingChanged() cil managed" />
      <MemberSignature Language="DocId" Value="M:SkiaSharp.SKDrawable.NotifyDrawingChanged" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>SkiaSharp</AssemblyName>
        <AssemblyVersion>1.68.0.0</AssemblyVersion>
        <AssemblyVersion>2.80.0.0</AssemblyVersion>
        <AssemblyVersion>2.88.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Invalidate the drawing generation ID, indicating that the drawing has changed.</summary>
        <remarks>This is typically used by the object itself in response to its internal state changing.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnDraw">
      <MemberSignature Language="C#" Value="protected virtual void OnDraw (SkiaSharp.SKCanvas canvas);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnDraw(class SkiaSharp.SKCanvas canvas) cil managed" />
      <MemberSignature Language="DocId" Value="M:SkiaSharp.SKDrawable.OnDraw(SkiaSharp.SKCanvas)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>SkiaSharp</AssemblyName>
        <AssemblyVersion>1.68.0.0</AssemblyVersion>
        <AssemblyVersion>2.80.0.0</AssemblyVersion>
        <AssemblyVersion>2.88.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="canvas" Type="SkiaSharp.SKCanvas" />
      </Parameters>
      <Docs>
        <param name="canvas">The canvas to draw on.</param>
        <summary>Implemented by derived <see cref="T:SkiaSharp.SKDrawable" /> types to draw the drawable to the canvas.</summary>
        <remarks>If the generation ID is the same, then the resulting image must be the same.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnGetBounds">
      <MemberSignature Language="C#" Value="protected virtual SkiaSharp.SKRect OnGetBounds ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance valuetype SkiaSharp.SKRect OnGetBounds() cil managed" />
      <MemberSignature Language="DocId" Value="M:SkiaSharp.SKDrawable.OnGetBounds" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>SkiaSharp</AssemblyName>
        <AssemblyVersion>1.68.0.0</AssemblyVersion>
        <AssemblyVersion>2.80.0.0</AssemblyVersion>
        <AssemblyVersion>2.88.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>SkiaSharp.SKRect</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Implemented by derived <see cref="T:SkiaSharp.SKDrawable" /> types to return the conservative bounds of what the drawable will draw.</summary>
        <returns>Returns the bounds.</returns>
        <remarks></remarks>
      </Docs>
    </Member>
    <Member MemberName="OnSnapshot">
      <MemberSignature Language="C#" Value="protected virtual SkiaSharp.SKPicture OnSnapshot ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class SkiaSharp.SKPicture OnSnapshot() cil managed" />
      <MemberSignature Language="DocId" Value="M:SkiaSharp.SKDrawable.OnSnapshot" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>SkiaSharp</AssemblyName>
        <AssemblyVersion>1.68.0.0</AssemblyVersion>
        <AssemblyVersion>2.80.0.0</AssemblyVersion>
        <AssemblyVersion>2.88.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>SkiaSharp.SKPicture</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Implemented by derived <see cref="T:SkiaSharp.SKDrawable" /> types to create an immutable snapshot of the drawing.</summary>
        <returns>Returns the new <see cref="T:SkiaSharp.SKPicture" /> snapshot.</returns>
        <remarks></remarks>
      </Docs>
    </Member>
    <Member MemberName="Snapshot">
      <MemberSignature Language="C#" Value="public SkiaSharp.SKPicture Snapshot ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class SkiaSharp.SKPicture Snapshot() cil managed" />
      <MemberSignature Language="DocId" Value="M:SkiaSharp.SKDrawable.Snapshot" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>SkiaSharp</AssemblyName>
        <AssemblyVersion>1.68.0.0</AssemblyVersion>
        <AssemblyVersion>2.80.0.0</AssemblyVersion>
        <AssemblyVersion>2.88.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>SkiaSharp.SKPicture</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Create an immutable snapshot of the drawing.</summary>
        <returns>Returns the <see cref="T:SkiaSharp.SKPicture" /> snapshot.</returns>
        <remarks></remarks>
      </Docs>
    </Member>
  </Members>
</Type>
