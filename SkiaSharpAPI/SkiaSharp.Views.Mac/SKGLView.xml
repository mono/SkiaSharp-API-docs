<Type Name="SKGLView" FullName="SkiaSharp.Views.Mac.SKGLView">
  <TypeSignature Language="C#" Value="public class SKGLView : AppKit.NSOpenGLView" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit SKGLView extends AppKit.NSOpenGLView" />
  <TypeSignature Language="DocId" Value="T:SkiaSharp.Views.Mac.SKGLView" />
  <AssemblyInfo>
    <AssemblyName>SkiaSharp.Views.Mac</AssemblyName>
    <AssemblyVersion>1.60.0.0</AssemblyVersion>
    <AssemblyVersion>1.68.0.0</AssemblyVersion>
    <AssemblyVersion>2.80.0.0</AssemblyVersion>
    <AssemblyVersion>2.88.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>AppKit.NSOpenGLView</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[Foundation.Register("SKGLView")]</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName Language="C#">[System.ComponentModel.DesignTimeVisible(true)]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>A hardware-accelerated view that can be drawn on using SkiaSharp drawing commands.</summary>
    <remarks></remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SKGLView ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:SkiaSharp.Views.Mac.SKGLView.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>SkiaSharp.Views.Mac</AssemblyName>
        <AssemblyVersion>1.60.0.0</AssemblyVersion>
        <AssemblyVersion>1.68.0.0</AssemblyVersion>
        <AssemblyVersion>2.80.0.0</AssemblyVersion>
        <AssemblyVersion>2.88.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Default constructor that initializes a new instance of <see cref="T:SkiaSharp.Views.Mac.SKGLView" />.</summary>
        <remarks></remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SKGLView (CoreGraphics.CGRect frame);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype CoreGraphics.CGRect frame) cil managed" />
      <MemberSignature Language="DocId" Value="M:SkiaSharp.Views.Mac.SKGLView.#ctor(CoreGraphics.CGRect)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>SkiaSharp.Views.Mac</AssemblyName>
        <AssemblyVersion>1.60.0.0</AssemblyVersion>
        <AssemblyVersion>1.68.0.0</AssemblyVersion>
        <AssemblyVersion>2.80.0.0</AssemblyVersion>
        <AssemblyVersion>2.88.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="frame" Type="CoreGraphics.CGRect" />
      </Parameters>
      <Docs>
        <param name="frame">The frame used by the view, expressed in Mac points.</param>
        <summary>Initializes the <see cref="T:SkiaSharp.Views.Mac.SKGLView" /> with the specified frame.</summary>
        <remarks></remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SKGLView (IntPtr p);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(native int p) cil managed" />
      <MemberSignature Language="DocId" Value="M:SkiaSharp.Views.Mac.SKGLView.#ctor(System.IntPtr)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>SkiaSharp.Views.Mac</AssemblyName>
        <AssemblyVersion>1.60.0.0</AssemblyVersion>
        <AssemblyVersion>1.68.0.0</AssemblyVersion>
        <AssemblyVersion>2.80.0.0</AssemblyVersion>
        <AssemblyVersion>2.88.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="p" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="p">The pointer (handle) to the unmanaged object.</param>
        <summary>A constructor used when creating managed representations of unmanaged objects; Called by the runtime.</summary>
        <remarks></remarks>
      </Docs>
    </Member>
    <Member MemberName="AwakeFromNib">
      <MemberSignature Language="C#" Value="public override void AwakeFromNib ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void AwakeFromNib() cil managed" />
      <MemberSignature Language="DocId" Value="M:SkiaSharp.Views.Mac.SKGLView.AwakeFromNib" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>SkiaSharp.Views.Mac</AssemblyName>
        <AssemblyVersion>1.60.0.0</AssemblyVersion>
        <AssemblyVersion>1.68.0.0</AssemblyVersion>
        <AssemblyVersion>2.80.0.0</AssemblyVersion>
        <AssemblyVersion>2.88.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Called after the object has been loaded from the nib file. Overriders must call the base method.</summary>
        <remarks></remarks>
      </Docs>
    </Member>
    <Member MemberName="CanvasSize">
      <MemberSignature Language="C#" Value="public SkiaSharp.SKSize CanvasSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype SkiaSharp.SKSize CanvasSize" />
      <MemberSignature Language="DocId" Value="P:SkiaSharp.Views.Mac.SKGLView.CanvasSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>SkiaSharp.Views.Mac</AssemblyName>
        <AssemblyVersion>1.60.0.0</AssemblyVersion>
        <AssemblyVersion>1.68.0.0</AssemblyVersion>
        <AssemblyVersion>2.80.0.0</AssemblyVersion>
        <AssemblyVersion>2.88.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>SkiaSharp.SKSize</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the current canvas size.</summary>
        <value></value>
        <remarks>The canvas size may be different to the view size as a result of the current device's pixel density.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DrawInSurface">
      <MemberSignature Language="C#" Value="public virtual void DrawInSurface (SkiaSharp.SKSurface surface, SkiaSharp.GRBackendRenderTargetDesc renderTarget);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DrawInSurface(class SkiaSharp.SKSurface surface, valuetype SkiaSharp.GRBackendRenderTargetDesc renderTarget) cil managed" />
      <MemberSignature Language="DocId" Value="M:SkiaSharp.Views.Mac.SKGLView.DrawInSurface(SkiaSharp.SKSurface,SkiaSharp.GRBackendRenderTargetDesc)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>SkiaSharp.Views.Mac</AssemblyName>
        <AssemblyVersion>1.60.0.0</AssemblyVersion>
        <AssemblyVersion>1.68.0.0</AssemblyVersion>
        <AssemblyVersion>2.80.0.0</AssemblyVersion>
        <AssemblyVersion>2.88.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="skiasharp-views-1.68;skiasharp-views-2.80;skiasharp-views-2.88">
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="skiasharp-views-1.68;skiasharp-views-2.80;skiasharp-views-2.88">
          <AttributeName Language="C#">[System.Obsolete("Use OnPaintSurface(SKPaintGLSurfaceEventArgs) instead.")]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="surface" Type="SkiaSharp.SKSurface" />
        <Parameter Name="renderTarget" Type="SkiaSharp.GRBackendRenderTargetDesc" />
      </Parameters>
      <Docs>
        <param name="surface">The surface to draw on.</param>
        <param name="renderTarget">The render target that is currently being drawn.</param>
        <summary>Implement this to draw on the canvas.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[
## Remarks

There are two ways to draw on this surface: by overriding the
<xref:SkiaSharp.Views.Mac.SKGLView.DrawInSurface(SkiaSharp.SKSurface,SkiaSharp.GRBackendRenderTargetDesc)>
method, or by attaching a handler to the
<xref:SkiaSharp.Views.Mac.SKGLView.PaintSurface>
event.

> [!IMPORTANT]
> If this method is overridden, then the base must be called, otherwise the
> event may not be fired.

> [!NOTE]
> If SkiaSharp version v1.68.x or greater is being used, then the
> <xref:SkiaSharp.Views.Mac.SKGLView.OnPaintSurface(SkiaSharp.Views.Mac.SKPaintGLSurfaceEventArgs)>
> method should be overridden instead of
> <xref:SkiaSharp.Views.Mac.SKGLView.DrawInSurface(SkiaSharp.SKSurface,SkiaSharp.GRBackendRenderTargetDesc)>.

## Examples

```csharp
public override void DrawInSurface (SKSurface surface, SKBackendRenderTargetDesc renderTarget)
{
    // call the base method
    base.DrawInSurface (surface, renderTarget);

    var surfaceWidth = renderTarget.Width;
    var surfaceHeight = renderTarget.Height;

    var canvas = surface.Canvas;

    // draw on the canvas

    canvas.Flush ();
}
```
]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DrawRect">
      <MemberSignature Language="C#" Value="public override void DrawRect (CoreGraphics.CGRect dirtyRect);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void DrawRect(valuetype CoreGraphics.CGRect dirtyRect) cil managed" />
      <MemberSignature Language="DocId" Value="M:SkiaSharp.Views.Mac.SKGLView.DrawRect(CoreGraphics.CGRect)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>SkiaSharp.Views.Mac</AssemblyName>
        <AssemblyVersion>1.60.0.0</AssemblyVersion>
        <AssemblyVersion>1.68.0.0</AssemblyVersion>
        <AssemblyVersion>2.80.0.0</AssemblyVersion>
        <AssemblyVersion>2.88.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dirtyRect" Type="CoreGraphics.CGRect" />
      </Parameters>
      <Docs>
        <param name="dirtyRect">The rectangle to draw.</param>
        <summary>Draws the view within the passed-in rectangle.</summary>
        <remarks></remarks>
      </Docs>
    </Member>
    <Member MemberName="GRContext">
      <MemberSignature Language="C#" Value="public SkiaSharp.GRContext GRContext { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class SkiaSharp.GRContext GRContext" />
      <MemberSignature Language="DocId" Value="P:SkiaSharp.Views.Mac.SKGLView.GRContext" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>SkiaSharp.Views.Mac</AssemblyName>
        <AssemblyVersion>1.60.0.0</AssemblyVersion>
        <AssemblyVersion>1.68.0.0</AssemblyVersion>
        <AssemblyVersion>2.80.0.0</AssemblyVersion>
        <AssemblyVersion>2.88.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>SkiaSharp.GRContext</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the current GPU context.</summary>
        <value></value>
        <remarks></remarks>
      </Docs>
    </Member>
    <Member MemberName="OnPaintSurface">
      <MemberSignature Language="C#" Value="protected virtual void OnPaintSurface (SkiaSharp.Views.Mac.SKPaintGLSurfaceEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnPaintSurface(class SkiaSharp.Views.Mac.SKPaintGLSurfaceEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:SkiaSharp.Views.Mac.SKGLView.OnPaintSurface(SkiaSharp.Views.Mac.SKPaintGLSurfaceEventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>SkiaSharp.Views.Mac</AssemblyName>
        <AssemblyVersion>1.68.0.0</AssemblyVersion>
        <AssemblyVersion>2.80.0.0</AssemblyVersion>
        <AssemblyVersion>2.88.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="SkiaSharp.Views.Mac.SKPaintGLSurfaceEventArgs" Index="0" FrameworkAlternate="skiasharp-views-1.68;skiasharp-views-2.80;skiasharp-views-2.88" />
      </Parameters>
      <Docs>
        <param name="e">The event arguments that contain the drawing surface and information.</param>
        <summary>Implement this to draw on the canvas.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[
## Remarks

There are two ways to draw on this surface: by overriding the
<xref:SkiaSharp.Views.Mac.SKGLView.OnPaintSurface(SkiaSharp.Views.Mac.SKPaintGLSurfaceEventArgs)>
method, or by attaching a handler to the
<xref:SkiaSharp.Views.Mac.SKGLView.PaintSurface>
event.

> [!IMPORTANT]
> If this method is overridden, then the base must be called, otherwise the
> event will not be fired.

> [!NOTE]
> If a version of SkiaSharp prior to version v1.68.x is being used, then the
> <xref:SkiaSharp.Views.Mac.SKGLView.DrawInSurface(SkiaSharp.SKSurface,SkiaSharp.GRBackendRenderTargetDesc)>
> method should be overridden instead of
> <xref:SkiaSharp.Views.Mac.SKGLView.OnPaintSurface(SkiaSharp.Views.Mac.SKPaintGLSurfaceEventArgs)>.

## Examples

```csharp
protected override void OnPaintSurface (SKPaintGLSurfaceEventArgs e)
{
    // call the base method
    base.OnPaintSurface (e);

    var surface = e.Surface;
    var surfaceWidth = e.BackendRenderTarget.Width;
    var surfaceHeight = e.BackendRenderTarget.Height;

    var canvas = surface.Canvas;

    // draw on the canvas

    canvas.Flush ();
}
```
]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PaintSurface">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;SkiaSharp.Views.Mac.SKPaintGLSurfaceEventArgs&gt; PaintSurface;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class SkiaSharp.Views.Mac.SKPaintGLSurfaceEventArgs&gt; PaintSurface" />
      <MemberSignature Language="DocId" Value="E:SkiaSharp.Views.Mac.SKGLView.PaintSurface" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>SkiaSharp.Views.Mac</AssemblyName>
        <AssemblyVersion>1.60.0.0</AssemblyVersion>
        <AssemblyVersion>1.68.0.0</AssemblyVersion>
        <AssemblyVersion>2.80.0.0</AssemblyVersion>
        <AssemblyVersion>2.88.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;SkiaSharp.Views.Mac.SKPaintGLSurfaceEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Occurs when the surface needs to be redrawn.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[
## Remarks

There are two ways to draw on this surface: by overriding the
<xref:SkiaSharp.Views.Mac.SKGLView.OnPaintSurface(SkiaSharp.Views.Mac.SKPaintGLSurfaceEventArgs)>
method, or by attaching a handler to the
<xref:SkiaSharp.Views.Mac.SKGLView.PaintSurface>
event.

> [!NOTE]
> If a version of SkiaSharp prior to version v1.68.x is being used, then the
> <xref:SkiaSharp.Views.Mac.SKGLView.DrawInSurface(SkiaSharp.SKSurface,SkiaSharp.GRBackendRenderTargetDesc)>
> method should be overridden instead of
> <xref:SkiaSharp.Views.Mac.SKGLView.OnPaintSurface(SkiaSharp.Views.Mac.SKPaintGLSurfaceEventArgs)>.

## Examples

```csharp
myView.PaintSurface += (sender, e) => {
    var surface = e.Surface;
    var surfaceWidth = e.BackendRenderTarget.Width;
    var surfaceHeight = e.BackendRenderTarget.Height;

    var canvas = surface.Canvas;

    // draw on the canvas

    canvas.Flush ();
};
```
]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PrepareOpenGL">
      <MemberSignature Language="C#" Value="public override void PrepareOpenGL ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void PrepareOpenGL() cil managed" />
      <MemberSignature Language="DocId" Value="M:SkiaSharp.Views.Mac.SKGLView.PrepareOpenGL" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>SkiaSharp.Views.Mac</AssemblyName>
        <AssemblyVersion>1.60.0.0</AssemblyVersion>
        <AssemblyVersion>1.68.0.0</AssemblyVersion>
        <AssemblyVersion>2.80.0.0</AssemblyVersion>
        <AssemblyVersion>2.88.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Used by subclasses to initialize OpenGL state.</summary>
        <remarks></remarks>
      </Docs>
    </Member>
    <Member MemberName="Reshape">
      <MemberSignature Language="C#" Value="public override void Reshape ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Reshape() cil managed" />
      <MemberSignature Language="DocId" Value="M:SkiaSharp.Views.Mac.SKGLView.Reshape" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>SkiaSharp.Views.Mac</AssemblyName>
        <AssemblyVersion>1.68.0.0</AssemblyVersion>
        <AssemblyVersion>2.80.0.0</AssemblyVersion>
        <AssemblyVersion>2.88.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Called by Cocoa when the view's visible rectangle or bounds change.</summary>
        <remarks></remarks>
      </Docs>
    </Member>
  </Members>
</Type>
